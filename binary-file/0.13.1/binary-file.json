{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "binary-file",
      "version": [
        0,
        13,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "author": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/binary-file.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/binary-file.git",
        "module": null,
        "branch": null,
        "tag": "0.13.1",
        "subdir": null
      }
    ],
    "synopsis": "read/write binary file",
    "description": "> runghc -XQuasiQuotes -XTypeFamilies -XFlexibleInstances exam.hs some.bmp\n\nexam.hs:\n\n> import File.Binary\n> import File.Binary.Data.LittleEndian\n> import System.Environment\n> import Data.ByteString.Lazy as BSL\n>\n> main = do\n>\t[inf] <- getArgs\n>   cnt <- BS.readFile inf\n>\tlet (bmp, rest) = fromBinary () cnt :: (Bitmap, String)\n>\tprint bmp\n>\n> instance Field (Int, Int, Int) where\n>    type FieldArgument (Int, Int, Int) = ()\n>    fromBinary _ s = let\n>        (b, rest) = toType 1 s\n>        (g, rest') = toType 1 rest\n>        (r, rest'') = toType 1 rest' in\n>        ((b, g, r), snd $ getBytes 1 1 rest'')\n>    toBinary _ (b, g, r) = concatBinary [\n>        fromType 1 b, fromType 1 g, fromType 1 r,\n>        makeBinary $ BSL.singleton 0]\n>\n> [binary|\n>\n> Bitmap\n>\n> 2: \"BM\"\n> 4: file_size\n> 2: 0\n> 2: 0\n> 4: offset\n>\n> 4: 40\n> 4: width\n> 4: height\n> 2: 1\n> 2: bits_per_pixel\n> 4: compression\n> 4: image_size\n> 4: resolutionH\n> 4: resolutionV\n> 4: color_num\n> 4: important_color_num\n> ((), Just color_num)<[(Int, Int, Int)]>: colors\n> ((), image_size)<String>: image\n>\n> |]\n",
    "category": "File",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/readPNG.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "File",
          "Binary"
        ],
        [
          "File",
          "Binary",
          "Data",
          "LittleEndian"
        ],
        [
          "File",
          "Binary",
          "Data",
          "BigEndian"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "QuoteBinaryStructure"
          ],
          [
            "ParseBinaryStructure"
          ],
          [
            "Classes"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">3 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "peggy",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">3 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "peggy",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
