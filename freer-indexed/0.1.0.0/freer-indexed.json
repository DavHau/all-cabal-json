{
  "description": {
    "spec-version": {
      "Left": [
        1,
        12
      ]
    },
    "package": {
      "name": "freer-indexed",
      "version": [
        0,
        1,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2020 Evgeny Poberezkin",
    "maintainer": "evgeny@poberezkin.com",
    "author": "Evgeny Poberezkin",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/epoberezkin/freer-indexed#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/epoberezkin/freer-indexed/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/epoberezkin/freer-indexed",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Freer indexed monad for type-level resource-aware effectual operations.",
    "description": "This package defines \"freer indexed monad\". It combines the ideas of freer monad and indexed (aka parameterized) monad:\n\n* <http://okmij.org/ftp/Haskell/extensible/more.pdf Freer Monads, More Extensible Effects>\n* <http://okmij.org/ftp/Computation/monads.html#param-monad Parameterized monads>\n* <http://okmij.org/ftp/Haskell/extensible/index.html#extext Parameterized Extensible Effects and Session Types>\n\nIt allows defining indexed monadic computations as GADTs without making\nthem into ad-hoc indexed monads, and instead use this data type\nto convert them into Functor, XApplicative and XMonad instances\n- see Control.XApplicative and Control.XMonad in this package.\n\nThis package does not (yet) allow composing these computations.\n\nSemantically, these computations could represent type-level state changes\nof some associated resources, with the first index parameter meaning\ninitial resource state prior to the computation, and the second index -\nthe final resource state, making each computation an edge in the graph\nof resource state transitions.\n\nFor XApplicative/XMonad classes all class and additional functions have similar names\nto standard Applicative/Monad functions, following two naming conventions:\n\n* function names are prefixed with \"x\" (for \"indeXed\") - e.g. `xpure`, `xreturn`, `xliftM2` etc.\n* operators are postfixed with \":\" - e.g. `<*>:`, `>>=:`, `>=>:` etc.",
    "category": "Effects",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "XApplicative"
        ],
        [
          "Control",
          "XFreer"
        ],
        [
          "Control",
          "XMonad"
        ],
        [
          "Control",
          "XMonad",
          "Do"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Paths_freer_indexed"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wcompat",
            "-Worphans",
            "-Werror=incomplete-patterns",
            "-Werror=incomplete-uni-patterns",
            "-Wno-name-shadowing"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
