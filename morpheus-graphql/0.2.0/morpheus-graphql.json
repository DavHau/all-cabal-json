{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "morpheus-graphql",
      "version": [
        0,
        2,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2019 Daviti Nalchevanidze",
    "maintainer": "d.nalchevanidze@gmail.com",
    "author": "Daviti Nalchevanidze",
    "stability": "",
    "tested-with": [],
    "homepage": "https://morpheusgraphql.com",
    "pkg-url": "",
    "bug-reports": "https://github.com/nalchevanidze/morpheus-graphql/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/nalchevanidze/morpheus-graphql",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Morpheus GraphQL",
    "description": "Build GraphQL APIs with your favourite functional language!",
    "category": "web, graphql",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "test/Feature/Holistic/API.gql",
      "test/Feature/Holistic/arguments/nameConflict/query.gql",
      "test/Feature/Holistic/arguments/nameConflict/response.json",
      "test/Feature/Holistic/arguments/undefinedArgument/query.gql",
      "test/Feature/Holistic/arguments/undefinedArgument/response.json",
      "test/Feature/Holistic/arguments/unknownArguments/query.gql",
      "test/Feature/Holistic/arguments/unknownArguments/response.json",
      "test/Feature/Holistic/cases.json",
      "test/Feature/Holistic/fragment/cannotBeSpreadOnType/query.gql",
      "test/Feature/Holistic/fragment/cannotBeSpreadOnType/response.json",
      "test/Feature/Holistic/fragment/inlineFragment/query.gql",
      "test/Feature/Holistic/fragment/inlineFragment/response.json",
      "test/Feature/Holistic/fragment/inlineFragmentTypeMismatch/query.gql",
      "test/Feature/Holistic/fragment/inlineFragmentTypeMismatch/response.json",
      "test/Feature/Holistic/fragment/loopingFragment/query.gql",
      "test/Feature/Holistic/fragment/loopingFragment/response.json",
      "test/Feature/Holistic/fragment/nameCollision/query.gql",
      "test/Feature/Holistic/fragment/nameCollision/response.json",
      "test/Feature/Holistic/fragment/unknownTargetType/query.gql",
      "test/Feature/Holistic/fragment/unknownTargetType/response.json",
      "test/Feature/Holistic/fragment/unusedFragment/query.gql",
      "test/Feature/Holistic/fragment/unusedFragment/response.json",
      "test/Feature/Holistic/introspection/defaultTypes/Boolean/query.gql",
      "test/Feature/Holistic/introspection/defaultTypes/Boolean/response.json",
      "test/Feature/Holistic/introspection/defaultTypes/Float/query.gql",
      "test/Feature/Holistic/introspection/defaultTypes/Float/response.json",
      "test/Feature/Holistic/introspection/defaultTypes/ID/query.gql",
      "test/Feature/Holistic/introspection/defaultTypes/ID/response.json",
      "test/Feature/Holistic/introspection/defaultTypes/Int/query.gql",
      "test/Feature/Holistic/introspection/defaultTypes/Int/response.json",
      "test/Feature/Holistic/introspection/defaultTypes/String/query.gql",
      "test/Feature/Holistic/introspection/defaultTypes/String/response.json",
      "test/Feature/Holistic/introspection/kinds/ENUM/query.gql",
      "test/Feature/Holistic/introspection/kinds/ENUM/response.json",
      "test/Feature/Holistic/introspection/kinds/INPUT_OBJECT/query.gql",
      "test/Feature/Holistic/introspection/kinds/INPUT_OBJECT/response.json",
      "test/Feature/Holistic/introspection/kinds/OBJECT/query.gql",
      "test/Feature/Holistic/introspection/kinds/OBJECT/response.json",
      "test/Feature/Holistic/introspection/kinds/SCALAR/query.gql",
      "test/Feature/Holistic/introspection/kinds/SCALAR/response.json",
      "test/Feature/Holistic/introspection/kinds/UNION/query.gql",
      "test/Feature/Holistic/introspection/kinds/UNION/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__Directive/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__Directive/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__DirectiveLocation/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__DirectiveLocation/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__EnumValue/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__EnumValue/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__Field/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__Field/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__InputValue/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__InputValue/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__Schema/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__Schema/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__Type/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__Type/response.json",
      "test/Feature/Holistic/introspection/schemaTypes/__TypeKind/query.gql",
      "test/Feature/Holistic/introspection/schemaTypes/__TypeKind/response.json",
      "test/Feature/Holistic/parsing/complex/query.gql",
      "test/Feature/Holistic/parsing/complex/response.json",
      "test/Feature/Holistic/parsing/duplicatedFields/query.gql",
      "test/Feature/Holistic/parsing/duplicatedFields/response.json",
      "test/Feature/Holistic/parsing/extraCommas/query.gql",
      "test/Feature/Holistic/parsing/extraCommas/response.json",
      "test/Feature/Holistic/parsing/generousSpaces/query.gql",
      "test/Feature/Holistic/parsing/generousSpaces/response.json",
      "test/Feature/Holistic/parsing/invalidFields/query.gql",
      "test/Feature/Holistic/parsing/invalidFields/response.json",
      "test/Feature/Holistic/parsing/invalidNotNullOperator/query.gql",
      "test/Feature/Holistic/parsing/invalidNotNullOperator/response.json",
      "test/Feature/Holistic/parsing/missingCloseBrace/query.gql",
      "test/Feature/Holistic/parsing/missingCloseBrace/response.json",
      "test/Feature/Holistic/parsing/notNullSpacing/query.gql",
      "test/Feature/Holistic/parsing/notNullSpacing/response.json",
      "test/Feature/Holistic/parsing/notNullSpacing/variables.json",
      "test/Feature/Holistic/selection/AliasNameConflict/query.gql",
      "test/Feature/Holistic/selection/AliasNameConflict/response.json",
      "test/Feature/Holistic/selection/AliasResolve/query.gql",
      "test/Feature/Holistic/selection/AliasResolve/response.json",
      "test/Feature/Holistic/selection/AliasUnknownField/query.gql",
      "test/Feature/Holistic/selection/AliasUnknownField/response.json",
      "test/Feature/Holistic/selection/hasNoSubFields/query.gql",
      "test/Feature/Holistic/selection/hasNoSubFields/response.json",
      "test/Feature/Holistic/selection/mustHaveSubFields/query.gql",
      "test/Feature/Holistic/selection/mustHaveSubFields/response.json",
      "test/Feature/Holistic/selection/nameConflict/query.gql",
      "test/Feature/Holistic/selection/nameConflict/response.json",
      "test/Feature/Holistic/selection/unknownField/query.gql",
      "test/Feature/Holistic/selection/unknownField/response.json",
      "test/Feature/Input/Enum/cases.json",
      "test/Feature/Input/Enum/decode2Con/query.gql",
      "test/Feature/Input/Enum/decode2Con/response.json",
      "test/Feature/Input/Enum/decode3Con/query.gql",
      "test/Feature/Input/Enum/decode3Con/response.json",
      "test/Feature/Input/Enum/decodeInvalidValue/query.gql",
      "test/Feature/Input/Enum/decodeInvalidValue/response.json",
      "test/Feature/Input/Enum/decodeMany/con0/query.gql",
      "test/Feature/Input/Enum/decodeMany/con0/response.json",
      "test/Feature/Input/Enum/decodeMany/con1/query.gql",
      "test/Feature/Input/Enum/decodeMany/con1/response.json",
      "test/Feature/Input/Enum/decodeMany/con2/query.gql",
      "test/Feature/Input/Enum/decodeMany/con2/response.json",
      "test/Feature/Input/Enum/decodeMany/con3/query.gql",
      "test/Feature/Input/Enum/decodeMany/con3/response.json",
      "test/Feature/Input/Enum/decodeMany/con4/query.gql",
      "test/Feature/Input/Enum/decodeMany/con4/response.json",
      "test/Feature/Input/Enum/decodeMany/con5/query.gql",
      "test/Feature/Input/Enum/decodeMany/con5/response.json",
      "test/Feature/Input/Enum/decodeMany/con6/query.gql",
      "test/Feature/Input/Enum/decodeMany/con6/response.json",
      "test/Feature/InputType/cases.json",
      "test/Feature/InputType/variables/incompatibleType/equalType/query.gql",
      "test/Feature/InputType/variables/incompatibleType/equalType/response.json",
      "test/Feature/InputType/variables/incompatibleType/equalType/variables.json",
      "test/Feature/InputType/variables/incompatibleType/stricterType/query.gql",
      "test/Feature/InputType/variables/incompatibleType/stricterType/response.json",
      "test/Feature/InputType/variables/incompatibleType/stricterType/variables.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType1/query.gql",
      "test/Feature/InputType/variables/incompatibleType/weakerType1/response.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType1/variables.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType2/query.gql",
      "test/Feature/InputType/variables/incompatibleType/weakerType2/response.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType2/variables.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType3/query.gql",
      "test/Feature/InputType/variables/incompatibleType/weakerType3/response.json",
      "test/Feature/InputType/variables/incompatibleType/weakerType3/variables.json",
      "test/Feature/InputType/variables/invalidValue/invalidListVariable/query.gql",
      "test/Feature/InputType/variables/invalidValue/invalidListVariable/response.json",
      "test/Feature/InputType/variables/invalidValue/invalidListVariable/variables.json",
      "test/Feature/InputType/variables/invalidValue/nestedListNonNullListReceivedNull/query.gql",
      "test/Feature/InputType/variables/invalidValue/nestedListNonNullListReceivedNull/response.json",
      "test/Feature/InputType/variables/invalidValue/nestedListNonNullListReceivedNull/variables.json",
      "test/Feature/InputType/variables/nestedListNullableListReceivedNull/query.gql",
      "test/Feature/InputType/variables/nestedListNullableListReceivedNull/response.json",
      "test/Feature/InputType/variables/nestedListNullableListReceivedNull/variables.json",
      "test/Feature/InputType/variables/nullableVariable/query.gql",
      "test/Feature/InputType/variables/nullableVariable/response.json",
      "test/Feature/InputType/variables/undefinedVariable/query.gql",
      "test/Feature/InputType/variables/undefinedVariable/response.json",
      "test/Feature/InputType/variables/unknownType/query.gql",
      "test/Feature/InputType/variables/unknownType/response.json",
      "test/Feature/InputType/variables/unusedVariable/unusedVariables/query.gql",
      "test/Feature/InputType/variables/unusedVariable/unusedVariables/response.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInAlias/query.gql",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInAlias/response.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInAlias/variables.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInFragment/query.gql",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInFragment/response.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInFragment/variables.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInInlineFragment/query.gql",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInInlineFragment/response.json",
      "test/Feature/InputType/variables/unusedVariable/variableUsedInInlineFragment/variables.json",
      "test/Feature/InputType/variables/validListVariable/query.gql",
      "test/Feature/InputType/variables/validListVariable/response.json",
      "test/Feature/InputType/variables/validListVariable/variables.json",
      "test/Feature/InputType/variables/valueNotProvided/nonNullVariable/query.gql",
      "test/Feature/InputType/variables/valueNotProvided/nonNullVariable/response.json",
      "test/Feature/Schema/cases.json",
      "test/Feature/Schema/nameCollision/query.gql",
      "test/Feature/Schema/nameCollision/response.json",
      "test/Feature/UnionType/cannotBeSpreadOnType/query.gql",
      "test/Feature/UnionType/cannotBeSpreadOnType/response.json",
      "test/Feature/UnionType/cases.json",
      "test/Feature/UnionType/fragmentOnAAndB/query.gql",
      "test/Feature/UnionType/fragmentOnAAndB/response.json",
      "test/Feature/UnionType/fragmentOnlyOnA/query.gql",
      "test/Feature/UnionType/fragmentOnlyOnA/response.json",
      "test/Feature/UnionType/inlineFragment/cannotBeSpreadOnType/query.gql",
      "test/Feature/UnionType/inlineFragment/cannotBeSpreadOnType/response.json",
      "test/Feature/UnionType/inlineFragment/fragmentOnAAndB/query.gql",
      "test/Feature/UnionType/inlineFragment/fragmentOnAAndB/response.json",
      "test/Feature/UnionType/selectionWithoutFragmentNotAllowed/query.gql",
      "test/Feature/UnionType/selectionWithoutFragmentNotAllowed/response.json",
      "test/Feature/WrappedTypeName/cases.json",
      "test/Feature/WrappedTypeName/ignoreMutationResolver/query.gql",
      "test/Feature/WrappedTypeName/ignoreMutationResolver/response.json",
      "test/Feature/WrappedTypeName/ignoreQueryResolver/query.gql",
      "test/Feature/WrappedTypeName/ignoreQueryResolver/response.json",
      "test/Feature/WrappedTypeName/ignoreSubscriptionResolver/query.gql",
      "test/Feature/WrappedTypeName/ignoreSubscriptionResolver/response.json",
      "test/Feature/WrappedTypeName/validWrappedTypes/query.gql",
      "test/Feature/WrappedTypeName/validWrappedTypes/response.json"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Morpheus"
        ],
        [
          "Data",
          "Morpheus",
          "Kind"
        ],
        [
          "Data",
          "Morpheus",
          "Types"
        ],
        [
          "Data",
          "Morpheus",
          "Server"
        ],
        [
          "Data",
          "Morpheus",
          "Document"
        ],
        [
          "Data",
          "Morpheus",
          "Client"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Morpheus",
            "Error",
            "Arguments"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Client",
            "Client"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Fragment"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Input"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Internal"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Mutation"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Schema"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Selection"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Subscription"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Utils"
          ],
          [
            "Data",
            "Morpheus",
            "Error",
            "Variable"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Client",
            "Aeson"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Client",
            "Build"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Client",
            "Compile"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Client",
            "Fetch"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Client",
            "Selection"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Document",
            "Compile"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Document",
            "Convert"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Document",
            "Declare"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Document",
            "GQLType"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Internal",
            "Declare"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Internal",
            "Utils"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Decode"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Encode"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Generics",
            "EnumRep"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Interpreter"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Introspect"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Server",
            "Resolve"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Subscription",
            "Apollo"
          ],
          [
            "Data",
            "Morpheus",
            "Execution",
            "Subscription",
            "ClientRegister"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Client",
            "ParseMeta"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Client",
            "Parser"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Document",
            "DataType"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Document",
            "Parse"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Document",
            "Parser"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Internal",
            "Create"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Internal",
            "Internal"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Internal",
            "Terms"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "JSONSchema",
            "Parse"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Arguments"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Body"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Fragment"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Operation"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Parser"
          ],
          [
            "Data",
            "Morpheus",
            "Parsing",
            "Request",
            "Value"
          ],
          [
            "Data",
            "Morpheus",
            "Rendering",
            "GQL"
          ],
          [
            "Data",
            "Morpheus",
            "Rendering",
            "Haskell",
            "Render"
          ],
          [
            "Data",
            "Morpheus",
            "Rendering",
            "Haskell",
            "Terms"
          ],
          [
            "Data",
            "Morpheus",
            "Rendering",
            "Haskell",
            "Types"
          ],
          [
            "Data",
            "Morpheus",
            "Rendering",
            "Haskell",
            "Values"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "Directive"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "DirectiveLocation"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "EnumValue"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "Field"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "InputValue"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "Internal",
            "RenderIntrospection"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "JSONType"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "Schema"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "SchemaAPI"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "Type"
          ],
          [
            "Data",
            "Morpheus",
            "Schema",
            "TypeKind"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Custom"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "GQLScalar"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "GQLType"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "ID"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "AST",
            "Operation"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "AST",
            "RawSelection"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "AST",
            "Selection"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "Base"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "Data"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "DataD"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "Stream"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "TH"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "Validation"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "Value"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Internal",
            "WebSocket"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "IO"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Resolver"
          ],
          [
            "Data",
            "Morpheus",
            "Types",
            "Types"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Arguments"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Fragment"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Input",
            "Enum"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Input",
            "Object"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Selection"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Utils",
            "Selection"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Utils",
            "Utils"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Validation"
          ],
          [
            "Data",
            "Morpheus",
            "Validation",
            "Variable"
          ],
          [
            "Paths_morpheus_graphql"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "aeson",
            "version-range": ">=1.0 && <=1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "attoparsec",
            "version-range": ">=0.13.2 && <0.14",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10.4 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.4.2.1 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "megaparsec",
            "version-range": ">=7.0.0 && <8.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.0 && <=2.2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "scientific",
            "version-range": ">=0.3.6.2 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.2.3.0 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.3.0.0 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unordered-containers",
            "version-range": ">=0.2.8.0 && <0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "utf8-string",
            "version-range": ">=1.0.1 && <1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "uuid",
            "version-range": ">=1.0 && <=1.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.12.0.1 && <0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "wai-websockets",
            "version-range": ">=1.0 && <=3.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "websockets",
            "version-range": ">=0.11.0 && <=0.12.5.3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "aeson",
        "version-range": ">=1.0 && <=1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "attoparsec",
        "version-range": ">=0.13.2 && <0.14",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10.4 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.4.2.1 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "megaparsec",
        "version-range": ">=7.0.0 && <8.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.0 && <=2.2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "scientific",
        "version-range": ">=0.3.6.2 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.2.3.0 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.3.0.0 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unordered-containers",
        "version-range": ">=0.2.8.0 && <0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "utf8-string",
        "version-range": ">=1.0.1 && <1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "uuid",
        "version-range": ">=1.0 && <=1.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.12.0.1 && <0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "wai-websockets",
        "version-range": ">=1.0 && <=3.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "websockets",
        "version-range": ">=0.11.0 && <=0.12.5.3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "morpheus": {
      "condTreeData": {
        "name": "morpheus",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "CLI"
          ],
          "otherModules": [
            [
              "Paths_morpheus_graphql"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "aeson",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "attoparsec",
              "version-range": ">=0.13.2 && <0.14",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.4.2.1 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": ">=1.1 && <1.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "megaparsec",
              "version-range": ">=7.0.0 && <8.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "morpheus-graphql",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": ">=0.12 && <0.15",
              "library": [
                {}
              ]
            },
            {
              "package-name": "scientific",
              "version-range": ">=0.3.6.2 && <0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.3.0.0 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unordered-containers",
              "version-range": ">=0.2.8.0 && <0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "utf8-string",
              "version-range": ">=1.0.1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "uuid",
              "version-range": ">=1.0 && <=1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.0.1 && <0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "wai-websockets",
              "version-range": ">=1.0 && <=3.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "websockets",
              "version-range": ">=0.11.0 && <=0.12.5.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "aeson",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "attoparsec",
          "version-range": ">=0.13.2 && <0.14",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.4.2.1 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": ">=1.1 && <1.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "megaparsec",
          "version-range": ">=7.0.0 && <8.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "morpheus-graphql",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": ">=0.12 && <0.15",
          "library": [
            {}
          ]
        },
        {
          "package-name": "scientific",
          "version-range": ">=0.3.6.2 && <0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.3.0.0 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unordered-containers",
          "version-range": ">=0.2.8.0 && <0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "utf8-string",
          "version-range": ">=1.0.1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "uuid",
          "version-range": ">=1.0 && <=1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.0.1 && <0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "wai-websockets",
          "version-range": ">=1.0 && <=3.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "websockets",
          "version-range": ">=0.11.0 && <=0.12.5.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "api": {
      "condTreeData": {
        "name": "api",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "examples"
          ],
          "otherModules": [
            [
              "Deprecated",
              "API"
            ],
            [
              "Deprecated",
              "Model"
            ],
            [
              "Files"
            ],
            [
              "Mythology",
              "API"
            ],
            [
              "Mythology",
              "Character",
              "Deity"
            ],
            [
              "Mythology",
              "Character",
              "Human"
            ],
            [
              "Mythology",
              "Place",
              "Places"
            ],
            [
              "TH",
              "API"
            ],
            [
              "TH",
              "Simple"
            ],
            [
              "Paths_morpheus_graphql"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "aeson",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "attoparsec",
              "version-range": ">=0.13.2 && <0.14",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.4.2.1 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "megaparsec",
              "version-range": ">=7.0.0 && <8.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "morpheus-graphql",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "scientific",
              "version-range": ">=0.3.6.2 && <0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "scotty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.3.0.0 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unordered-containers",
              "version-range": ">=0.2.8.0 && <0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "utf8-string",
              "version-range": ">=1.0.1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "uuid",
              "version-range": ">=1.0 && <=1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.0.1 && <0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "wai",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "wai-websockets",
              "version-range": ">=1.0 && <=3.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "warp",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "websockets",
              "version-range": ">=0.11.0 && <=0.12.5.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "aeson",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "attoparsec",
          "version-range": ">=0.13.2 && <0.14",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.4.2.1 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "megaparsec",
          "version-range": ">=7.0.0 && <8.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "morpheus-graphql",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "scientific",
          "version-range": ">=0.3.6.2 && <0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "scotty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.3.0.0 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unordered-containers",
          "version-range": ">=0.2.8.0 && <0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "utf8-string",
          "version-range": ">=1.0.1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "uuid",
          "version-range": ">=1.0 && <=1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.0.1 && <0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "wai",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "wai-websockets",
          "version-range": ">=1.0 && <=3.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "warp",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "websockets",
          "version-range": ">=0.11.0 && <=0.12.5.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  },
  "test-suites": {
    "morpheus-test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Spec.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Feature",
              "Holistic",
              "API"
            ],
            [
              "Feature",
              "Input",
              "Enum",
              "API"
            ],
            [
              "Feature",
              "InputType",
              "API"
            ],
            [
              "Feature",
              "Schema",
              "A2"
            ],
            [
              "Feature",
              "Schema",
              "API"
            ],
            [
              "Feature",
              "UnionType",
              "API"
            ],
            [
              "Feature",
              "WrappedTypeName",
              "API"
            ],
            [
              "Lib"
            ],
            [
              "TestFeature"
            ],
            [
              "Paths_morpheus_graphql"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "aeson",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "attoparsec",
              "version-range": ">=0.13.2 && <0.14",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": ">=0.10.4 && <0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.4.2.1 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "megaparsec",
              "version-range": ">=7.0.0 && <8.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "morpheus-graphql",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.0 && <=2.2.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "scientific",
              "version-range": ">=0.3.6.2 && <0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.2.3.0 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.3.0.0 && <0.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unordered-containers",
              "version-range": ">=0.2.8.0 && <0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "utf8-string",
              "version-range": ">=1.0.1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "uuid",
              "version-range": ">=1.0 && <=1.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.12.0.1 && <0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "wai-websockets",
              "version-range": ">=1.0 && <=3.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "websockets",
              "version-range": ">=0.11.0 && <=0.12.5.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "aeson",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "attoparsec",
          "version-range": ">=0.13.2 && <0.14",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": ">=0.10.4 && <0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.4.2.1 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "megaparsec",
          "version-range": ">=7.0.0 && <8.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "morpheus-graphql",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.0 && <=2.2.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "scientific",
          "version-range": ">=0.3.6.2 && <0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.2.3.0 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.3.0.0 && <0.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unordered-containers",
          "version-range": ">=0.2.8.0 && <0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "utf8-string",
          "version-range": ">=1.0.1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "uuid",
          "version-range": ">=1.0 && <=1.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.12.0.1 && <0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "wai-websockets",
          "version-range": ">=1.0 && <=3.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "websockets",
          "version-range": ">=0.11.0 && <=0.12.5.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
