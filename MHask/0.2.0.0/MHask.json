{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "MHask",
      "version": [
        0,
        2,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "danburton.email@gmail.com",
    "author": "Dan Burton",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/DanBurton/MHask#readme",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/DanBurton/MHask.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/DanBurton/MHask.git",
        "module": null,
        "branch": null,
        "tag": "MHask-0.2.0.0",
        "subdir": null
      }
    ],
    "synopsis": "The category of monads",
    "description": "MHask is the category where\n\n* The objects are Haskell types of kind @(* → *)@ that have an instance of `Prelude.Monad'\n\n* An arrow from object m to object n is a Haskell function of the form @(forall x. m x → n x)@\n\n* Arrow composition is merely a specialization of Haskell function composition\n\n* The identity arrow for the object m is the `Prelude.id' function in Haskell,\nspecialized to @(forall x. m x → m x)@\n\nIt is assumed that any instances of the classes provided here also have an instance\nfor Monad of the form @instance (Monad m) ⇒ Monad (t m)@, thus guaranteeing that @(t m)@\n(or @(t i j m)@ for the indexed types) is always a Monad. If it were valid Haskell, I'd write:\n\n> class (forall m. Monad m ⇒ Monad (t m)) ⇒ Functor t\n\n'MHask.Functor.Functor' should actually be called Endofunctor, because if m is an object in MHask,\nthen an instance t of `Functor' can map object m to object (t m), and arrows from\nm to n get mapped to arrows from (t m) to (t n).",
    "category": "Control",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "MHask"
        ],
        [
          "MHask",
          "Comonad"
        ],
        [
          "MHask",
          "Monad"
        ],
        [
          "MHask",
          "Copointed"
        ],
        [
          "MHask",
          "Pointed"
        ],
        [
          "MHask",
          "Util"
        ],
        [
          "MHask",
          "Functor"
        ],
        [
          "MHask",
          "Indexed",
          "Comonad"
        ],
        [
          "MHask",
          "Indexed",
          "Monad"
        ],
        [
          "MHask",
          "Indexed",
          "Copointed"
        ],
        [
          "MHask",
          "Indexed",
          "Pointed"
        ],
        [
          "MHask",
          "Indexed",
          "Functor"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=2 && <4.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=2 && <4.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
