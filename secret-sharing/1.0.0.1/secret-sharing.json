{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "secret-sharing",
      "version": [
        1,
        0,
        0,
        1
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Peter Robinson 2014",
    "maintainer": "peter.robinson@monoid.at",
    "author": "Peter Robinson <peter.robinson@monoid.at>",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.8.3"
      }
    ],
    "homepage": "http://monoid.at/code",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Information-theoretic secure secret sharing ",
    "description": "Implementation of an (@m@,@n@)-threshold secret sharing scheme.\nA given ByteString @b@ (the secret) is split into @n@ shares,\nand any @m@ shares are sufficient to reconstruct @b@.\nThe scheme preserves information-theoretic perfect secrecy in the sense that the knowledge of up\nto @m-1@ shares does not reveal any information about the secret @b@.\n\n/Example in GHCi:/\nSuppose that you want to split the string \\\"my secret data\\\" into n=5 shares such that\nat least m=3 shares are necessary to reconstruct the secret.\n\n>> :m + Data.ByteString.Lazy.Char8 Crypto.SecretSharing\n>> let secret = pack \"my secret message!\"\n>> shares <- encode 3 5 secret\n>> mapM_ (Prelude.putStrLn . show) shares -- each share should be deposited at a different site.\n> (1,\"\\134\\168\\154\\SUBV\\248\\CAN:\\250y<\\GS\\EOT*\\t\\222_\\140\")\n> (2,\"\\225\\206\\241\\136\\SUBse\\199r\\169\\162\\131D4\\179P\\210x\")\n> (3,\"~\\238%\\192\\174\\206\\\\\\f\\214\\173\\162\\148\\&3\\139_\\183\\193\\235\")\n> (4,\"Z\\b0\\188\\DC2\\f\\247\\f,\\136\\&6S\\209\\&5\\n\\FS,\\223\")\n> (5,\"x\\EM\\CAN\\DELI*<\\193q7d\\192!/\\183v\\DC3T\")\n>> let shares' = Prelude.drop 2 shares\n>> decode shares'\n> \"my secret message!\"\n\nThe mathematics behind the secret sharing scheme is described in:\n\\\"/How to share a secret/.\\\" by Adi Shamir.\nIn Communications of the ACM 22 (11): 612â€“613, 1979.",
    "category": "Cryptography ",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Crypto",
          "SecretSharing"
        ],
        [
          "Crypto",
          "SecretSharing",
          "Internal"
        ],
        [
          "Crypto",
          "SecretSharing",
          "FiniteField"
        ],
        [
          "Crypto",
          "SecretSharing",
          "Prime"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.6.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "==0.10.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "dice-entropy-conduit",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "binary",
            "version-range": ">=0.5.1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.10.11.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "finite-field",
            "version-range": ">=0.8.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "polynomial",
            "version-range": ">=0.7.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.6.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "==0.10.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "dice-entropy-conduit",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "binary",
        "version-range": ">=0.5.1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.10.11.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "finite-field",
        "version-range": ">=0.8.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "polynomial",
        "version-range": ">=0.7.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "Main": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Tests.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src",
            "tests"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [
            [
              "x-uses-tf",
              "true"
            ]
          ],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework",
              "version-range": ">=0.4.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework-quickcheck2",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework",
          "version-range": ">=0.4.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework-quickcheck2",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
