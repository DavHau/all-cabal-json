{
  "description": {
    "spec-version": {
      "Right": ">=1.10.0"
    },
    "package": {
      "name": "haskell-src-exts-qq",
      "version": [
        0,
        6,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Mathieu Boespflug <mboes@tweag.net>",
    "author": "Mathieu Boespflug",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.0.1"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/mboes/haskell-src-exts-qq",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A quasiquoter for haskell-src-exts.",
    "description": "Allows one to write programs that generate Haskell programs much\nmore concisely and legibly. This package supports:\n\n* Antiquotations, denoted by stealing the splice syntax of\nTemplate Haskell, for example @[hs| $x ++ $(Hs.strE \"bar\") |]@.\nSplices may not nested.\n\n* Antiquoting pattern variables in patterns, using double\nparentheses. For instance:\n\n> let x = Hs.name \"n\" in [hs| \\ ((x)) -> $(Hs.Var (Hs.UnQual x)) + 1 |]\n\n* Antiquoting bound names. Names that are antiquoted appear\nsurrounded by double underscores. For instance:\n\n> let f = \"incr\"\n>     fE = Hs.Var $ Hs.UnQual $ Hs.name f\n> in [hs| let __f__ x = x + 1 in $fE 10 |]\n\nWe need three different syntaxes for antiquotations, because we do\nnot extend the haskell-src-exts parser in any way and the Template\nHaskell splicing syntax is only available in expression contexts.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Language",
          "Haskell",
          "Exts",
          "QQ"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "CPP"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "syb",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell-src-exts",
            "version-range": ">=1.9.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell-src-meta",
            "version-range": ">=0.3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "syb",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell-src-exts",
        "version-range": ">=1.9.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell-src-meta",
        "version-range": ">=0.3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
