{
  "description": {
    "spec-version": {
      "Left": [
        1,
        12
      ]
    },
    "package": {
      "name": "dynamic-pipeline",
      "version": [
        0,
        1,
        0,
        3
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (C) 2021 Juan Pablo Royo Sales",
    "maintainer": "juanpablo.royo@gmail.com",
    "author": "Juan Pablo Royo Sales",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/jproyo/dynamic-pipeline#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/jproyo/dynamic-pipeline/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/jproyo/dynamic-pipeline",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Library Type Safe implementation of Dynamic Pipeline Paradigm (DPP).",
    "description": "@dynamic-pipeline@ is a __/Type Safe/__ Dynamic and Parallel Streaming Library, which is an implementation of __Dynamic Pipeline Paradigm (DPP)__\nproposed in this paper [DPP](https://biblioteca.sistedes.es/articulo/the-dynamic-pipeline-paradigm/).\n\nThe aim of this tool is to provide all the __Type level__ constructs to guide the user in building a /DPP/ flow to solve any algorithm that fits on\nthis computational model.\n\nThe idea behind the implementation is similar to other __Type level__ programming libraries like [@servant@](https://hackage.haskell.org/package/servant)\n\nSome of the feature of this library includes:\n\n* /Small Number of Dependencies/: Dependencies have been kept to minimum in order to reduce compilation time.\n\n* /Type Level Encoding/: As it was explained before, there is an intensive use of Type Level techniques in the Library in order to guide the user in\ndefining the Flow Model and fill the gaps with the combinators provided and the Compiler indications. On the other hand some /Type Custom Errors/ have been\nencoded in the Library in order to provide meaningful messages about the Data Flow Grammar Defined in /DPP/.\n\n* /Stream Parallelization/: __DPP__ model follows a /Parallelization Pipeline/ approach with the use of intermediate Channels. All the burden have been hidden\nfor the user in order to reduce complexity and focus on the algorithm problem implementations.\n\n* /Safe Scoped Execution/: Use of Existential to define the Scope execution of /DPP/ reducing even more the complexity to the user.\n\nImport \"DynamicPipeline\" for using the library.\n\n* /Examples/: <src/examples examples directory> in the package",
    "category": "Data,Data Flow,Pipes,Streaming,Parallel,Type-safe",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "DynamicPipeline"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "DynamicPipeline",
            "Channel"
          ],
          [
            "DynamicPipeline",
            "Flow"
          ],
          [
            "DynamicPipeline",
            "Stage"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveAnyClass"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveLift"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "DerivingVia"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "PackageImports"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "Rank2Types"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeFamilies"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-fno-warn-partial-type-signatures",
            "-fconstraint-solver-iterations=0",
            "-fspecialise-aggressively",
            "-fexpose-all-unfoldings",
            "-flate-specialise",
            "-Wincomplete-record-updates",
            "-Wincomplete-uni-patterns",
            "-Wredundant-constraints",
            "-Wno-unused-top-binds",
            "-Wno-unused-foralls",
            "-fno-warn-deprecations",
            "-fno-warn-orphans"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "HList",
            "version-range": ">=0.5.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "async",
            "version-range": ">=2.1.0 && <=2.2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10.9.0 && <=0.11.1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "compdata",
            "version-range": ">=0.10 && <=0.12.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4.19 && <=5.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "relude",
            "version-range": ">=0.7.0.0 && <=1.0.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unagi-chan",
            "version-range": ">=0.4.1.0",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "HList",
        "version-range": ">=0.5.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "async",
        "version-range": ">=2.1.0 && <=2.2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10.9.0 && <=0.11.1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "compdata",
        "version-range": ">=0.10 && <=0.12.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4.19 && <=5.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "relude",
        "version-range": ">=0.7.0.0 && <=1.0.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unagi-chan",
        "version-range": ">=0.4.1.0",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "examples": {
      "condTreeData": {
        "name": "examples",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "examples"
          ],
          "otherModules": [
            [
              "Graph",
              "ConnComp"
            ],
            [
              "Graph",
              "ConnectedComp"
            ],
            [
              "Misc",
              "RepeatedDP"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "DeriveAnyClass"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "DerivingVia"
            },
            {
              "enable-extension": "EmptyCase"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "disable-extension": "ImplicitPrelude"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "PackageImports"
            },
            {
              "enable-extension": "PartialTypeSignatures"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "Rank2Types"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeFamilies"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-fno-warn-partial-type-signatures",
              "-fconstraint-solver-iterations=0",
              "-fspecialise-aggressively",
              "-fexpose-all-unfoldings",
              "-flate-specialise",
              "-Wincomplete-record-updates",
              "-Wincomplete-uni-patterns",
              "-Wredundant-constraints",
              "-Wno-unused-top-binds",
              "-Wno-unused-foralls",
              "-fno-warn-deprecations",
              "-fno-warn-orphans",
              "-threaded",
              "-O3",
              "-rtsopts",
              "-with-rtsopts=-N"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "HList",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "async",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": ">=0.10.9.0 && <=0.11.1.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "compdata",
              "version-range": ">=0.10 && <=0.12.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dynamic-pipeline",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": ">=4.19 && <=5.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "optparse-applicative",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "relude",
              "version-range": ">=0.7.0.0 && <=1.0.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "trifecta",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unagi-chan",
              "version-range": ">=0.4.1.0",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "HList",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "async",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": ">=0.10.9.0 && <=0.11.1.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "compdata",
          "version-range": ">=0.10 && <=0.12.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dynamic-pipeline",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": ">=4.19 && <=5.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "optparse-applicative",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "relude",
          "version-range": ">=0.7.0.0 && <=1.0.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "trifecta",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unagi-chan",
          "version-range": ">=0.4.1.0",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  },
  "test-suites": {
    "conn-comp-tests": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Spec.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [
            {
              "package-name": "hspec-discover",
              "executable-component-name": "hspec-discover",
              "version-range": "-any"
            }
          ],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Paths_dynamic_pipeline"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "DeriveAnyClass"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "DerivingVia"
            },
            {
              "enable-extension": "EmptyCase"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "MultiWayIf"
            },
            {
              "disable-extension": "ImplicitPrelude"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "PackageImports"
            },
            {
              "enable-extension": "PartialTypeSignatures"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "Rank2Types"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeFamilies"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-fno-warn-partial-type-signatures",
              "-fconstraint-solver-iterations=0",
              "-fspecialise-aggressively",
              "-fexpose-all-unfoldings",
              "-flate-specialise",
              "-Wincomplete-record-updates",
              "-Wincomplete-uni-patterns",
              "-Wredundant-constraints",
              "-Wno-unused-top-binds",
              "-Wno-unused-foralls",
              "-fno-warn-deprecations",
              "-fno-warn-orphans",
              "-threaded",
              "-O2",
              "-rtsopts",
              "-with-rtsopts=-N",
              "-Wno-unused-local-binds",
              "-Wno-unused-matches"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "HList",
              "version-range": ">=0.5.0.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "async",
              "version-range": ">=2.1.0 && <=2.2.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": ">=0.10.9.0 && <=0.11.1.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "compdata",
              "version-range": ">=0.10 && <=0.12.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "dynamic-pipeline",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hspec",
              "version-range": "==2.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": ">=4.19 && <=5.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "relude",
              "version-range": ">=1.0.0.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unagi-chan",
              "version-range": ">=0.4.1.0",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "HList",
          "version-range": ">=0.5.0.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "async",
          "version-range": ">=2.1.0 && <=2.2.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": ">=0.10.9.0 && <=0.11.1.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "compdata",
          "version-range": ">=0.10 && <=0.12.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "dynamic-pipeline",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hspec",
          "version-range": "==2.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": ">=4.19 && <=5.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "relude",
          "version-range": ">=1.0.0.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unagi-chan",
          "version-range": ">=0.4.1.0",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
