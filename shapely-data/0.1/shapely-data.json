{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "shapely-data",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "brandon.m.simmons@gmail.com",
    "author": "Brandon Simmons",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      }
    ],
    "homepage": "http://github.com/jberryman/shapely-data ",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/jberryman/shapely-data.git",
        "module": null,
        "branch": "master",
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Generics using @(,)@ and @Either@, with algebraic operations and typed conversions",
    "description": "@shapely-data@ is a library for working with algebraic datatypes in a\nsimple generic form made up of haskell's primitive product, sum and unit\ntypes: `(,)`, `Either`, and `()`, providing something like light-weight\nStructural Typing.\n\nThe library was not designed to facilitate generic traversals or\nabstraction over different recursion schemes, but rather to (from most to\nleast important)\n\n- Provide a good story for @(,)@/@Either@ as a /lingua franca/ generic\nrepresentation that other library writers can use without dependencies,\nencouraging abstractions in terms of products and sums\n\n- Support algebraic operations on ADTs, making types composable\n\n- Support powerful, typed conversions between 'Shapely' types\n\n/Influences/\n\nI've taken lots of inspiration, code, names, ideas, and type-level\nprogramming techniques from, in particular\n\n- Oleg Kiselyov's \"HList\" work\n\n- Edward Kmett's \"categories\" package\n\n- Chris Taylor's \"Algebra of Algebraic Datatypes\" series at\n<http://chris-taylor.github.io/blog/2013/02/10/the-algebra-of-algebraic-data-types/>\n\n/Issues and Limitations:/\n\n- 'massage' does not support mutually-recursive types and other more\ncomplicated recursion schemes, nor type application.\n\n- While all classes except 'Shapely' are considered closed, we don't do any\ntricks to enforce that in the API yet.\n\n- In fancier functions that use type equality (e.g. 'coerce'), types need to\nbe unambiguous so type signatures are sometimes required.\n\n- type errors, especially in 'massage' and 'coerce', can be cryptic\n\n- TH deriving hasn't been considered for fancier types like GADTs,\nexistential types, etc. some of which may have sensible Shapely instances\n\n- Performance hasn't been tested at all yet.",
    "category": "Data, Generics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "examples/Generics.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Shapely"
        ],
        [
          "Data",
          "Shapely",
          "Normal"
        ],
        [
          "Data",
          "Shapely",
          "Spine"
        ],
        [
          "Data",
          "Shapely",
          "Normal",
          "TypeIndexed"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Shapely",
            "Category"
          ],
          [
            "Data",
            "Shapely",
            "Bool"
          ],
          [
            "Data",
            "Shapely",
            "Classes"
          ],
          [
            "Data",
            "Shapely",
            "Normal",
            "Classes"
          ],
          [
            "Data",
            "Shapely",
            "Normal",
            "Exponentiation"
          ],
          [
            "Data",
            "Shapely",
            "Normal",
            "Coercible"
          ],
          [
            "Data",
            "Shapely",
            "Normal",
            "Massageable"
          ],
          [
            "Data",
            "Shapely",
            "TH"
          ],
          [
            "Data",
            "Shapely",
            "Utilities"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "TemplateHaskell"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "<5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tagged",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "proxy-kindness",
            "version-range": "==0.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "<5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tagged",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "proxy-kindness",
        "version-range": "==0.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test",
            "src"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "<5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": ">=2 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tagged",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "proxy-kindness",
              "version-range": "==0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "shapely-data",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "<5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": ">=2 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tagged",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "proxy-kindness",
          "version-range": "==0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "shapely-data",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
