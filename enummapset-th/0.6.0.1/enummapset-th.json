{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "enummapset-th",
      "version": [
        0,
        6,
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Â© 2013 Liyang HU",
    "maintainer": "enummapset-th@liyang.hu",
    "author": "Liyang HU",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/liyang/enummapset-th",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "http://github.com/liyang/enummapset-th",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "TH-generated EnumSet/EnumMap wrappers around IntSet/IntMap.",
    "description": "This package wraps @IntSet@ and @IntMap@ from @containers@, and provides\nfast sets and maps keyed on any data type with a well-behaved @Enum@\ninstance. Useful for derived @Enum@s, newtype'd @Int@s, or any data type\nthat can be packed into an @Int@: just implement @fromEnum@ and @toEnum@.\n\nThe boilerplate is generated using Template Haskell, so unlike\n@enummapset@ it's easier to maintain and keep up-to-date with\n@containers@. On the downside, it's less portable.\n\nNote that \"Data.EnumMap.Lazy\" and \"Data.EnumMap.Strict\" provide distinct\nnewtype wrappers, and their respective 'Functor' instances behave as\nexpected, unlike that of @IntMap@ which is alway lazy.",
    "category": "Data",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "include/map.inc"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "EnumMap",
          "Lazy"
        ],
        [
          "Data",
          "EnumMap",
          "Strict"
        ],
        [
          "Data",
          "EnumSet"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Data",
            "EnumMapSetWrapper"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [
          "include"
        ],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.5 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.7 && <2.10",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.5 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.7 && <2.10",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
