{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "wai-routes",
      "version": [
        0,
        5,
        0
      ]
    },
    "license": {
      "Right": "MIT"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "ajnsit@gmail.com",
    "author": "Anupam Jain",
    "stability": "Experimental",
    "tested-with": [],
    "homepage": "https://github.com/ajnsit/wai-routes",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "http://github.com/ajnsit/wai-routes",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "http://github.com/ajnsit/wai-routes/tree/v0.5.0",
        "module": null,
        "branch": null,
        "tag": "v0.5.0",
        "subdir": null
      }
    ],
    "synopsis": "Typesafe URLs for Wai applications.",
    "description": "Provides easy to use typesafe URLs for Wai Applications.\n\nSample usage follows (See examples/Example.hs in the source bundle for the full code) -\n\n@\n&#123;-&#35; LANGUAGE OverloadedStrings, TypeFamilies &#35;-&#125;\n\nimport Network.Wai\nimport Network.Wai.Middleware.Routes\n\nimport Data.IORef\n\n&#45;&#45; The Site Argument\ndata MyRoute = MyRoute (IORef DB)\n\n&#45;&#45; Generate Routes\nmkRoute \"MyRoute\" &#91;parseRoutes&#124;\n&#47;             UsersR         GET\n&#47;user&#47;&#35;Int    UserR&#58;\n&#32;&#32;/              UserRootR   GET\n&#32;&#32;/delete        UserDeleteR POST\n&#124;&#93;\n\n&#45;&#45; Define Handlers\n&#45;&#45; All Users Page\ngetUsersR &#58;&#58; Handler MyRoute\ngetUsersR (MyRoute dbref) request = ...\n&#45;&#45; Single User Page\ngetUserRootR &#58;&#58; Int -> Handler MyRoute\ngetUserRootR userid (MyRoute dbref) request = ...\n&#45;&#45; Delete Single User\npostUserDeleteR &#58;&#58; Int -> Handler MyRoute\npostUserDeleteR userid (MyRoute dbref) request = ...\n\n&#45;&#45; Define Application using RouteM Monad\nmyApp = do\n&#32;&#32;db <- liftIO &#36; newIORef mydb\n&#32;&#32;route (MyRoute db)\n&#32;&#32;setDefaultAction $ staticApp $ defaultFileServerSettings &#34;static&#34;\n\n&#45;&#45; Run the application\nmain &#58;&#58; IO ()\nmain = toWaiApp myApp >>= run 8080\n@",
    "category": "Network",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": "",
    "extra-source-files": [
      "README.md",
      "examples/Example.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Network",
          "Wai",
          "Middleware",
          "Routes"
        ],
        [
          "Network",
          "Wai",
          "Middleware",
          "Routes",
          "Routes"
        ],
        [
          "Network",
          "Wai",
          "Middleware",
          "Routes",
          "Monad"
        ],
        [
          "Network",
          "Wai",
          "Middleware",
          "Routes",
          "Handler"
        ],
        [
          "Network",
          "Wai",
          "Middleware",
          "Routes",
          "ContentTypes"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.6.0.1 && <4.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "wai",
            "version-range": ">=2.0.0 && <2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=0.11.3.1 && <0.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10.0.2 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "http-types",
            "version-range": ">=0.8.3 && <0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "blaze-builder",
            "version-range": ">=0.3.3.2 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.8.0.0 && <2.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "yesod-routes",
            "version-range": ">=1.2.0.6 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.1.2 && <2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "aeson",
            "version-range": ">=0.7.0.1 && <0.8",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.6.0.1 && <4.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "wai",
        "version-range": ">=2.0.0 && <2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=0.11.3.1 && <0.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10.0.2 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "http-types",
        "version-range": ">=0.8.3 && <0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "blaze-builder",
        "version-range": ">=0.3.3.2 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.8.0.0 && <2.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "yesod-routes",
        "version-range": ">=1.2.0.6 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.1.2 && <2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "aeson",
        "version-range": ">=0.7.0.1 && <0.8",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
