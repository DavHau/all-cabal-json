{
  "description": {
    "spec-version": {
      "Right": "-any"
    },
    "package": {
      "name": "trhsx",
      "version": [
        0,
        2,
        1
      ]
    },
    "license": {
      "Right": "BSD4"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Niklas Broberg <nibro@cs.chalmers.se>",
    "author": "Niklas Broberg",
    "stability": "Experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==6.8.3"
      }
    ],
    "homepage": "http://www.cs.chalmers.se/~d00nibro/harp/",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "trhsx is the preprocessor for Harp and HSP",
    "description": "trhsx, the desugaring pre-processor executable for HaRP and HSP.\nRequires haskell-src-exts to build.\n\nIt is meant to be used as a preprocessor for GHC, with the command\n'ghc -F -pgmF trhsx infile'. It can also be used as a separate tool,\nin which case the command-line syntax is:\n\n$ trhsx \\<infile\\>   Desugars \\<infile\\> and gives the result on standard output.\n\n$ trhsx \\<infile\\> \\<outfile\\>  Desugars \\<infile\\> and writes the result to \\<outfile\\>.\n\nThe pre-processed files rely on pattern guards and will therefore work with GHC only.\n\nFor details on usage, please see the website.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "trhsx": {
      "condTreeData": {
        "name": "trhsx",
        "module-path": "Hsx.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "haskell-src-exts",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "haskell-src-exts",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
