{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "test-framework-th",
      "version": [
        0,
        2,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "BSD3.txt"
    ],
    "copyright": "",
    "maintainer": "Oscar Finnsson",
    "author": "Oscar Finnsson & Emil Nordling",
    "stability": "",
    "tested-with": [],
    "homepage": "http://github.com/finnsson/test-generator",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/finnsson/test-framework-th/",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell.",
    "description": "@test-framework-th@ contains two interesting functions: @defaultMainGenerator@ and @testGroupGenerator@.\n\n@defaultMainGenerator@ will extract all functions beginning with case_ or prop_ in the module and put them in a testGroup.\n\n> -- file SomeModule.hs\n> ( -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- )\n> module SomeModule where\n> import Test.Framework.TH\n> import Test.Framework\n> import Test.HUnit\n> import Test.Framework.Providers.HUnit\n> import Test.Framework.Providers.QuickCheck2\n>\n> -- observe this line!\n> main = $(defaultMainGenerator)\n> case_1 = do 1 @=? 1\n> case_2 = do 2 @=? 2\n> prop_reverse xs = reverse (reverse xs) == xs\n>    where types = xs::[Int]\n\nis the same as\n\n> -- file SomeModule.hs\n> ( -# OPTIONS_GHC -fglasgow-exts -XTemplateHaskell #- )\n> module SomeModule where\n> import Test.Framework.TH\n> import Test.Framework\n> import Test.HUnit\n> import Test.Framework.Providers.HUnit\n> import Test.Framework.Providers.QuickCheck2\n>\n> -- observe this line!\n> main =\n>   defaultMain [\n>     testGroup \"SomeModule\" [ testCase \"1\" case_1, testCase \"2\" case_2, testProperty \"reverse\" prop_reverse]\n>     ]\n>\n> case_1 = do 1 @=? 1\n> case_2 = do 2 @=? 2\n> prop_reverse xs = reverse (reverse xs) == xs\n>    where types = xs::[Int]\n\n@testGroupGenerator@ is like @defaultMainGenerator@ but without @defaultMain@. It is useful if you need a function for the testgroup\n(e.g. if you want to be able to call the testgroup from another module).",
    "category": "Testing",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Test",
          "Framework",
          "TH"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "test-framework",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "language-haskell-extract",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell-src-exts",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell98",
            "version-range": "<2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "regex-posix",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "test-framework",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "language-haskell-extract",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell-src-exts",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell98",
        "version-range": "<2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "regex-posix",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
