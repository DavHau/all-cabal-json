{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "simple-pipe",
      "version": [
        0,
        0,
        0,
        28
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "author": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "stability": "Experimental",
    "tested-with": [],
    "homepage": "https://github.com/YoshikuniJujo/simple-pipe/wiki",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/simple-pipe.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/simple-pipe.git",
        "module": null,
        "branch": null,
        "tag": "simple-pipe-0.0.0.28",
        "subdir": null
      }
    ],
    "synopsis": "simple pipeline library like conduit",
    "description": "\nexamples/upperFile.hs\n\n* read file (sample.txt)\n\n* take 3 lines\n\n* to upper all lines\n\n* write to stdout\n\nextensions\n\n\n* PackageImports\n\n> import Data.Pipe\n> import Data.Char\n> import System.IO\n> import \"monads-tf\" Control.Monad.Trans\n>\n> main :: IO ()\n> main = do\n> \t_ <- runPipe $ readFileP \"sample.txt\"\n>\t\t=$= takeP 3\n>\t\t=$= convert (map toUpper)\n>\t\t=$= writeString\n> \treturn ()\n>\n> readFileP :: FilePath -> Pipe () String IO ()\n> readFileP fp = bracket (openFile fp ReadMode) hClose hRead\n>\n> hRead :: Handle -> Pipe () String IO ()\n> hRead h = do\n> \teof <- lift $ hIsEOF h\n> \tif eof then return () else do\n> \t\tl <- lift $ hGetLine h\n> \t\tyield l\n> \t\thRead h\n>\n> writeString :: Pipe String () IO ()\n> writeString = do\n> \tms <- await\n> \tcase ms of\n> \t\tJust s -> lift (putStrLn s) >> writeString\n> \t\t_ -> return ()\n>\n> takeP :: Monad m => Int -> Pipe a a m ()\n> takeP 0 = return ()\n> takeP n = do\n>\tmx <- await\n>\tcase mx of\n>\t\tJust x -> yield x >> takeP (n - 1)\n>\t\t_ -> return ()\n",
    "category": "Data",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/upperFile.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Pipe"
        ],
        [
          "Data",
          "Pipe",
          "Lazy"
        ],
        [
          "Data",
          "Pipe",
          "Flow"
        ],
        [
          "Data",
          "Pipe",
          "List"
        ],
        [
          "Data",
          "Pipe",
          "IO"
        ],
        [
          "Data",
          "Pipe",
          "ByteString"
        ],
        [
          "Data",
          "Pipe",
          "TChan"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Pipe",
            "Core"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "DoAndIfThenElse"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-control",
            "version-range": "==0.3.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lifted-base",
            "version-range": "==0.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monads-tf",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "==0.10.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-base",
            "version-range": "==0.4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": "==2.4.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-control",
        "version-range": "==0.3.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lifted-base",
        "version-range": "==0.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monads-tf",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "==0.10.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-base",
        "version-range": "==0.4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": "==2.4.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
