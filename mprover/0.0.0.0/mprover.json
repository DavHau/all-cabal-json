{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "mprover",
      "version": [
        0,
        0,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Adam Procter <amp269@mail.missouri.edu>",
    "author": "Adam Procter and Aaron Stump",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Simple equational reasoning for a Haskell-ish language",
    "description": "MProver is a proof checker for equational reasoning in a Haskell-like language.\nThis is an extremely preliminary release, so don't expect it to be terribly useful just yet!",
    "category": "Theorem Provers",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README",
      "examples/*.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "mp": {
      "condTreeData": {
        "name": "mp",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [
            [
              "MProver",
              "Checker"
            ],
            [
              "MProver",
              "Eval"
            ],
            [
              "MProver",
              "Monad"
            ],
            [
              "MProver",
              "PPrint"
            ],
            [
              "MProver",
              "Parser"
            ],
            [
              "MProver",
              "REPL"
            ],
            [
              "MProver",
              "Syntax"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [
              "-rtsopts",
              "-auto-all"
            ],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "<6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "haskell98",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.4.0.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.0.1.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "parsec",
              "version-range": ">=3.1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unbound",
              "version-range": ">=0.3.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.2.2.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "pretty",
              "version-range": ">=1.0.1.2",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "<6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "haskell98",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.4.0.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.0.1.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "parsec",
          "version-range": ">=3.1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unbound",
          "version-range": ">=0.3.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.2.2.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "pretty",
          "version-range": ">=1.0.1.2",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
