{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "servant",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2014 Zalora SEA",
    "maintainer": "alp@zalora.com",
    "author": "Alp Mestanogullari",
    "stability": "",
    "tested-with": [],
    "homepage": "http://github.com/zalora/servant",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "A library to generate REST-style webservices on top of scotty, handling all the boilerplate for you",
    "description": "An abstraction for 'Resource's that can support any number\nof operations, which will be tagged at the type-level.\n\nThis package however does provide standard /REST-y/ operations\n('Servant.Prelude.Add', 'Servant.Prelude.Delete', 'Servant.Prelude.ListAll'\n, 'Servant.Prelude.Update' and 'Servant.Prelude.View') and lets you define your\nown.\n\nYou can then actually make a service out of a 'Servant.Resource.Resource' description\nusing any backend you like (we currently only provide a\n<http://hackage.haskell.org/package/scotty scotty> backend in\nthe /servant-scotty/ package).\n\nHead to the <https://github.com/zalora/servant#servant README> for information and links to documentation.",
    "category": "Web, Database",
    "custom-fields": [
      [
        "x-revision",
        "5"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Servant",
          "Context"
        ],
        [
          "Servant",
          "Error"
        ],
        [
          "Servant",
          "Prelude"
        ],
        [
          "Servant",
          "Resource"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.5 && <4.11",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.5 && <4.11",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
