{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "cabal-sort",
      "version": [
        0,
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Henning Thielemann <haskell@henning-thielemann.de>",
    "author": "Henning Thielemann <haskell@henning-thielemann.de>",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==6.10.4"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Darcs",
        "location": "http://code.haskell.org/~thielema/cabal-sort/",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Darcs",
        "location": "http://code.haskell.org/~thielema/cabal-sort/",
        "module": null,
        "branch": null,
        "tag": "0.0.1",
        "subdir": null
      }
    ],
    "synopsis": "Topologically sort cabal packages",
    "description": "If you have a bunch of packages you may want to compile or recompile,\nthen you need an order of compilation that meets the dependencies.\nGiven a number of cabal package files,\nthis program reads all those files\nand emits them topologically sorted according to their dependencies.\nThis way you can compile many packages at once,\nsay if a very low-level package has changed.\n\nFor compiling a couple of packages from their local darcs repositories\nin the right order, you may run something like\n\n> for dir in `find . -name \"*.cabal\" | fgrep -v _darcs | xargs cabal-sort --info=dir`; do (cd $dir && cabal install); done\n\nFor uploading a set of packages to Hackage in the right order\nyou may run\n\n> for dir in `find . -name \"*.cabal\" | fgrep -v _darcs | xargs cabal-sort --info=dir`; do (cd $dir && rm dist/*.tar.gz && cabal sdist && cabal upload dist/*.tar.gz); done\n\nProblem: Given packages A, B, C,\nwhere C depends on B and B depends on A,\nand you call\n\n> cabal-sort C.cabal A.cabal\n\nthen the emitted order of packages may be wrong,\nbecause cabal-sort does not get to know the dependency of C on B.\nEven if the order is correct,\nB.cabal is missing in the output\nand thus the list of cabal files cannot immediately be used\nfor a sequence of cabal-install runs.",
    "category": "Distribution",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "cabal-sort": {
      "condTreeData": {
        "name": "cabal-sort",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Cabal",
              "version-range": ">=1.6 && <1.10",
              "library": [
                {}
              ]
            },
            {
              "package-name": "fgl",
              "version-range": ">=5.4.2 && <5.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": ">=1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": ">=1.1 && <1.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": ">=0.2 && <0.4",
              "library": [
                {}
              ]
            },
            {
              "package-name": "explicit-exception",
              "version-range": ">=0.1.4 && <0.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.2 && <0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=2 && <5",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Cabal",
          "version-range": ">=1.6 && <1.10",
          "library": [
            {}
          ]
        },
        {
          "package-name": "fgl",
          "version-range": ">=5.4.2 && <5.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": ">=1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": ">=1.1 && <1.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": ">=0.2 && <0.4",
          "library": [
            {}
          ]
        },
        {
          "package-name": "explicit-exception",
          "version-range": ">=0.1.4 && <0.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.2 && <0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=2 && <5",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
