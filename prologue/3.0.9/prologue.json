{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "prologue",
      "version": [
        3,
        0,
        9
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (C) 2016-2018 Wojciech Danilo",
    "maintainer": "Wojciech Danilo <wojciech.danilo@gmail.com>",
    "author": "Wojciech Danilo",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "https://github.com/wdanilo/prologue",
    "pkg-url": "",
    "bug-reports": "https://github.com/wdanilo/prologue/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/wdanilo/prologue.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Better, more general Prelude exporting common utilities.",
    "description": "Replacement for the Haskell's Prelude, exposing more commonly used functions and patching old GHC ones to behave in the newest GHC's way.",
    "category": "control",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Default",
          "Instances",
          "Missing"
        ],
        [
          "Data",
          "String",
          "Class"
        ],
        [
          "Data",
          "Tuple",
          "Curry",
          "Total"
        ],
        [
          "Data",
          "Typeable",
          "Proxy",
          "Abbr"
        ],
        [
          "Prologue"
        ],
        [
          "Prologue",
          "Control",
          "DeepSeq"
        ],
        [
          "Prologue",
          "Control",
          "Error"
        ],
        [
          "Prologue",
          "Control",
          "Monad"
        ],
        [
          "Prologue",
          "Control",
          "Monad",
          "IO"
        ],
        [
          "Prologue",
          "Control",
          "Monad",
          "Primitive"
        ],
        [
          "Prologue",
          "Control",
          "Monad",
          "Trans"
        ],
        [
          "Prologue",
          "Data",
          "Basic"
        ],
        [
          "Prologue",
          "Data",
          "Bifunctor"
        ],
        [
          "Prologue",
          "Data",
          "Default"
        ],
        [
          "Prologue",
          "Data",
          "Default1"
        ],
        [
          "Prologue",
          "Data",
          "Either"
        ],
        [
          "Prologue",
          "Data",
          "Foldable"
        ],
        [
          "Prologue",
          "Data",
          "Ix"
        ],
        [
          "Prologue",
          "Data",
          "Maybe"
        ],
        [
          "Prologue",
          "Data",
          "Num"
        ],
        [
          "Prologue",
          "Data",
          "OneTuple"
        ],
        [
          "Prologue",
          "Data",
          "Pointed"
        ],
        [
          "Prologue",
          "Data",
          "Show"
        ],
        [
          "Prologue",
          "Data",
          "String",
          "QQ"
        ],
        [
          "Prologue",
          "Data",
          "Traversable"
        ],
        [
          "Prologue",
          "Data",
          "Tuple"
        ],
        [
          "Prologue",
          "Debug",
          "Placeholders"
        ],
        [
          "Prologue",
          "Placeholders_old"
        ],
        [
          "Prologue",
          "Prim"
        ],
        [
          "Prologue",
          "Text",
          "Show"
        ],
        [
          "Prologue",
          "Type",
          "Reflection"
        ],
        [
          "Prologue",
          "Unsafe"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Paths_prologue"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DoAndIfThenElse"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "ViewPatterns"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "enable-extension": "UnicodeSyntax"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-O2"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.5 && <4.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bifunctors",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "binary",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "comonad",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "cond",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "container",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "convert",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-default",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deriving-compat",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "either",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "errors",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "exceptions",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "functor-utils",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-prim",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "impossible",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens-utils",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monoid",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "neat-interpolation",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "placeholders",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "pointed",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "pretty-show",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "primitive",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "raw-strings-qq",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "recursion-schemes",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroupoids",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "string-qq",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-base",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "typelevel",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.5 && <4.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bifunctors",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "binary",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "comonad",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "cond",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "container",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "convert",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-default",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deriving-compat",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "either",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "errors",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "exceptions",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "functor-utils",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-prim",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "impossible",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens-utils",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monoid",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "neat-interpolation",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "placeholders",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "pointed",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "pretty-show",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "primitive",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "raw-strings-qq",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "recursion-schemes",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroupoids",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "string-qq",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-base",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "typelevel",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
