{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "catamorphism",
      "version": [
        0,
        6,
        1,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) 2014, 2015, 2016, 2017, 2018 Frerich Raabe <frerich.raabe@gmail.com>",
    "maintainer": "frerich.raabe@gmail.com",
    "author": "Frerich Raabe",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "https://github.com/frerich/catamorphism",
    "pkg-url": "",
    "bug-reports": "https://github.com/frerich/catamorphism/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/frerich/catamorphism",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Exposes a Template Haskell function for generating catamorphisms.",
    "description": "This module exposes a 'makeCata' function which can create catamorphisms for\narbitrary Haskell types. Catamorphisms are functions which deconstruct some\nvalue by replacing each data constructor with a custom function yielding a\nnew value. See <http://www.haskell.org/haskellwiki/Catamorphisms> for a more\nin-depth discussion of catamorphisms in Haskell.\n\nThe Haskell base package already comes with a couple of standard\ncatamorphisms, such as 'maybe' (for 'Maybe' values). The 'maybe' function\ncould have been generated using 'makeCata' as follows:\n\n> -- Defines 'maybe :: b -> (a -> b) -> Maybe a -> b'\n> $(makeCata defaultOptions ''Maybe)\n\nHowever, catamorphisms are especially useful for recursive data structures.\nConsider the following simple example which defines a basic data type for\nmodelling sums of numbers, supporting variables:\n\n> import Data.Morphism.Cata\n> import Data.Maybe (fromJust)\n>\n> data Expr a = Number a\n>             | Variable Char\n>             | Sum (Expr a) (Expr a)\n>\n> -- Defines 'expr :: (a -> b) -> (Char -> b) -> (b -> b -> b) -> Expr a -> b'\n> $(makeCata defaultOptions ''Expr)\n\nThe 'makeCata' invocation defines a 'expr' function which works like a fold on\n'Expr' values; it can be used to implement various useful other functions:\n\n> -- Evaluate an Expr, given some variable bindings\n> eval :: Num a => [(Char, a)] -> Expr a -> a\n> eval vars = expr id (fromJust . (`lookup` vars)) (+)\n>\n> -- Pretty-prints an Expr\n> pprint :: Show a => Expr a -> String\n> pprint = expr show show (\\a b -> a ++ \" + \" ++ b)\n>\n> -- Counts the number of variables used in an expr\n> numVars :: Expr a -> Int\n> numVars = expr (const 1) (const 0) (+)",
    "category": "Development",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Morphism",
          "Cata"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.6 && <4.12",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.8 && <2.14",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.6 && <4.12",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.8 && <2.14",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "spec": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Tests.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Data",
              "Morphism",
              "CataSpec"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "catamorphism",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hspec",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "catamorphism",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hspec",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
