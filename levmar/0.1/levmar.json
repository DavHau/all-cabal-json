{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "levmar",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2009 Roel van Dijk & Bas van Dijk",
    "maintainer": "vandijk.roel@gmail.com, v.dijk.bas@gmail.com",
    "author": "Roel van Dijk & Bas van Dijk",
    "stability": "experimental",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Darcs",
        "location": "http://code.haskell.org/levmar",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "An implementation of the Levenberg-Marquardt algorithm",
    "description": "The Levenberg-Marquardt algorithm is an iterative\ntechnique that finds a local minimum of a function that\nis expressed as the sum of squares of nonlinear\nfunctions. It has become a standard technique for\nnonlinear least-squares problems and can be thought of\nas a combination of steepest descent and the\nGauss-Newton method. When the current solution is far\nfrom the correct one, the algorithm behaves like a\nsteepest descent method: slow, but guaranteed to\nconverge. When the current solution is close to the\ncorrect solution, it becomes a Gauss-Newton method.\n\nOptional box- and linear constraints can be given. Both\nsingle and double precision floating point types are\nsupported.\n\nThe actual algorithm is implemented in a C library\nwhich is bundled with bindings-levmar which this\npackage depends on. See:\n<http://www.ics.forth.gr/~lourakis/levmar/>.\n\nThis library consists of two layers:\n\n* LevMar.Intermediate: A medium-level layer that wraps\nthe low-level functions from bindings-levmar to\nprovide a more Haskell friendly interface.\n\n* LevMar: A high-level layer that uses type-level\nprogramming to add extra type safety.\n\nEach layer also has special data-fitting variants:\n\n* LevMar.Intermediate.Fitting\n\n* LevMar.Fitting\n\nAll modules are self-contained; i.e. each module\nre-exports all the things you need to work with it.\n\nFor an example how to use this library see Demo.hs\nwhich is included in this package. Demo.hs is a Haskell\ntranslation of lmdemo.c from the C levmar library.\n\nA note regarding the license:\n\nThis library depends on bindings-levmar which is\nbundled together with a C library which falls under the\nGPL. Please be aware of this when distributing programs\nlinked with this library. For details see the\ndescription and license of bindings-levmar.",
    "category": "numerical",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "Demo.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "LevMar"
        ],
        [
          "LevMar",
          "Fitting"
        ],
        [
          "LevMar",
          "Intermediate"
        ],
        [
          "LevMar",
          "Intermediate",
          "Fitting"
        ],
        [
          "TypeLevelNat"
        ],
        [
          "SizedList"
        ],
        [
          "NFunction"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-O2"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=3 && <4.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bindings-levmar",
            "version-range": "<0.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=3 && <4.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bindings-levmar",
        "version-range": "<0.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
