{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "preliminaries",
      "version": [
        0,
        1,
        5,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENCE"
    ],
    "copyright": "Â© 2016 Yghor Kerscher",
    "maintainer": "kerscher@acm.org",
    "author": "Yghor Kerscher",
    "stability": "",
    "tested-with": [],
    "homepage": "http://github.com/kerscher/preliminaries",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/kerscher/preliminaries",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A larger alternative to the Prelude.",
    "description": "A GHC-only alternative to the Prelude with a large amount of imports available by default.",
    "category": "Prelude",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "stack.yaml",
      ".travis.yml"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Preliminaries"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "source"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "OverloadedLists"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "GADTSyntax"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "MultiWayIf"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "DisambiguateRecordFields"
          },
          {
            "enable-extension": "MonadComprehensions"
          },
          {
            "enable-extension": "BinaryLiterals"
          },
          {
            "enable-extension": "RecursiveDo"
          },
          {
            "enable-extension": "ParallelListComp"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "RebindableSyntax"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "ExplicitNamespaces"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "classy-prelude-conduit",
            "version-range": ">=1.0.0 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "abstract-par",
            "version-range": ">=0.3.3 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.9.0 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bifunctors",
            "version-range": ">=5.4.1 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-default",
            "version-range": ">=0.7.1 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "microlens-platform",
            "version-range": ">=0.3.7 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "microlens-contra",
            "version-range": ">=0.1.0 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-par",
            "version-range": ">=0.3.4 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-parallel",
            "version-range": ">=0.7.2 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mono-traversable-instances",
            "version-range": ">=0.1.0 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2.1 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parallel",
            "version-range": ">=3.2.1 && <4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm-conduit",
            "version-range": ">=3.0.0 && <4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "string-conversions",
            "version-range": ">=0.4 && <1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "classy-prelude-conduit",
        "version-range": ">=1.0.0 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "abstract-par",
        "version-range": ">=0.3.3 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.9.0 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bifunctors",
        "version-range": ">=5.4.1 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-default",
        "version-range": ">=0.7.1 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "microlens-platform",
        "version-range": ">=0.3.7 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "microlens-contra",
        "version-range": ">=0.1.0 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-par",
        "version-range": ">=0.3.4 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-parallel",
        "version-range": ">=0.7.2 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mono-traversable-instances",
        "version-range": ">=0.1.0 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2.1 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parallel",
        "version-range": ">=3.2.1 && <4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm-conduit",
        "version-range": ">=3.0.0 && <4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "string-conversions",
        "version-range": ">=0.4 && <1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
