{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "countable",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Ashley Yakeley <ashley@semantic.org>",
    "maintainer": "Ashley Yakeley <ashley@semantic.org>",
    "author": "Ashley Yakeley <ashley@semantic.org>",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Countable, Searchable, Finite, Empty classes",
    "description": "* @class Countable@, for countable types\n\n* @class AtLeastOneCountable@, for countable types that have at least one value\n\n* @class InfiniteCountable@, for infinite countable types\n\n* @class Searchable@, for types that can be searched over. This turns out to include some infinite types, see <http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/>.\n\n* @class Finite@, for finite types\n\n* @class Empty@, for empty types\n\n* @data Nothing@, an empty type\n\nSome orphan instances:\n\n* @(Searchable a,Eq b) => Eq (a -> b)@ / /\n\n* @(Finite t) => Foldable ((->) t)@ / /\n\n* @(Finite a) => Traversable ((->) a)@ / /\n\n* @(Show a,Finite a,Show b) => Show (a -> b)@ / /",
    "category": "Data",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Searchable"
        ],
        [
          "Data",
          "Countable"
        ],
        [
          "Data",
          "Empty"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "ExistentialQuantification"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
