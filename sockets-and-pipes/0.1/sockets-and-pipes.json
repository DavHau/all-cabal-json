{
  "description": {
    "spec-version": {
      "Left": [
        2,
        0
      ]
    },
    "package": {
      "name": "sockets-and-pipes",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "license.txt"
    ],
    "copyright": "",
    "maintainer": "Joy of Haskell <hello@joyofhaskell.com>",
    "author": "Chris Martin, Julie Moronuki",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==9.0.1"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.6.5"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/joyofhaskell/sockets-and-pipes.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Support for the Sockets and Pipes book",
    "description": "This package contains some utilities that support /Sockets and Pipes/\n(available on <https://leanpub.com/sockets-and-pipes Leanpub>),\nas well as re-exports from all the libraries mentioned in the book.\n\n== Code in this package\n\nOriginal contributions from this package:\n\n* \"SocketsAndPipes.Serve\"\n\n== Chapters\n\nList of modules that make a significant appearance in each chapter:\n\n+----+----------------------+----------------------------------+---------------------------------------+\n|    |   Chapter            |          Module                  |               Purpose                 |\n+====+======================+==================================+=======================================+\n|  1 | __Handles__          | \"System.IO\"                      | Writing to a file                     |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Control.Exception.Safe\"         | Using `bracket` to ensure             |\n|    |                      |                                  | the file handle is closed             |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  2 | __Chunks__           | \"Data.Text\"                      | `Text` is a chunk of characters       |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Text.IO\"                   | Reading and writing files using       |\n|    |                      |                                  | `Text` instead of `String`            |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  3 | __Bytes__            | \"Data.Word\"                      | What a byte is                        |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.ByteString\"                | `ByteString` is a chunk of bytes      |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Text.Encoding\"             | Conversions between `ByteString`      |\n|    |                      |                                  | and `Text`                            |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.String\"                    | How `ByteString` works with           |\n|    |                      +----------------------------------+ `OverloadedStrings`                   |\n|    |                      | \"Data.ByteString.Char8\"          |                                       |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"System.IO\"                      | Putting `Handle`s into binary mode    |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  4 | __Sockets__          | \"Network.Socket\"                 | Opening and closing sockets           |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Network.Socket.ByteString\"      | Writing to and reading from sockets   |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"System.Timeout\"                 | Giving up quickly when a service      |\n|    |                      |                                  | does not respond                      |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  5 | __HTTP__             | \"ASCII\"                          | Expressing HTTP messages as strings   |\n|    |                      +----------------------------------+                                       |\n|    |                      | \"ASCII.Char\"                     |                                       |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"SocketsAndPipes.Serve\"          | Our first rudimentary web server      |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  6 | __HTTP types__       | \"Data.ByteString\"                | Defining datatypes for the            |\n|    |                      +----------------------------------+ parts of an HTTP message              |\n|    |                      | \"Data.ByteString.Lazy\"           |                                       |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  7 | __Encoding__         | \"Data.Text.Lazy\"                 | Efficient string concatenations       |\n|    |                      +----------------------------------+                                       |\n|    |                      | \"Data.Text.Lazy.Builder\"         |                                       |\n|    |                      +----------------------------------+                                       |\n|    |                      | \"Data.ByteString.Builder\"        |                                       |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Time\"                      | Simple performance testing            |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Foldable\"                  | Encoding repetitions with `foldMap`   |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  8 | __Responding__       | \"Network.Socket.ByteString.Lazy\" | Sending responses constructed by      |\n|    |                      |                                  | bytestring `Builder`                  |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"SocketsAndPipes.Serve\"          | New web server using the              |\n|    |                      |                                  | encoding functions                    |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Int\"                       | Contrasting `Integer`, `Int`,         |\n|    |                      |                                  | and `Int64`                           |\n+----+----------------------+----------------------------------+---------------------------------------+\n|  9 | __Content types__    | \"Data.Text.Lazy.Builder.Int\"     | Building a text response body         |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Text.Blaze.Html\"                | Building an HTML response body        |\n|    |                      +----------------------------------+                                       |\n|    |                      | \"Text.Blaze.Html5\"               |                                       |\n|    |                      +----------------------------------+                                       |\n|    |                      | \"Text.Blaze.Html.Renderer.Utf8\"  |                                       |\n|    |                      +----------------------------------+---------------------------------------+\n|    |                      | \"Data.Aeson\"                     | Building a JSON response body         |\n+----+----------------------+----------------------------------+---------------------------------------+\n| 10 | __Change__           | \"Control.Concurrent.STM.TVar\"    | Shared state for request-handling     |\n|    |                      +----------------------------------+ threads                               |\n|    |                      | \"Control.Monad.STM\"              |                                       |\n+----+----------------------+----------------------------------+---------------------------------------+\n| 11 | __Streaming__        |                                                                          |\n+----+----------------------+                                                                          |\n| 12 | __Request parsing__  |                                                                          |\n+----+----------------------+                                                                          |\n| 13 | __Reading headers__  |                                                                          |\n+----+----------------------+                 The remaining chapters are in progress.                  |\n| 14 | __Body parsing__     |                                                                          |\n+----+----------------------+                                                                          |\n| 15 | __Connection reuse__ |                                                                          |\n+----+----------------------+                                                                          |\n| 16 | __Pipes__            |                                                                          |\n+----+----------------------+--------------------------------------------------------------------------+\n\n== Libraries\n\nRe-exported modules, grouped by the package that each module originally comes from:\n\n__ascii__ - \"ASCII\", \"ASCII.Char\"\n\n__aeson__ - \"Data.Aeson\"\n\n__async__ - \"Control.Concurrent.Async\"\n\n__base__\n\n* File handles - \"System.IO\"\n* Fundamental data types - \"Data.Word\", \"Data.Int\", \"Data.Char\"\n* Miscellania - \"System.Timeout\", \"Control.Monad\",\n\"Data.Foldable\", \"Data.List\"\n\n__blaze-html__ - \"Text.Blaze.Html\", \"Text.Blaze.Html5\",\n\"Text.Blaze.Html5.Attributes\", \"Text.Blaze.Html.Renderer.Utf8\"\n\n__bytestring__\n\n* Strict - \"Data.ByteString\"\n* Lazy - \"Data.ByteString.Lazy\"\n* Builder - \"Data.ByteString.Builder\"\n* \"Data.ByteString.Char8\" -\nThis is included mostly to discuss why we don't use it.\n\n__network__\n\n* \"Network.Socket\" -\nThe Socket type, operations for opening and closing sockets\n* \"Network.Socket.ByteString\" -\nSocket read/write operations with strict byte strings\n* \"Network.Socket.ByteString.Lazy\" -\nSocket read/write operations with lazy byte strings\n\n__safe-exceptions__ - \"Control.Exception.Safe\"\n\n__stm__ - \"Control.Monad.STM\", \"Control.Concurrent.STM.TVar\"\n\n__text__\n\n* Strict - \"Data.Text\", \"Data.Text.Encoding\", \"Data.Text.IO\"\n* Lazy - \"Data.Text.Lazy\", \"Data.Text.Lazy.Encoding\", \"Data.Text.Lazy.IO\"\n* Builder - \"Data.Text.Lazy.Builder\", \"Data.Text.Lazy.Builder.Int\"\n\n__time__ - \"Data.Time\"",
    "category": "HTTP, Network, Streaming, Text",
    "custom-fields": [
      [
        "x-revision",
        "4"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "SocketsAndPipes",
          "Serve"
        ]
      ],
      "re-exported-modules": [
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "ASCII"
          ],
          "moduleReexportName": [
            "ASCII"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "ASCII",
            "Char"
          ],
          "moduleReexportName": [
            "ASCII",
            "Char"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Aeson"
          ],
          "moduleReexportName": [
            "Data",
            "Aeson"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Concurrent",
            "Async"
          ],
          "moduleReexportName": [
            "Control",
            "Concurrent",
            "Async"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Monad"
          ],
          "moduleReexportName": [
            "Control",
            "Monad"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Char"
          ],
          "moduleReexportName": [
            "Data",
            "Char"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Foldable"
          ],
          "moduleReexportName": [
            "Data",
            "Foldable"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Int"
          ],
          "moduleReexportName": [
            "Data",
            "Int"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "List"
          ],
          "moduleReexportName": [
            "Data",
            "List"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Word"
          ],
          "moduleReexportName": [
            "Data",
            "Word"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "System",
            "IO"
          ],
          "moduleReexportName": [
            "System",
            "IO"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "System",
            "Timeout"
          ],
          "moduleReexportName": [
            "System",
            "Timeout"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Text",
            "Blaze",
            "Html"
          ],
          "moduleReexportName": [
            "Text",
            "Blaze",
            "Html"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Text",
            "Blaze",
            "Html5"
          ],
          "moduleReexportName": [
            "Text",
            "Blaze",
            "Html5"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Text",
            "Blaze",
            "Html5",
            "Attributes"
          ],
          "moduleReexportName": [
            "Text",
            "Blaze",
            "Html5",
            "Attributes"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Text",
            "Blaze",
            "Html",
            "Renderer",
            "Utf8"
          ],
          "moduleReexportName": [
            "Text",
            "Blaze",
            "Html",
            "Renderer",
            "Utf8"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Builder"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Builder"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Char8"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Char8"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "ByteString",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "ByteString",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Network",
            "Socket"
          ],
          "moduleReexportName": [
            "Network",
            "Socket"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Network",
            "Socket",
            "ByteString"
          ],
          "moduleReexportName": [
            "Network",
            "Socket",
            "ByteString"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Network",
            "Socket",
            "ByteString",
            "Lazy"
          ],
          "moduleReexportName": [
            "Network",
            "Socket",
            "ByteString",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Exception",
            "Safe"
          ],
          "moduleReexportName": [
            "Control",
            "Exception",
            "Safe"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Concurrent",
            "STM"
          ],
          "moduleReexportName": [
            "Control",
            "Concurrent",
            "STM"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Concurrent",
            "STM",
            "TVar"
          ],
          "moduleReexportName": [
            "Control",
            "Concurrent",
            "STM",
            "TVar"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Control",
            "Monad",
            "STM"
          ],
          "moduleReexportName": [
            "Control",
            "Monad",
            "STM"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text"
          ],
          "moduleReexportName": [
            "Data",
            "Text"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Encoding"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Encoding"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy",
            "Builder"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy",
            "Builder"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy",
            "Builder",
            "Int"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy",
            "Builder",
            "Int"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy",
            "Encoding"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy",
            "Encoding"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "Lazy",
            "IO"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "Lazy",
            "IO"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Text",
            "IO"
          ],
          "moduleReexportName": [
            "Data",
            "Text",
            "IO"
          ]
        },
        {
          "moduleReexportOriginalPackage": null,
          "moduleReexportOriginalName": [
            "Data",
            "Time"
          ],
          "moduleReexportName": [
            "Data",
            "Time"
          ]
        }
      ],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "SocketsAndPipes",
            "Serve",
            "Setup"
          ],
          [
            "SocketsAndPipes",
            "Serve",
            "Loop"
          ],
          [
            "SocketsAndPipes",
            "Serve",
            "Sockets"
          ],
          [
            "SocketsAndPipes",
            "Serve",
            "ForkBracket"
          ],
          [
            "SocketsAndPipes",
            "Serve",
            "Exceptions"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "NumericUnderscores"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "ascii",
            "version-range": "^>=1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "aeson",
            "version-range": "^>=1.3 || ^>=1.4 || ^>=1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "async",
            "version-range": "^>=2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": "^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "blaze-html",
            "version-range": "^>=0.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "^>=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "^>=0.5.7 || ^>=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "network",
            "version-range": "^>=3.1.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "safe-exceptions",
            "version-range": "^>=0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": "^>=2.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": "^>=1.2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time",
            "version-range": "^>=1.9 || ^>=1.10 || ^>=1.11",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "ascii",
        "version-range": "^>=1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "aeson",
        "version-range": "^>=1.3 || ^>=1.4 || ^>=1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "async",
        "version-range": "^>=2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": "^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "blaze-html",
        "version-range": "^>=0.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "^>=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "^>=0.5.7 || ^>=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "network",
        "version-range": "^>=3.1.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "safe-exceptions",
        "version-range": "^>=0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": "^>=2.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": "^>=1.2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time",
        "version-range": "^>=1.9 || ^>=1.10 || ^>=1.11",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
