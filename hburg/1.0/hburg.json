{
  "description": {
    "spec-version": {
      "Right": "-any"
    },
    "package": {
      "name": "hburg",
      "version": [
        1,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "igor@bytelabs.org",
    "author": "Igor Boehm <igor@bytelabs.org>",
    "stability": "Experimental",
    "tested-with": [],
    "homepage": "http://www.bytelabs.org/hburg.html",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Haskell Bottom Up Rewrite Generator",
    "description": "HBURG has been designed to produce a code generator for a\ntarget machine given a specification of an abstract syntax\ntree of a program, as well as a specification of the target\nmachine itself. Its goals are the following:\n\n* Provide a powerful tree pattern matching specification\nlanguage with simplicity and easy readability in mind.\n\n* Perform good static analysis aiding during the design of\ngrammar specifications.\n\n* Provide back-ends which generate code for various languages\nfrom a specification, ready to be plugged into a back-end\ncompiler infrastructure. Currently Java Code is being generated.\n\nSee \"Homepage\" for an example on how to integrate the generated\ncode into a compiler.",
    "category": "Code Generation",
    "custom-fields": [],
    "build-type-raw": null,
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "TODO",
      "test/01-grammar.tpg",
      "test/02-grammar.tpg",
      "test/03-grammar.tpg",
      "test/04-grammar.tpg",
      "test/05-grammar.tpg",
      "test/06-grammar.tpg",
      "test/errors/err-dupbindings.tpg",
      "test/errors/err-many-many-errors.tpg",
      "test/errors/err-manyundefined.tpg",
      "test/errors/err-selfredef.tpg",
      "test/errors/err-termredef.tpg",
      "test/errors/err-typerror1.tpg",
      "test/errors/err-typerror2.tpg",
      "test/errors/err-typerror3.tpg",
      "test/errors/err-useundefined.tpg",
      "test/errors/err-varyingparams.tpg"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "hburg": {
      "condTreeData": {
        "name": "hburg",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "src"
          ],
          "otherModules": [
            [
              "Util"
            ],
            [
              "Debug"
            ],
            [
              "Ast",
              "Attr"
            ],
            [
              "Ast",
              "Bind"
            ],
            [
              "Ast",
              "Code"
            ],
            [
              "Ast",
              "Decl"
            ],
            [
              "Ast",
              "Def"
            ],
            [
              "Ast",
              "Ident"
            ],
            [
              "Ast",
              "Incl"
            ],
            [
              "Ast",
              "Node"
            ],
            [
              "Ast",
              "Nt"
            ],
            [
              "Ast",
              "Op"
            ],
            [
              "Ast",
              "Prod"
            ],
            [
              "Ast",
              "T"
            ],
            [
              "Ast",
              "TermTy"
            ],
            [
              "Csa",
              "Csa"
            ],
            [
              "Env",
              "Elem"
            ],
            [
              "Env",
              "Env"
            ],
            [
              "Gen",
              "Emit"
            ],
            [
              "Gen",
              "Emit",
              "EmitClass"
            ],
            [
              "Gen",
              "Emit",
              "EmitEnums"
            ],
            [
              "Gen",
              "Emit",
              "EmitEval"
            ],
            [
              "Gen",
              "Emit",
              "EmitMapEntry"
            ],
            [
              "Gen",
              "Emit",
              "EmitNodeIf"
            ],
            [
              "Gen",
              "Emit",
              "EmitTiling"
            ],
            [
              "Gen",
              "Emit",
              "JavaClass"
            ],
            [
              "Gen",
              "Emit",
              "Label"
            ],
            [
              "Gen",
              "Emit",
              "Tiling"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "Java"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JComment"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JConstructor"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JEnum"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JMethod"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JModifier"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JParameter"
            ],
            [
              "Gen",
              "Emit",
              "Java",
              "JVariable"
            ],
            [
              "Parser",
              "Lexer"
            ],
            [
              "Parser",
              "Parser"
            ],
            [
              "Parser",
              "ParseErr"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-O",
              "-funbox-strict-fields",
              "-fglasgow-exts",
              "-fwarn-unused-imports",
              "-fwarn-duplicate-exports",
              "-fwarn-incomplete-patterns",
              "-fwarn-overlapping-patterns"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "haskell98",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "haskell98",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
