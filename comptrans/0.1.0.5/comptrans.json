{
  "description": {
    "spec-version": {
      "Right": ">=1.9.2"
    },
    "package": {
      "name": "comptrans",
      "version": [
        0,
        1,
        0,
        5
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "James Koppel",
    "author": "James Koppel",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/jkoppel/comptrans",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/jkoppel/comptrans",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Automatically converting ASTs into compositional data types",
    "description": "Template Haskell for converting an AST for a language written using normal\nalgebraic data types into ones written using multi-sorted compositional data types\n(`Data.Comp.Multi` from the `compdata` library) so that you can use generic and modular operators\non it. You might need to add additional constructors that can e.g.: convert a (Term e Foo) into a\n(Term e [Foo]).\n\nThe sCource files have comments showing example output for a simple language. See the examples directory\nfor an extended example of generating a compositional data type for the entire Java language, with labelled variants\nas well as variants where an entire project of source files can be treated as a single AST -- and you can use the same operations\non all of them!",
    "category": "Data,Generics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Comp",
          "Derive",
          "Generic"
        ],
        [
          "Data",
          "Comp",
          "Trans"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Data",
            "Comp",
            "Trans",
            "Collect"
          ],
          [
            "Data",
            "Comp",
            "Trans",
            "DeriveMulti"
          ],
          [
            "Data",
            "Comp",
            "Trans",
            "DeriveTrans"
          ],
          [
            "Data",
            "Comp",
            "Trans",
            "DeriveUntrans"
          ],
          [
            "Data",
            "Comp",
            "Trans",
            "Names"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "OverlappingInstances"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": "<5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "compdata",
            "version-range": "<1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "<=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": "<5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "th-expand-syns",
            "version-range": "<=0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-prim",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": "<1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq-generics",
            "version-range": "<0.1.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": "<5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "compdata",
        "version-range": "<1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "<=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": "<5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "th-expand-syns",
        "version-range": "<=0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-prim",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": "<1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq-generics",
        "version-range": "<0.1.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
