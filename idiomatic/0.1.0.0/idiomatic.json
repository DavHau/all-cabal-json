{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "idiomatic",
      "version": [
        0,
        1,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Baldur Blöndal",
    "author": "Baldur Blöndal",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/Icelandjack/idiomatic",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/Icelandjack/idiomatic",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Deriving Applicative for sum types.. Idiomatically.",
    "description": "'Idiomatically' is used with 'DerivingVia' to derive 'Applicative'\nfor types with multiple constructors.\n\nIt features an extensible domain-specific language of sums with\n`Applicative` instances. `Idiomatically` is then passed a type-level\nlist of applicative sums that specify how deriving should take\nplace.\n\n> {-# Language DataKinds          #-}\n> {-# Language DeriveGeneric      #-}\n> {-# Language DerivingStrategies #-}\n> {-# Language DerivingVia        #-}\n>\n> import Generic.Applicative\n>\n> data Zip a = No | a ::: Zip a\n>   deriving\n>   stock (Show, Generic1)\n>\n>   deriving (Functor, Applicative)\n>   via Idiomatically Zip '[RightBias Terminal]\n\nThis derives the standard behaviour of `ZipList` but this same\n\"RightBias Terminal\" behaviour describes the `Maybe` and\n`Validation` applicative as well.\n\n> pure @Zip a = a ::: a ::: a ::: ...\n>\n> liftA2 (+) No       No        = No\n> liftA2 (+) No       (⊥:::⊥)   = No\n> liftA2 (+) (⊥:::⊥)  No        = No\n> liftA2 (+) (2:::No) (10:::No) = 12:::No\n\n`Idiomatically` shares an intimate relationship with `Generically1`:\nit is defined in terms of `Generically1` and they are\ninterchangeable when there is an empty list of sums:\n\n> type Generically1 :: (k -> Type) -> (k -> Type)\n> type Generically1 f = Idiomatically f '[]\n\nBased on <http://ekmett.github.io/reader/2012/abstracting-with-applicatives/index.html Abstracting with Applicatives>.",
    "category": "Generics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "ChangeLog.md",
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Generic",
          "Applicative"
        ],
        [
          "Generic",
          "Applicative",
          "Internal"
        ],
        [
          "Generic",
          "Applicative",
          "Idiom"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell98",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.9 && <4.18",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.9 && <4.18",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
