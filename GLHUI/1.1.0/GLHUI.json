{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "GLHUI",
      "version": [
        1,
        1,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Hugo Gomes",
    "maintainer": "Hugo Gomes <mr.hugo.gomes@gmail.com>",
    "author": "Hugo Gomes <mr.hugo.gomes@gmail.com>",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Open OpenGL context windows in X11 with libX11",
    "description": "\nHaskell functions to open and manage a OpenGL window with libX11.\n\nThis module is intended to be imported qualified, to avoid clashes with\nPrelude functions, e.g.\n\n> import qualified Graphics.UI.GLWindow as Window\n\nAs an example, here is a simple module that uses some of these functions\nto open a OpenGL 3.2 Context:\n\n> module Main where\n>\n> import Graphics.Rendering.OpenGL\n> import qualified Graphics.UI.GLWindow as Window\n>\n> myLoop = do clear [ColorBuffer]\n>             t <- Window.time\n>             clearColor $= Color4 (sin (realToFrac t) * 0.5 + 0.5)\n>                                  (sin (realToFrac (t+1)) * 0.5 + 0.5)\n>                                  (sin (realToFrac (t+2)) * 0.5 +0.5)\n>                                  0\n>\n> main = do Window.init 3 2 -- initializes a OpenGL 3.2 context\n>           Window.loop myLoop -- stops when the ESC key is pressed\n>           Window.kill -- removes the window when the loop stops\n\nSpecial thanks to Tiago Farto (aka xernobyl) for coding the initial C version\nthat was used as a base for these functions",
    "category": "Graphics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "include/HsGLWindow.h",
      "c/HsGLWindow.c",
      "README"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Graphics",
          "UI",
          "GLWindow"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [
          "c/HsGLWindow.c"
        ],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [
          "X11",
          "GL",
          "rt"
        ],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [
          "include"
        ],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-O2"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "<5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "<5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
