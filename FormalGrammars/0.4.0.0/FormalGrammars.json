{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "FormalGrammars",
      "version": [
        0,
        4,
        0,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "GPL_3_0_only"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Christian Hoener zu Siederdissen, 2013-2019",
    "maintainer": "choener@bioinf.uni-leipzig.de",
    "author": "Christian Hoener zu Siederdissen, 2013-2019",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.6.4"
      }
    ],
    "homepage": "https://github.com/choener/FormalGrammars",
    "pkg-url": "",
    "bug-reports": "https://github.com/choener/FormalGrammars/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/choener/FormalGrammars",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "(Context-free) grammars in formal language theory",
    "description": "<http://www.bioinf.uni-leipzig.de/Software/gADP/ generalized Algebraic Dynamic Programming>\n\nContext-free grammars in formal language theory are sets of production rules,\nnon-terminal and terminal symbols. This library provides basic data types and\nfunctions to manipulate such grammars.\n\nGrammars can be defined in a small domain-specific language that is very close to\ntypical CFG notation. The DSL parser can easily be extended. Grammar products, for\nexample, are implemented as a single additional sub-parser.\n\nThis library also provides the machinery that transforms an Inside grammar into the\ncorresponding Outside grammar.\n\nStarting with version 0.2.1 it is possible to write multiple context-free grammars\nwithin this framework.\n\nIn addition, TemplateHaskell and QuasiQuoting functionality allow embedding thusly\ndefined grammars in Haskell programs. ADPfusion then turns such a grammar into an\nefficient dynamic program. It is also possible to generate Haskell modules that\ncontain the resulting grammar, signature and algebra product.\n\nAlternatives are ansi- or LaTeX-based pretty-printing for users that want to\nimplement their CFG in another language than Haskell.\n\nFormal background can be found in a number of papers which are given in the README.\n",
    "category": "Formal Languages, Bioinformatics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "changelog.md",
      "tests/parsing.gra"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "package-flags": [
    {
      "name": "examples",
      "description": "build the examples",
      "default": false,
      "manual": true
    },
    {
      "name": "debugdump",
      "description": "dump intermediate Core files",
      "default": false,
      "manual": true
    },
    {
      "name": "llvm",
      "description": "use llvm",
      "default": false,
      "manual": true
    }
  ],
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "FormalLanguage"
        ],
        [
          "FormalLanguage",
          "CFG"
        ],
        [
          "FormalLanguage",
          "CFG",
          "Grammar"
        ],
        [
          "FormalLanguage",
          "CFG",
          "Grammar",
          "Types"
        ],
        [
          "FormalLanguage",
          "CFG",
          "Grammar",
          "Util"
        ],
        [
          "FormalLanguage",
          "CFG",
          "Outside"
        ],
        [
          "FormalLanguage",
          "CFG",
          "Parser"
        ],
        [
          "FormalLanguage",
          "CFG",
          "PrettyPrint"
        ],
        [
          "FormalLanguage",
          "CFG",
          "PrettyPrint",
          "ANSI"
        ],
        [
          "FormalLanguage",
          "CFG",
          "PrettyPrint",
          "Haskell"
        ],
        [
          "FormalLanguage",
          "CFG",
          "QQ"
        ],
        [
          "FormalLanguage",
          "CFG",
          "TH"
        ],
        [
          "FormalLanguage",
          "CFG",
          "TH",
          "Internal"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "CPP"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "disable-extension": "MonomorphismRestriction"
          },
          {
            "enable-extension": "PartialTypeSignatures"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "QuasiQuotes"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "UnicodeSyntax"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-O2",
            "-funbox-strict-fields"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ansi-wl-pprint",
            "version-range": ">=0.6.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-default",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsers",
            "version-range": ">=0.12.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroups",
            "version-range": ">=0.16",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "trifecta",
            "version-range": ">=1.7.1.1 && <2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unordered-containers",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ADPfusion",
            "version-range": "==0.6.0.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "PrimitiveArray",
            "version-range": "==0.10.0.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ansi-wl-pprint",
        "version-range": ">=0.6.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-default",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsers",
        "version-range": ">=0.12.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroups",
        "version-range": ">=0.16",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "trifecta",
        "version-range": ">=1.7.1.1 && <2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unordered-containers",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ADPfusion",
        "version-range": "==0.6.0.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "PrimitiveArray",
        "version-range": "==0.10.0.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "properties": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "properties.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "tests"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "CPP"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DeriveDataTypeable"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "disable-extension": "MonomorphismRestriction"
            },
            {
              "enable-extension": "PartialTypeSignatures"
            },
            {
              "enable-extension": "PatternGuards"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "QuasiQuotes"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "TemplateHaskell"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UnicodeSyntax"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-O2",
              "-funbox-strict-fields",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ansi-wl-pprint",
              "version-range": ">=0.6.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": ">=0.10",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "data-default",
              "version-range": ">=0.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": ">=4.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "parsers",
              "version-range": ">=0.12.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "semigroups",
              "version-range": ">=0.16",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "trifecta",
              "version-range": ">=1.7.1.1 && <2.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "unordered-containers",
              "version-range": ">=0.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.10",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ADPfusion",
              "version-range": "==0.6.0.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "PrimitiveArray",
              "version-range": "==0.10.0.*",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "FormalGrammars",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ansi-wl-pprint",
          "version-range": ">=0.6.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": ">=0.10",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "data-default",
          "version-range": ">=0.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": ">=4.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "parsers",
          "version-range": ">=0.12.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "semigroups",
          "version-range": ">=0.16",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "trifecta",
          "version-range": ">=1.7.1.1 && <2.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "unordered-containers",
          "version-range": ">=0.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.10",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ADPfusion",
          "version-range": "==0.6.0.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "PrimitiveArray",
          "version-range": "==0.10.0.*",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "FormalGrammars",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
