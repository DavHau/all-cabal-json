{
  "description": {
    "spec-version": {
      "Right": ">=1.2"
    },
    "package": {
      "name": "copilot",
      "version": [
        1,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Lee Pike <leepike@galois.com>",
    "author": "Lee Pike, Robin Morisset, Alwyn Goodloe, Sebastian Niller",
    "stability": "",
    "tested-with": [],
    "homepage": "http://leepike.github.com/Copilot/",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "A stream DSL for writing embedded C monitors.",
    "description": "Can you write a list in Haskell? Then you can write embedded C code using\nCopilot. Here's a Copilot program that computes the Fibonacci sequence (over\nWord 64s) and tests for even numbers:\n\n> fib :: Streams\n> fib = do\n>  let f = varW64 \"fib\"\n>  let t = varB \"t\"\n>  f .= [0,1] ++ f + (drop 1 f)\n>  t .= even f\n>    where even :: Spec Word64 -> Spec Bool\n>          even w' = w' `mod` 2 == 0\n\nCopilot contains an interpreter, a compiler, and uses a model-checker to check\nthe correctness of your program. The compiler generates constant time and\nconstant space C code via Tom Hawkin's Atom (thanks Tom!). Copilot was\noriginally developed to write embedded monitors for more complex embedded\nsystems, but it can be used to develop a variety of functional-style embedded\ncode.",
    "category": "Language, Embedded",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Language",
          "Copilot"
        ],
        [
          "Language",
          "Copilot",
          "AdHocC"
        ],
        [
          "Language",
          "Copilot",
          "Core"
        ],
        [
          "Language",
          "Copilot",
          "Language"
        ],
        [
          "Language",
          "Copilot",
          "Language",
          "Sampling"
        ],
        [
          "Language",
          "Copilot",
          "Language",
          "FunctionCalls"
        ],
        [
          "Language",
          "Copilot",
          "Language",
          "RandomOps"
        ],
        [
          "Language",
          "Copilot",
          "Language",
          "Casting"
        ],
        [
          "Language",
          "Copilot",
          "AtomToC"
        ],
        [
          "Language",
          "Copilot",
          "Compiler"
        ],
        [
          "Language",
          "Copilot",
          "Interpreter"
        ],
        [
          "Language",
          "Copilot",
          "Help"
        ],
        [
          "Language",
          "Copilot",
          "Analyser"
        ],
        [
          "Language",
          "Copilot",
          "PrettyPrinter"
        ],
        [
          "Language",
          "Copilot",
          "Tests",
          "Random"
        ],
        [
          "Language",
          "Copilot",
          "Dispatch"
        ],
        [
          "Language",
          "Copilot",
          "Interface"
        ],
        [
          "Language",
          "Copilot",
          "Libs",
          "ErrorChks"
        ],
        [
          "Language",
          "Copilot",
          "Libs",
          "PTLTL"
        ],
        [
          "Language",
          "Copilot",
          "Libs",
          "LTL"
        ],
        [
          "Language",
          "Copilot",
          "Libs",
          "Indexes"
        ],
        [
          "Language",
          "Copilot",
          "Libs",
          "Statistics"
        ],
        [
          "Language",
          "Copilot",
          "Examples",
          "Examples"
        ],
        [
          "Language",
          "Copilot",
          "Examples",
          "LTLExamples"
        ],
        [
          "Language",
          "Copilot",
          "Examples",
          "PTLTLExamples"
        ],
        [
          "Language",
          "Copilot",
          "Examples",
          "StatExamples"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.2 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "atom",
            "version-range": ">=1.0.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.2.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "process",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "random",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.0.0.0",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.2 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "atom",
        "version-range": ">=1.0.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.2.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "process",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "random",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.0.0.0",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
