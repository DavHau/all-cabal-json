{
  "description": {
    "spec-version": {
      "Right": ">=1.14.0"
    },
    "package": {
      "name": "snaplet-amqp",
      "version": [
        0,
        1,
        2,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "(c) 2014 Parnell Springmeyer",
    "maintainer": "parnell@digitalmentat.com",
    "author": "Parnell Springmeyer",
    "stability": "alpha",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      }
    ],
    "homepage": "https://github.com/ixmatus/snaplet-amqp",
    "pkg-url": "http://hackage.haskell.org/package/snaplet-amqp",
    "bug-reports": "https://github.com/ixmatus/snaplet-amqp/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/ixmatus/snaplet-amqp",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Snap framework snaplet for the AMQP library",
    "description": "`snaplet-amqp` is a snaplet for the Snap web framework providing\nconvenience functions and state management for the Haskell AMQP\npackage.\n\nBelow is an incomplete example.\n\n@\nimport           Control.Lens\nimport           Snap\nimport           Snap.Snaplet\nimport           Snap.Snaplet.AMQP\ndata App = App\n{ _amqp    :: Snaplet AmqpState }\nmakeLenses ''App\ninstance HasAmqpConn (Handler b App) where\ngetAmqpConn = with amqp getAmqpConn\napp :: SnapletInit App App\napp = makeSnaplet \"app\" \"An snaplet example application.\" Nothing $ do\na <- nestSnaplet \"amqp\" amqp initAMQP\naddRoutes appRoutes -- Your routes, I haven't defined any here\nreturn $ App a\n@",
    "category": "Web",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "LICENSE",
      "README.org"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Snap",
          "Snaplet",
          "AMQP"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Paths_snaplet_amqp"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "snap",
            "version-range": ">=0.13 && <0.14",
            "library": [
              {}
            ]
          },
          {
            "package-name": "amqp",
            "version-range": ">=0.10 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4 && <0.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "configurator",
            "version-range": ">=0.3 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "network",
            "version-range": ">=2.5 && <2.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2 && <3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "snap",
        "version-range": ">=0.13 && <0.14",
        "library": [
          {}
        ]
      },
      {
        "package-name": "amqp",
        "version-range": ">=0.10 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4 && <0.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "configurator",
        "version-range": ">=0.3 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "network",
        "version-range": ">=2.5 && <2.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2 && <3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
