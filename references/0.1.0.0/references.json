{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "references",
      "version": [
        0,
        1,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "nboldi@elte.hu",
    "author": "Boldizsar Nemeth",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/lazac/references",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Generalization of lenses, folds and traversals for haskell",
    "description": "Similar to lenses, references provide access to part of a structure or a different\nview on the structure. References are considered to be a generalization of those,\nbut the come with a different representation. The main purpose of references is to\nhave accessors that can cooperate with monads, especially IO.",
    "category": "Control",
    "custom-fields": [
      [
        "x-revision",
        "3"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Reference"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "MonadInstances"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "Monad"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "Generate"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "Tuple"
        ],
        [
          "Control",
          "Reference",
          "Examples",
          "TH"
        ],
        [
          "Control",
          "Reference",
          "Representation"
        ],
        [
          "Control",
          "Reference",
          "Operators"
        ],
        [
          "Control",
          "Reference",
          "Predefined"
        ],
        [
          "Control",
          "Reference",
          "TupleInstances"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Control",
            "Reference",
            "Examples",
            "Examples"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "<5 && >=4.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "==2.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": "==0.4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "==0.5.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "either",
            "version-range": "==4.3.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": "==4.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "<3 && >=2.8",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "<5 && >=4.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "==2.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": "==0.4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "==0.5.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "either",
        "version-range": "==4.3.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": "==4.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "<3 && >=2.8",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
