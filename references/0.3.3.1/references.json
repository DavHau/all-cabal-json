{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "references",
      "version": [
        0,
        3,
        3,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Boldizsar Nemeth, 2014",
    "maintainer": "nboldi@elte.hu",
    "author": "Boldizsar Nemeth",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/lazac/references",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/lazac/references.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Selectors for reading and updating data.",
    "description": "References are data accessors that can read, write or update the accessed infromation through their context. They are first-class values, can be passed in functions, transformed, combined. References generalize lenses, folds and traversals for haskell (see: < https://hackage.haskell.org/package/lens>).\n\nReferences are more general than field selectors in traditional languages.\n\n* References are first-class values. If there is a struct in C, for example, with an `int` field `fl`, then fl can only be used as part of an expression. One can not generalize a function to take a field selector and transform the selected data or use it in other ways.\n\n* They can have different meanings, while field accessors can only represent data-level containment. They can express uncertain containment (like field selectors of C unions), different viewpoints of the same data, and other concepts.\n\nThere are two things that references can do but the previously mentioned access methods don't.\n\n* References can cooperate with monads, for example IO. This opens many new applications.\n\n* References can be added using the @&+&@ operator, to create new lenses more easily.\n\nBasic idea taken from the currently not maintained package <https://hackage.haskell.org/package/yall>.\n\nAn example use of the references (a logger application that spawns new threads to update a global log):\n\n> logger =\n>   (forever $ do\n>      log <- logChan ^? chan&logRecord    -- Extract the log record from the received log message\n>      thrId <- forkIO (do time <- getTime\n>                          ioref&lastLogTime != time $ logDB     -- Update the last logging time mutable log database\n>                          let logMsg = senderThread .- show     -- Transform the thread id to a string and\n>                                         $ loggingTime .= time  -- update the time\n>                                         $ log                  -- inside the log message\n>                          ioref&debugInfos !~ addLogEntry log $ logDB  -- update the table of log entries\n>                          mvar !- (+1) $ count )\n>      mvar !- (thrId:) $ updaters                               -- Record the spawned thread\n>     ) `catch` stopUpdaters updaters\n>   where stopUpdaters updaters ThreadKilled =\n>           mvar&traverse !| killThread $ updaters               -- Kill all spawned threads before stopping\n\nThere are a bunch of predefined references for datatypes included in standard libraries.\n\nNew references can be created in several ways:\n\n* From getter, setter and updater, using the @reference@ function.\n\n* From getter and setter, using one of the simplified functions (@lens@, @simplePartial@, @partial@, ...).\n\n* Using the `Data.Traversal` instance on a datatype to generate a traversal of each element.\n\n* Using lenses from `Control.Lens` package. There are a lot of packages defining lenses, folds and traversals\nfor various data structures, so it is very useful that all of them can simply be converted into a reference.\n\n* Generating references for newly defined datatypes using the `makeReferences` Template Haskell function.\n",
    "category": "Control",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "CHANGELOG.md",
      "Control/Reference/Examples/Examples.hs",
      "Control/Reference/Examples/Main.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Reference"
        ],
        [
          "Control",
          "Reference",
          "Representation"
        ],
        [
          "Control",
          "Reference",
          "Types"
        ],
        [
          "Control",
          "Reference",
          "Combinators"
        ],
        [
          "Control",
          "Reference",
          "Operators"
        ],
        [
          "Control",
          "Reference",
          "Generators"
        ],
        [
          "Control",
          "Reference",
          "Predefined"
        ],
        [
          "Control",
          "Reference",
          "Predefined",
          "Containers"
        ],
        [
          "Control",
          "Reference",
          "Predefined",
          "Containers",
          "Tree"
        ],
        [
          "Control",
          "Reference",
          "TupleInstances"
        ],
        [
          "Control",
          "Reference",
          "InternalInterface"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "Records"
        ],
        [
          "Control",
          "Reference",
          "TH",
          "Tuple"
        ],
        [
          "Control",
          "Reference",
          "Examples",
          "TH"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.9 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "uniplate",
            "version-range": ">=1.6 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.1 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "array",
            "version-range": ">=0.5 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.5 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "either",
            "version-range": ">=4.3 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.8 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "instance-control",
            "version-range": ">=0.1 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": ">=1.2 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": ">=1.3 && <2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.9 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "uniplate",
        "version-range": ">=1.6 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.1 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "array",
        "version-range": ">=0.5 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.5 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "either",
        "version-range": ">=4.3 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.8 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "instance-control",
        "version-range": ">=0.1 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": ">=1.2 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": ">=1.3 && <2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "lens-creation": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Control/Reference/Examples/Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "array",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "either",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "template-haskell",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "instance-control",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "filepath",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "HUnit",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "uniplate",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "either",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "instance-control",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "array",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "either",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "template-haskell",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "instance-control",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "filepath",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "HUnit",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "uniplate",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "either",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "instance-control",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
