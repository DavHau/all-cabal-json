{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "GTALib",
      "version": [
        0,
        0,
        6
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "emoto@mist.i.u-tokyo.ac.jp",
    "author": "Kento Emoto",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.0.4"
      }
    ],
    "homepage": "https://bitbucket.org/emoto/gtalib",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://bitbucket.org/emoto/gtalib.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "A library for GTA programming           ",
    "description": "This package provides the core functionalities of the GTA (Generate, Test, and Aggregate) programming framework on Haskell (c.f., Kento Emoto, Sebastian Fischer, Zhenjiang Hu: Generate, Test, and Aggregate - A Calculation-based Framework for Systematic Parallel Programming with MapReduce. ESOP 2012: 254-273. The authors' version is available at <http://www.ipl-lab.org/~emoto/ESOP2012.pdf>).\n\n/Example/\n\nThe following code is a GTA program to solve the 0-1 Knapsack problem (<http://en.wikipedia.org/wiki/Knapsack_problem>). It /appears to be an exponential cost/ proram in the number of input items, because it appears to generate all item selections by @subsP items@ (/Generate/), discard those with total weight heavier than the knapsack's capacity by @`filterBy` weightlimit capacity@ (/Test/), and take the most valuable selection by @`aggregateBy` maxsumsolutionWith getValue@ (/Aggregate/). However, it /actually runs in a linear time/ owing to our proposed program transformation 'Filter-embedding Semiring Fusion' implemented in the library. In addition, it runs in /parallel/ so that you can get linear speedup.\n\n> knapsack capacity items =\n>  subsP items\n>  `filterBy` weightlimit capacity\n>  `aggregateBy` maxsumsolutionWith getValue\n>\n> getValue (_, v) = v\n> getWeight (w, _) = w\n>\n> weightlimit w = (<=w) <.> weightsum where\n>   weightsum = homJ' times single nil\n>   x1 `times` x2  = (   x1 +    x2) `min` (w+1)\n>   single i  = getWeight i `min` (w+1)\n>   nil = 0\n\nSeveral examples of GTA programming are found in /examples/ directory at <https://bitbucket.org/emoto/gtalib/src>.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "GTA",
          "Core"
        ],
        [
          "GTA",
          "Util",
          "TypeInfo"
        ],
        [
          "GTA",
          "Util",
          "GenericSemiringStructureTemplate"
        ],
        [
          "GTA",
          "Data",
          "JoinList"
        ],
        [
          "GTA",
          "Data",
          "ConsList"
        ],
        [
          "GTA",
          "Data",
          "BinTree"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src/"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.3 && <4.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.5 && <2.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.4 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parallel",
            "version-range": ">=3.1 && <3.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.1 && <1.4",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.3 && <4.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.5 && <2.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.4 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parallel",
        "version-range": ">=3.1 && <3.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.1 && <1.4",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "unit-test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "test.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test/"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.3 && <4.6",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework",
              "version-range": ">=0.6 && <0.7",
              "library": [
                {}
              ]
            },
            {
              "package-name": "GTALib",
              "version-range": ">=0.0.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "HUnit",
              "version-range": ">=1.2.4.2 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "test-framework-hunit",
              "version-range": ">=0.2.7 && <0.3",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.3 && <4.6",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework",
          "version-range": ">=0.6 && <0.7",
          "library": [
            {}
          ]
        },
        {
          "package-name": "GTALib",
          "version-range": ">=0.0.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "HUnit",
          "version-range": ">=1.2.4.2 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "test-framework-hunit",
          "version-range": ">=0.2.7 && <0.3",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
