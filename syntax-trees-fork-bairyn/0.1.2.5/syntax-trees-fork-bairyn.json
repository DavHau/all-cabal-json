{
  "description": {
    "spec-version": {
      "Right": ">=1.18"
    },
    "package": {
      "name": "syntax-trees-fork-bairyn",
      "version": [
        0,
        1,
        2,
        5
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "dom.orchard@gmail.com\n,ByronJohnsonFP@gmail.com",
    "author": "Dominic Orchard\n,Byron Johnson",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:bairyn/syntax-trees.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:bairyn/syntax-trees.git",
        "module": null,
        "branch": null,
        "tag": "v0.1.2.5",
        "subdir": null
      }
    ],
    "synopsis": "Convert between different Haskell syntax trees.  Bairyn's fork.",
    "description": "This is a fork of Dominic Orchard's syntax-trees package that is patched\njust to build on Haskell's more modern ecosystem.\n\nProvides an instance that translates haskell-src-exts expression trees into\nTemplate Haskell expression trees in a way that depends only on the\nhaskell-src-exts syntax tree and agreement on the pretty-printed\nrepresentation of Haskell between haskell-src-exts pretty-printer and\nTemplate Haskell quotations (as opposed to depending on both TH and\nhaskell-src-exts syntax tree representations).\n\nInstead of converting between data types,\nhaskell-src-exts syntax trees are pretty-printed and wrapped in\na TH quotation which is then interpreted as a Haskell program,\nyielding a TH Exp tree. Free variables in the haskell-src-exts tree are\npreserved by lifting them to TH splices prior to pretty-printing.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/Foo.lhs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": [
      "README.md"
    ]
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Fork",
          "Bairyn",
          "Language",
          "Haskell",
          "SyntaxTrees"
        ],
        [
          "Fork",
          "Bairyn",
          "Language",
          "Haskell",
          "SyntaxTrees",
          "Main"
        ],
        [
          "Fork",
          "Bairyn",
          "Language",
          "Haskell",
          "SyntaxTrees",
          "ExtsToTH"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "TemplateHaskell"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "MultiParamTypeClasses"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell-src-exts",
            "version-range": ">=1.16 && <2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "uniplate",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "hint",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell-src-exts",
        "version-range": ">=1.16 && <2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "uniplate",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "hint",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
