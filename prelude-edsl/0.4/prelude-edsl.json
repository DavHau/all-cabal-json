{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "prelude-edsl",
      "version": [
        0,
        4
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) 2015, Emil Axelsson",
    "maintainer": "emax@chalmers.se",
    "author": "Emil Axelsson",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/emilaxelsson/prelude-edsl",
    "pkg-url": "",
    "bug-reports": "https://github.com/emilaxelsson/prelude-edsl/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:emilaxelsson/prelude-edsl.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "An EDSL-motivated subset of the Prelude",
    "description": "\"Prelude.EDSL\" exports a small subset of the \"Prelude\":\nsome standard types and classes plus a small number of\nconvenience functions.\n\nThe motivation for this module is that it is common for\ndeeply embedded domain-specific languages (EDSLs) to\nredefine identifiers from the \"Prelude\", so EDSL users must\nhide the \"Prelude\" in their programs. However, there are\ncertain useful things from the \"Prelude\" that are usually\nnot redefined -- function composition being one example --\nso it becomes quite awkward to have to hide everything from\nthe \"Prelude\".\n\nThe reason for exporting e.g the @Num@ class but not @Ord@\nis that it is possible to give an instance for deep\nembeddings of the former but not the latter. For example,\nassuming @Exp@ is the type of a deep embedding, we can have\n\n> (+) :: Exp -> Exp -> Exp\n\nbut not\n\n> (<) :: Exp -> Exp -> Exp\n\n(because @(<)@ has a @Bool@ result, regardless of the type\nof the arguments).",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Prelude",
          "EDSL"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "<20",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "<20",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
