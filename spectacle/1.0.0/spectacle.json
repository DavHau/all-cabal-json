{
  "description": {
    "spec-version": {
      "Left": [
        2,
        4
      ]
    },
    "package": {
      "name": "spectacle",
      "version": [
        1,
        0,
        0
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "Apache_2_0"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2021 Arista Networks",
    "maintainer": "opensource@awakesecurity.com",
    "author": "Arista Networks",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.10.3"
      }
    ],
    "homepage": "https://github.com/awakesecurity/spectacle",
    "pkg-url": "",
    "bug-reports": "https://github.com/awakesecurity/spectacle/issues",
    "source-repos": [],
    "synopsis": "Embedded specification language & model checker in Haskell.",
    "description": "Spectacle is an embedded domain-specific language that provides a family\nof type-level combinators for authoring specifications of program behavior\nalong with a model checker for verifying that user implementations of a\nprogram satisfy written specifications.",
    "category": "Testing, Concurrency",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "README.md",
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Applicative",
          "Day"
        ],
        [
          "Control",
          "Applicative",
          "Phases"
        ],
        [
          "Control",
          "Applicative",
          "Queue"
        ],
        [
          "Control",
          "Comonad",
          "Tape"
        ],
        [
          "Control",
          "Hyper"
        ],
        [
          "Control",
          "Mealy"
        ],
        [
          "Control",
          "Monad",
          "Levels"
        ],
        [
          "Control",
          "Monad",
          "Levels",
          "Internal"
        ],
        [
          "Control",
          "Monad",
          "Ref"
        ],
        [
          "Control",
          "Natural"
        ],
        [
          "Data",
          "Ascript"
        ],
        [
          "Data",
          "Bag"
        ],
        [
          "Data",
          "Fingerprint"
        ],
        [
          "Data",
          "Functor",
          "Loom"
        ],
        [
          "Data",
          "Functor",
          "Tree"
        ],
        [
          "Data",
          "Name"
        ],
        [
          "Data",
          "Node"
        ],
        [
          "Data",
          "Type",
          "List"
        ],
        [
          "Data",
          "Type",
          "Rec"
        ],
        [
          "Data",
          "World"
        ],
        [
          "Language",
          "Spectacle"
        ],
        [
          "Language",
          "Spectacle",
          "AST"
        ],
        [
          "Language",
          "Spectacle",
          "AST",
          "Action"
        ],
        [
          "Language",
          "Spectacle",
          "AST",
          "Temporal"
        ],
        [
          "Language",
          "Spectacle",
          "Exception",
          "RuntimeException"
        ],
        [
          "Language",
          "Spectacle",
          "Fairness"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "CLI"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Diagram"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Doc"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Options"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Paths"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Point"
        ],
        [
          "Language",
          "Spectacle",
          "Interaction",
          "Pos"
        ],
        [
          "Language",
          "Spectacle",
          "Model"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelAction"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelEnv"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelError"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelNode"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelState"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "ModelTemporal"
        ],
        [
          "Language",
          "Spectacle",
          "Model",
          "Monad"
        ],
        [
          "Language",
          "Spectacle",
          "Lang"
        ],
        [
          "Language",
          "Spectacle",
          "Lang",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Lang",
          "Member"
        ],
        [
          "Language",
          "Spectacle",
          "Lang",
          "Op"
        ],
        [
          "Language",
          "Spectacle",
          "Lang",
          "Scoped"
        ],
        [
          "Language",
          "Spectacle",
          "RTS",
          "Registers"
        ],
        [
          "Language",
          "Spectacle",
          "Specification"
        ],
        [
          "Language",
          "Spectacle",
          "Specification",
          "Action"
        ],
        [
          "Language",
          "Spectacle",
          "Specification",
          "Prop"
        ],
        [
          "Language",
          "Spectacle",
          "Specification",
          "Variable"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Closure"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Closure",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Enabled"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Enabled",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Env"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Env",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Error"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Error",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "NonDet"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "NonDet",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Plain"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Plain",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Prime"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Prime",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Quantifier"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Quantifier",
          "Internal"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Logic"
        ],
        [
          "Language",
          "Spectacle",
          "Syntax",
          "Logic",
          "Internal"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "BlockArguments"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DerivingVia"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MagicHash"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RoleAnnotations"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "StandaloneKindSignatures"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "UnicodeSyntax"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wcompat",
            "-Wincomplete-record-updates",
            "-Wincomplete-uni-patterns",
            "-Wmissing-fields",
            "-Wpartial-fields",
            "-Widentities",
            "-Wmissing-home-modules",
            "-Wredundant-constraints",
            "-fshow-warning-groups",
            "-Wmissing-import-lists",
            "-Wunused-packages"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.14 && <4.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "comonad",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "hashable",
            "version-range": ">=1.3.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "microlens",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "microlens-mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "optparse-applicative",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "logict",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "prettyprinter",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "prettyprinter-ansi-terminal",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.14 && <4.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "comonad",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "hashable",
        "version-range": ">=1.3.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "microlens",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "microlens-mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "optparse-applicative",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "logict",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "prettyprinter",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "prettyprinter-ansi-terminal",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "unit-tests": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test/unit-tests"
          ],
          "otherModules": [
            [
              "Test",
              "Control",
              "Comonad",
              "Tape"
            ],
            [
              "Test",
              "Gen"
            ],
            [
              "Test",
              "Gen",
              "Rec"
            ],
            [
              "Test",
              "Language",
              "Spectacle",
              "Interaction"
            ],
            [
              "Test",
              "Language",
              "Spectacle",
              "Interaction",
              "Paths"
            ],
            [
              "Test",
              "Language",
              "Spectacle",
              "Interaction",
              "Pos"
            ],
            [
              "Test",
              "Laws",
              "Lens"
            ],
            [
              "Test",
              "Laws",
              "Ord"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "BlockArguments"
            },
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DerivingVia"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MagicHash"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RoleAnnotations"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "StandaloneKindSignatures"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UnicodeSyntax"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Wincomplete-record-updates",
              "-Wincomplete-uni-patterns",
              "-Wmissing-fields",
              "-Wpartial-fields",
              "-Widentities",
              "-Wmissing-home-modules",
              "-Wredundant-constraints",
              "-fshow-warning-groups",
              "-Wmissing-import-lists",
              "-Wunused-packages"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.14 && <4.15",
              "library": [
                {}
              ]
            },
            {
              "package-name": "comonad",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "spectacle",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "microlens",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.14 && <4.15",
          "library": [
            {}
          ]
        },
        {
          "package-name": "comonad",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "spectacle",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "microlens",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "integration-tests": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Main.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test/integration"
          ],
          "otherModules": [
            [
              "Specifications",
              "BitClock"
            ],
            [
              "Specifications",
              "Diehard"
            ],
            [
              "Specifications",
              "SimpleClock"
            ],
            [
              "Specifications",
              "Status"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "BlockArguments"
            },
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DefaultSignatures"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DerivingVia"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MagicHash"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RoleAnnotations"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "StandaloneKindSignatures"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UnicodeSyntax"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Wincomplete-record-updates",
              "-Wincomplete-uni-patterns",
              "-Wmissing-fields",
              "-Wpartial-fields",
              "-Widentities",
              "-Wmissing-home-modules",
              "-Wredundant-constraints",
              "-fshow-warning-groups",
              "-Wmissing-import-lists",
              "-Wunused-packages"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.14 && <4.15",
              "library": [
                {}
              ]
            },
            {
              "package-name": "spectacle",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hashable",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hedgehog",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.14 && <4.15",
          "library": [
            {}
          ]
        },
        {
          "package-name": "spectacle",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hashable",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hedgehog",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
