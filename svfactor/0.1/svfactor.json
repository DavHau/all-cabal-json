{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "svfactor",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENCE"
    ],
    "copyright": "Copyright (c) 2018, Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.",
    "maintainer": "george@qfpl.io",
    "author": "George Wilson",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.8.4"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.10.3"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.0.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.2.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==8.4.3"
      }
    ],
    "homepage": "https://github.com/qfpl/svfactor",
    "pkg-url": "",
    "bug-reports": "https://github.com/qfpl/svfactor/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com/qfpl/svfactor.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Syntax-preserving CSV manipulation",
    "description": "<<http://i.imgur.com/uZnp9ke.png>>\n\nsvfactor is a library for parsing, manipulating, and printing CSV and\nsimilar formats (such as PSV, TSV, and many more).\n\nsvfactor retains all syntactic information including newlines, and\nprovides lenses, prisms, and traversals to query and manipulate this\nstructure.\nThis should make it useful for writing custom CSV transformations and\nsanitisation tools. For example, one could easily use it to rewrite all\nCRLF newlines to LF.\nIt also extends RFC4180 by allowing optional spacing surrounding fields.\n\nsvfactor's parser is exposed so you can use it independently and printing is similarly standalone.\n\nPlease note that there are __known performance problems with svfactor__.\n\nExamples:\n\n* Handling multiple logical documents in one file: <https://github.com/qfpl/svfactor/blob/master/examples/src/Data/Svfactor/Example/Concat.hs Concat.hs>\n* Fixing inconsistent formatting with lenses: <https://github.com/qfpl/svfactor/blob/master/examples/src/Data/Svfactor/Example/Requote.hs Requote.hs>",
    "category": "CSV, Text, Web",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Svfactor"
        ],
        [
          "Data",
          "Svfactor",
          "Parse"
        ],
        [
          "Data",
          "Svfactor",
          "Parse",
          "Internal"
        ],
        [
          "Data",
          "Svfactor",
          "Parse",
          "Options"
        ],
        [
          "Data",
          "Svfactor",
          "Print"
        ],
        [
          "Data",
          "Svfactor",
          "Print",
          "Internal"
        ],
        [
          "Data",
          "Svfactor",
          "Print",
          "Options"
        ],
        [
          "Data",
          "Svfactor",
          "Syntax"
        ],
        [
          "Data",
          "Svfactor",
          "Syntax",
          "Field"
        ],
        [
          "Data",
          "Svfactor",
          "Syntax",
          "Record"
        ],
        [
          "Data",
          "Svfactor",
          "Syntax",
          "Sv"
        ],
        [
          "Data",
          "Svfactor",
          "Text",
          "Escape"
        ],
        [
          "Data",
          "Svfactor",
          "Text",
          "Newline"
        ],
        [
          "Data",
          "Svfactor",
          "Text",
          "Space"
        ],
        [
          "Data",
          "Svfactor",
          "Text",
          "Quote"
        ],
        [
          "Data",
          "Svfactor",
          "Text",
          "Separator"
        ],
        [
          "Data",
          "Svfactor",
          "Structure",
          "Headedness"
        ],
        [
          "Data",
          "Svfactor",
          "Vector",
          "NonEmpty"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-O2"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "attoparsec",
            "version-range": ">=0.12.1.4 && <0.14",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bifunctors",
            "version-range": ">=5.1 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.9.1.10 && <0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "charset",
            "version-range": ">=0.3 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.1 && <1.5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsec",
            "version-range": ">=3.1 && <3.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "parsers",
            "version-range": ">=0.12 && <0.13",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroupoids",
            "version-range": ">=5 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroups",
            "version-range": ">=0.18 && <0.20",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.0 && <1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "trifecta",
            "version-range": ">=1.5 && <2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "utf8-string",
            "version-range": ">=1 && <1.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": ">=0.10 && <0.13",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "attoparsec",
        "version-range": ">=0.12.1.4 && <0.14",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bifunctors",
        "version-range": ">=5.1 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.9.1.10 && <0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "charset",
        "version-range": ">=0.3 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.1 && <1.5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsec",
        "version-range": ">=3.1 && <3.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "parsers",
        "version-range": ">=0.12 && <0.13",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroupoids",
        "version-range": ">=5 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroups",
        "version-range": ">=0.18 && <0.20",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.0 && <1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "trifecta",
        "version-range": ">=1.5 && <2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "utf8-string",
        "version-range": ">=1 && <1.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": ">=0.10 && <0.13",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "tasty": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "tasty.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "Data",
              "Svfactor",
              "Generators"
            ],
            [
              "Data",
              "Svfactor",
              "ParseTest"
            ],
            [
              "Data",
              "Svfactor",
              "PrintTest"
            ],
            [
              "Data",
              "Svfactor",
              "RoundTripsParsePrint"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": ">=0.9.1.10 && <0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hedgehog",
              "version-range": ">=0.5 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lens",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "parsers",
              "version-range": ">=0.12 && <0.13",
              "library": [
                {}
              ]
            },
            {
              "package-name": "semigroups",
              "version-range": ">=0.18 && <0.19",
              "library": [
                {}
              ]
            },
            {
              "package-name": "svfactor",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": ">=0.11 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hedgehog",
              "version-range": ">=0.1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hunit",
              "version-range": ">=0.9 && <0.11",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": ">=1.0 && <1.3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "trifecta",
              "version-range": ">=1.5 && <2.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "utf8-string",
              "version-range": ">=1 && <1.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "vector",
              "version-range": ">=0.10 && <0.13",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": ">=0.9.1.10 && <0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hedgehog",
          "version-range": ">=0.5 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lens",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "parsers",
          "version-range": ">=0.12 && <0.13",
          "library": [
            {}
          ]
        },
        {
          "package-name": "semigroups",
          "version-range": ">=0.18 && <0.19",
          "library": [
            {}
          ]
        },
        {
          "package-name": "svfactor",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": ">=0.11 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hedgehog",
          "version-range": ">=0.1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hunit",
          "version-range": ">=0.9 && <0.11",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": ">=1.0 && <1.3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "trifecta",
          "version-range": ">=1.5 && <2.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "utf8-string",
          "version-range": ">=1 && <1.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "vector",
          "version-range": ">=0.10 && <0.13",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
