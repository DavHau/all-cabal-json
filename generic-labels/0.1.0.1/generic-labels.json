{
  "description": {
    "spec-version": {
      "Left": [
        3,
        0
      ]
    },
    "package": {
      "name": "generic-labels",
      "version": [
        0,
        1,
        0,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_3_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [],
    "copyright": "",
    "maintainer": "Sam Derbyshire",
    "author": "Sam Derbyshire",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/sheaf/generic-labels",
    "pkg-url": "",
    "bug-reports": "https://github.com/sheaf/generic-labels/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/sheaf/generic-labels",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Generically extract and replace collections of record fields",
    "description": "Handle various conversion operations between record types,\nsuch as projecting out a collection of fields from a record,\nor plugging in values for a subset of the fields of a larger record.\n\nWorks both with built-in Haskell records, as well as explicitly labelled types\n@ ( #label := value ) :: ( \"label\" := Type ) @.\n\nProject out a smaller record using @project@:\n\n@\n  data IBXD x = IBXD { i :: Int, b :: Bool, x :: x, d :: Double }\n    deriving stock Generic\n  data XI x = XI { x :: x, i :: Int }\n    deriving stock Generic\n@\n\n@\n  ibxd_to_xi :: IBXD x -> XI x\n  ibxd_to_xi = project\n@\n\nPlug in a subset of fields using @inject@:\n\n@\n  xi_into_ibxd :: XI x -> IBXD x -> IBXD x\n  xi_into_ibxd = inject\n@\n\nCreate a record out of two collections of arguments using @adapt@:\n\n@\n  xi_plus_bd_makes_ibxd :: XI x -> ( \"b\" := Bool, \"d\" := Double ) -> IBXD x\n  xi_plus_bd_makes_ibxd = adapt\n@\n\nSee also the library's [readme](https://github.com/sheaf/generic-labels/blob/master/readme.md).",
    "category": "Data, Generics, Records",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Generic",
          "Labels"
        ],
        [
          "Data",
          "Generic",
          "Labels",
          "Internal"
        ],
        [
          "Data",
          "Generic",
          "Labels",
          "Internal",
          "Errors"
        ],
        [
          "Data",
          "Label"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Type",
            "Error"
          ],
          [
            "Data",
            "Type",
            "List"
          ],
          [
            "Data",
            "Type",
            "Maybe"
          ],
          [
            "Data",
            "Type",
            "Multiplicity"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "disable-extension": "StarIsType"
          },
          {
            "enable-extension": "PatternSynonyms"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilyDependencies"
          },
          {
            "enable-extension": "TypeOperators"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wcompat",
            "-Wno-unticked-promoted-constructors"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.14 && <4.17",
            "library": [
              {}
            ]
          },
          {
            "package-name": "generic-lens-core",
            "version-range": ">=2.0 && <2.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.14 && <4.17",
        "library": [
          {}
        ]
      },
      {
        "package-name": "generic-lens-core",
        "version-range": ">=2.0 && <2.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "generic-labels-test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            0,
            9
          ],
          "module-name": [
            "Inspection"
          ]
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "ShouldCompile",
              "Adapt",
              "RRR"
            ],
            [
              "ShouldCompile",
              "Adapt",
              "TTR"
            ],
            [
              "ShouldCompile",
              "Adapt",
              "TTT"
            ],
            [
              "ShouldCompile",
              "Adapt",
              "SingletonArg"
            ],
            [
              "ShouldCompile",
              "Adapt",
              "SingletonArgOpt"
            ],
            [
              "ShouldCompile",
              "Adapt",
              "SingletonOpt"
            ],
            [
              "ShouldCompile",
              "Inject",
              "Basic"
            ],
            [
              "ShouldCompile",
              "Project",
              "Basic"
            ],
            [
              "ShouldCompile",
              "Project",
              "PolymorphicR"
            ],
            [
              "ShouldCompile",
              "Project",
              "PolymorphicT"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "DataKinds"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "disable-extension": "StarIsType"
            },
            {
              "enable-extension": "PatternSynonyms"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilyDependencies"
            },
            {
              "enable-extension": "TypeOperators"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Wno-unticked-promoted-constructors"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.14 && <4.17",
              "library": [
                {}
              ]
            },
            {
              "package-name": "generic-labels",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "Cabal",
              "version-range": ">=3.0 && <3.5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "inspection-testing",
              "version-range": ">=0.4 && <0.5",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.14 && <4.17",
          "library": [
            {}
          ]
        },
        {
          "package-name": "generic-labels",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "Cabal",
          "version-range": ">=3.0 && <3.5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "inspection-testing",
          "version-range": ">=0.4 && <0.5",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
