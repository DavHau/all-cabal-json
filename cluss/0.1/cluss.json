{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "cluss",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (C) 2014 Yusuke Matsushita",
    "maintainer": "Yusuke Matsushita <y.skm24t@gmail.com>",
    "author": "Yusuke Matsushita",
    "stability": "provinsional",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.8.3"
      }
    ],
    "homepage": "https://github.com/Kinokkory/cluss",
    "pkg-url": "",
    "bug-reports": "https://github.com/Kinokkory/cluss/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:Kinokkory/cluss.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "simple alternative to type classes",
    "description": "A /cluss/ enables you to achieve /function overloading/, or ad-hoc polymorphism,\nwithout creating a new type class.\n\nIn order to give ad-hoc polymorphism to a type variable @a@,\nyou simply use @In@ with a list of \\\"type patterns\\\" like @In [Type T, ...] a@,\nwhich indicates that the type matches some of the patterns;\nwhich is analogous to a type class indicating that a type matches some of its \\\"instances\\\".\nThe constraint @In [Type T, ...] a@ is what we call a \\\"cluss\\\".\n\nCluss instances are /closed/ and cluss methods are /open/,\nunlike type classes, whose instances are open and whose methods are closed.\n\nClusses can easily be used in a nested way,\nand can even be /recursive/, just like recursive type classes,\nand therefore clusses are expressive enough to imitate Haskell-98-style type classes.\n\nMore information can be found in the Haddock or the comments in the source code.\nThe updated haddock is here: <http://kinokkory.github.io/cluss/>.",
    "category": "type system, constraints",
    "custom-fields": [
      [
        "x-revision",
        "4"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Type",
          "Cluss"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "RankNTypes"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
