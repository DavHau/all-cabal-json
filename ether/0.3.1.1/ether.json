{
  "description": {
    "spec-version": {
      "Right": ">=1.18"
    },
    "package": {
      "name": "ether",
      "version": [
        0,
        3,
        1,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Index Int <vlad.z.4096@gmail.com>",
    "author": "Index Int",
    "stability": "",
    "tested-with": [],
    "homepage": "https://int-index.github.io/ether/",
    "pkg-url": "",
    "bug-reports": "https://github.com/int-index/ether/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git@github.com:int-index/ether.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Monad transformers and classes",
    "description": "Ether is a Haskell library that extends @mtl@ and @transformers@ with\ntagged monad transformers and classes in a compatible way.",
    "category": "Control",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Ether",
          "Tagged"
        ],
        [
          "Control",
          "Ether",
          "Wrapped"
        ],
        [
          "Control",
          "Ether",
          "Abbr"
        ],
        [
          "Control",
          "Ether",
          "Implicit",
          "Abbr"
        ],
        [
          "Control",
          "Ether",
          "TH"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "Reader"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "Writer"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "State"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "State",
          "Lazy"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "State",
          "Strict"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "Ether",
          "Except"
        ],
        [
          "Control",
          "Monad",
          "Ether"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Reader"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Reader",
          "Class"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Writer"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Writer",
          "Class"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "State"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "State",
          "Class"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "State",
          "Lazy"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "State",
          "Strict"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Except"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Except",
          "Class"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "Reader"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "Writer"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "State"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "State",
          "Lazy"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "State",
          "Strict"
        ],
        [
          "Control",
          "Monad",
          "Ether",
          "Implicit",
          "Except"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Control",
            "Ether",
            "Util"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "DataKinds"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "DefaultSignatures"
          },
          {
            "enable-extension": "CPP"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <4.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.4.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-lift",
            "version-range": ">=0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mmorph",
            "version-range": ">=1.0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-control",
            "version-range": ">=1.0.0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-base",
            "version-range": ">=0.4.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "newtype-generics",
            "version-range": ">=0.4.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <4.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.4.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-lift",
        "version-range": ">=0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mmorph",
        "version-range": ">=1.0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-control",
        "version-range": ">=1.0.0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-base",
        "version-range": ">=0.4.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "newtype-generics",
        "version-range": ">=0.4.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "regression": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Regression.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.7 && <4.9",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": ">=0.4.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2.2.1",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": ">=0.10",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": ">=0.8",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.8",
              "library": [
                {}
              ]
            },
            {
              "package-name": "ether",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.7 && <4.9",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": ">=0.4.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2.2.1",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": ">=0.10",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": ">=0.8",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.8",
          "library": [
            {}
          ]
        },
        {
          "package-name": "ether",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
