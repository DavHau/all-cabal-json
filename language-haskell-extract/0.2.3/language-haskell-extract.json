{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "language-haskell-extract",
      "version": [
        0,
        2,
        3
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "BSD3.txt"
    ],
    "copyright": "",
    "maintainer": "Oscar Finnsson",
    "author": "Oscar Finnsson & Emil Nordling",
    "stability": "stable",
    "tested-with": [],
    "homepage": "http://github.com/finnsson/template-helper",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/finnsson/language-haskell-extract/",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Module to automatically extract functions from the local code.",
    "description": "@language-haskell-extract@ contains some useful helper functions on top of Template Haskell.\n\n@functionExtractor@ extracts all functions after a regexp-pattern.\n\n> foo = \"test\"\n> boo = \"testing\"\n> bar = $(functionExtractor \"oo$\")\n\nwill automagically extract the functions ending with @oo@ such as\n\n> bar = [(\"foo\",foo), (\"boo\",boo)]\n\nThis can be useful if you wish to extract all functions beginning with test (for a test-framework)\nor all functions beginning with wc (for a web service).\n\n@functionExtractorMap@ works like @functionsExtractor@ but applies a function over all function-pairs.\n\nThis functions is useful if the common return type of the functions is a type class.\n\nExample:\n\n> secondTypeclassTest =\n>   do let expected = [\"45\", \"88.8\", \"\\\"hej\\\"\"]\n>          actual = $(functionExtractorMap \"^tc\" [|\\n f -> show f|] )\n>      expected @=? actual\n>\n> tcInt :: Integer\n> tcInt = 45\n>\n> tcDouble :: Double\n> tcDouble = 88.8\n>\n> tcString :: String\n> tcString = \"hej\"",
    "category": "Template Haskell",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Language",
          "Haskell",
          "Extract"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <4.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "regex-posix",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "haskell-src-exts",
            "version-range": ">=1.8.0 && <1.16",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <4.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "regex-posix",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "haskell-src-exts",
        "version-range": ">=1.8.0 && <1.16",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
