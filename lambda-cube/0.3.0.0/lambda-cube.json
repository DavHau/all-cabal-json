{
  "description": {
    "spec-version": {
      "Left": [
        1,
        12
      ]
    },
    "package": {
      "name": "lambda-cube",
      "version": [
        0,
        3,
        0,
        0
      ]
    },
    "license": {
      "Right": "MIT"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2021 Junyoung Clare Jang",
    "maintainer": "jjc9310@gmail.com",
    "author": "Junyoung Clare Jang",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/Ailrun/lambda-cube#readme",
    "pkg-url": "",
    "bug-reports": "https://github.com/Ailrun/lambda-cube/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/Ailrun/lambda-cube",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Haskell implementation of (some of) lambda cube calculi",
    "description": "Haskell implementation of the following 4 lambda calculi:\n\n1. Simply typed lambda calculus\n2. System F\n3. System F omega underbar\n4. System F omega",
    "category": "Utilities",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CHANGELOG.md",
      "README.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "LambdaCube",
          "Common",
          "Parser"
        ],
        [
          "LambdaCube",
          "Common",
          "PrettyPrinter"
        ],
        [
          "LambdaCube",
          "Common",
          "TH"
        ],
        [
          "LambdaCube",
          "STLC"
        ],
        [
          "LambdaCube",
          "STLC",
          "Ast"
        ],
        [
          "LambdaCube",
          "STLC",
          "Elaborator"
        ],
        [
          "LambdaCube",
          "STLC",
          "Evaluator"
        ],
        [
          "LambdaCube",
          "STLC",
          "Lifter"
        ],
        [
          "LambdaCube",
          "STLC",
          "Normalizer"
        ],
        [
          "LambdaCube",
          "STLC",
          "Parser"
        ],
        [
          "LambdaCube",
          "STLC",
          "PrettyPrinter"
        ],
        [
          "LambdaCube",
          "STLC",
          "Substitution"
        ],
        [
          "LambdaCube",
          "STLC",
          "TH"
        ],
        [
          "LambdaCube",
          "STLC",
          "TypeChecker"
        ],
        [
          "LambdaCube",
          "SystemF"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Ast"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Elaborator"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Evaluator"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Lifter"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Normalizer"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Parser"
        ],
        [
          "LambdaCube",
          "SystemF",
          "PrettyPrinter"
        ],
        [
          "LambdaCube",
          "SystemF",
          "Substitution"
        ],
        [
          "LambdaCube",
          "SystemF",
          "TH"
        ],
        [
          "LambdaCube",
          "SystemF",
          "TypeChecker"
        ],
        [
          "LambdaCube",
          "SystemFw"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Ast"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Elaborator"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Evaluator"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Lifter"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Normalizer"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Parser"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "PrettyPrinter"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "Substitution"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "TH"
        ],
        [
          "LambdaCube",
          "SystemFw",
          "TypeChecker"
        ],
        [
          "LambdaCube",
          "SystemFw_"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Ast"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Elaborator"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Evaluator"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Lifter"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Normalizer"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Parser"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "PrettyPrinter"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "Substitution"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "TH"
        ],
        [
          "LambdaCube",
          "SystemFw_",
          "TypeChecker"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Paths_lambda_cube"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "BinaryLiterals"
          },
          {
            "enable-extension": "ConstrainedClassMethods"
          },
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFoldable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "DeriveGeneric"
          },
          {
            "enable-extension": "DeriveLift"
          },
          {
            "enable-extension": "DeriveTraversable"
          },
          {
            "enable-extension": "DerivingStrategies"
          },
          {
            "enable-extension": "EmptyCase"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "EmptyDataDeriving"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "ExplicitForAll"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ForeignFunctionInterface"
          },
          {
            "enable-extension": "GADTSyntax"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "HexFloatLiterals"
          },
          {
            "enable-extension": "ImportQualifiedPost"
          },
          {
            "enable-extension": "InstanceSigs"
          },
          {
            "enable-extension": "KindSignatures"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "NamedFieldPuns"
          },
          {
            "enable-extension": "NamedWildCards"
          },
          {
            "enable-extension": "NumericUnderscores"
          },
          {
            "enable-extension": "PolyKinds"
          },
          {
            "enable-extension": "PostfixOperators"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "RecordWildCards"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "StandaloneKindSignatures"
          },
          {
            "enable-extension": "StarIsType"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wcompat",
            "-Widentities",
            "-Wincomplete-record-updates",
            "-Wincomplete-uni-patterns",
            "-Wmissing-deriving-strategies",
            "-Wmissing-home-modules",
            "-Wmonomorphism-restriction",
            "-Wpartial-fields",
            "-Wredundant-constraints",
            "-Wunused-type-patterns"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.12 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "megaparsec",
            "version-range": ">=9.0.1 && <9.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "syb",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.2.4.0",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.12 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "megaparsec",
        "version-range": ">=9.0.1 && <9.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "syb",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.2.4.0",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "lambda-cube-test": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "Test.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [
            [
              "LambdaCube",
              "STLCTest"
            ],
            [
              "LambdaCube",
              "STLCTestExample"
            ],
            [
              "LambdaCube",
              "SystemFwTest"
            ],
            [
              "LambdaCube",
              "SystemFwTestExample"
            ],
            [
              "LambdaCube",
              "TestUtil"
            ],
            [
              "Paths_lambda_cube"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "BangPatterns"
            },
            {
              "enable-extension": "BinaryLiterals"
            },
            {
              "enable-extension": "ConstrainedClassMethods"
            },
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "DeriveDataTypeable"
            },
            {
              "enable-extension": "DeriveFoldable"
            },
            {
              "enable-extension": "DeriveFunctor"
            },
            {
              "enable-extension": "DeriveGeneric"
            },
            {
              "enable-extension": "DeriveLift"
            },
            {
              "enable-extension": "DeriveTraversable"
            },
            {
              "enable-extension": "DerivingStrategies"
            },
            {
              "enable-extension": "EmptyCase"
            },
            {
              "enable-extension": "EmptyDataDecls"
            },
            {
              "enable-extension": "EmptyDataDeriving"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "ExplicitForAll"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "ForeignFunctionInterface"
            },
            {
              "enable-extension": "GADTSyntax"
            },
            {
              "enable-extension": "GeneralizedNewtypeDeriving"
            },
            {
              "enable-extension": "HexFloatLiterals"
            },
            {
              "enable-extension": "ImportQualifiedPost"
            },
            {
              "enable-extension": "InstanceSigs"
            },
            {
              "enable-extension": "KindSignatures"
            },
            {
              "enable-extension": "LambdaCase"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "NamedFieldPuns"
            },
            {
              "enable-extension": "NamedWildCards"
            },
            {
              "enable-extension": "NumericUnderscores"
            },
            {
              "enable-extension": "PolyKinds"
            },
            {
              "enable-extension": "PostfixOperators"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "RecordWildCards"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "StandaloneDeriving"
            },
            {
              "enable-extension": "StandaloneKindSignatures"
            },
            {
              "enable-extension": "StarIsType"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-Wcompat",
              "-Widentities",
              "-Wincomplete-record-updates",
              "-Wincomplete-uni-patterns",
              "-Wmissing-deriving-strategies",
              "-Wmissing-home-modules",
              "-Wmonomorphism-restriction",
              "-Wpartial-fields",
              "-Wredundant-constraints",
              "-Wunused-type-patterns",
              "-threaded",
              "-rtsopts",
              "-with-rtsopts=-N"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "hspec",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "lambda-cube",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-hspec",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "text",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "hspec",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "lambda-cube",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-hspec",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "text",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
