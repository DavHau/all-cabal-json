{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "syntactic",
      "version": [
        1,
        15
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) 2011-2014, Emil Axelsson",
    "maintainer": "emax@chalmers.se",
    "author": "Emil Axelsson",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.6.2"
      },
      {
        "compiler": "GHC",
        "versionRange": "==7.8.2"
      }
    ],
    "homepage": "https://github.com/emilaxelsson/syntactic",
    "pkg-url": "",
    "bug-reports": "https://github.com/emilaxelsson/syntactic/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/emilaxelsson/syntactic",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Generic abstract syntax, and utilities for embedded languages",
    "description": "This library provides:\n\n* Generic representation and manipulation of abstract syntax\n\n* Composable AST representations (partly based on Data Types à\nla Carte [1])\n\n* A collection of common syntactic constructs, including\nvariable binding constructs\n\n* Utilities for analyzing and transforming generic abstract\nsyntax\n\n* Utilities for building extensible embedded languages based\non generic syntax\n\nFor more information about the core functionality, see\n\\\"A Generic Abstract Syntax Model for Embedded Languages\\\"\n(ICFP 2012):\n\n* Paper:\n<http://www.cse.chalmers.se/~emax/documents/axelsson2012generic.pdf>\n\n* Slides:\n<http://www.cse.chalmers.se/~emax/documents/axelsson2012generic-slides.pdf>\n\nFor a practical example of how to use the library, see the\nproof-of-concept implementation Feldspar EDSL in the @examples@\ndirectory. (The real Feldspar [2] is also implemented using\nSyntactic.)\n\nThe maturity of this library varies between different modules.\nThe core part (\"Language.Syntactic\") is rather stable, but many\nof the other modules are in a much more experimental state.\n\n\\[1\\] W. Swierstra. Data Types à la Carte.\n/Journal of Functional Programming/, 18(4):423-436, 2008,\n<http://dx.doi.org/10.1017/S0956796808006758>.\n\n\\[2\\] <http://hackage.haskell.org/package/feldspar-language>",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "CONTRIBUTORS",
      "examples/NanoFeldspar/*.hs",
      "tests/gold/*.txt"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "PolyProxy"
        ],
        [
          "Data",
          "DynamicAlt"
        ],
        [
          "Language",
          "Syntactic"
        ],
        [
          "Language",
          "Syntactic",
          "Syntax"
        ],
        [
          "Language",
          "Syntactic",
          "Traversal"
        ],
        [
          "Language",
          "Syntactic",
          "Constraint"
        ],
        [
          "Language",
          "Syntactic",
          "Sugar"
        ],
        [
          "Language",
          "Syntactic",
          "Interpretation",
          "Equality"
        ],
        [
          "Language",
          "Syntactic",
          "Interpretation",
          "Evaluation"
        ],
        [
          "Language",
          "Syntactic",
          "Interpretation",
          "Render"
        ],
        [
          "Language",
          "Syntactic",
          "Interpretation",
          "Semantics"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Binding"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Binding",
          "HigherOrder"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Binding",
          "Optimize"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Condition"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Construct"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Decoration"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Identity"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Literal"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Monad"
        ],
        [
          "Language",
          "Syntactic",
          "Constructs",
          "Tuple"
        ],
        [
          "Language",
          "Syntactic",
          "Frontend",
          "Monad"
        ],
        [
          "Language",
          "Syntactic",
          "Frontend",
          "Tuple"
        ],
        [
          "Language",
          "Syntactic",
          "Frontend",
          "TupleConstrained"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "SimpleCodeMotion"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "CodeMotion2"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "Utils"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "Graph"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "StableName"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "Reify"
        ],
        [
          "Language",
          "Syntactic",
          "Sharing",
          "ReifyHO"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "DeriveFunctor"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "Rank2Types"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "OverlappingInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "array",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4 && <4.9",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "constraints",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-hash",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-prim",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tree-view",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tuple",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "array",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4 && <4.9",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "constraints",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-hash",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-prim",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tree-view",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tuple",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "NanoFeldsparTree": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "NanoFeldsparTree.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "tests",
            "examples"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UndecidableInstances"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "syntactic",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "bytestring",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-golden",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "utf8-string",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "syntactic",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "bytestring",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-golden",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "utf8-string",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "NanoFeldsparEval2": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "NanoFeldsparEval2.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "tests",
            "examples"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UndecidableInstances"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "syntactic",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.4 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-th",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "syntactic",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.4 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-th",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "NanoFeldsparEval": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "NanoFeldsparEval.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "tests",
            "examples"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "GADTs"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "TypeFamilies"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "UndecidableInstances"
            },
            {
              "enable-extension": "ViewPatterns"
            }
          ],
          "otherExtensions": [
            {
              "enable-extension": "TemplateHaskell"
            }
          ],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "syntactic",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": ">=2 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "QuickCheck",
              "version-range": ">=2.4 && <3",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-th",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "tasty-quickcheck",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "syntactic",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": ">=2 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "QuickCheck",
          "version-range": ">=2.4 && <3",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-th",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "tasty-quickcheck",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
