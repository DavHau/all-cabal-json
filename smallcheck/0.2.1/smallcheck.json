{
  "description": {
    "spec-version": {
      "Right": "-any"
    },
    "package": {
      "name": "smallcheck",
      "version": [
        0,
        2,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Colin Runciman <Colin.Runciman@cs.york.ac.uk>",
    "author": "Colin Runciman",
    "stability": "Beta",
    "tested-with": [],
    "homepage": "http://www.cs.york.ac.uk/fp/smallcheck0.2.tar",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Another lightweight testing library in Haskell.",
    "description": "SmallCheck is similar to QuickCheck (Claessen and Hughes 2000-) but\ninstead of testing for a sample of randomly generated values, SmallCheck\ntests properties for all the finitely many values up to some depth,\nprogressively increasing the depth used.\n\nFolk-law: if there is any case in which a program\nfails, there is almost always a simple one.\n\nCorollary: if a program does not fail in any\nsimple case, it almost never fails.\n\nOther possible sales pitches:\n\n* write test generators for your own types more easily\n\n* be sure any counter-examples found are minimal\n\n* write properties using existentials as well as universals\n\n* establish complete coverage of a defined test-space\n\n* display counter-examples of functional type",
    "category": "Testing",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [
      "examples/numeric/README",
      "examples/logical/README",
      "examples/imperative/README",
      "examples/listy/README",
      "examples/regular/README",
      "README"
    ],
    "data-dir": ".",
    "extra-source-files": [
      "examples/numeric/NumProps.hs",
      "examples/logical/LogicProps.hs",
      "examples/imperative/Interpreter.hs",
      "examples/imperative/Syntax.hs",
      "examples/imperative/Machine.hs",
      "examples/imperative/Behaviour.hs",
      "examples/imperative/Properties.hs",
      "examples/imperative/Value.hs",
      "examples/imperative/StackMap.hs",
      "examples/imperative/Compiler.hs",
      "examples/listy/ListProps.hs",
      "examples/regular/Regular.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Test",
          "SmallCheck"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
