{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "Grow",
      "version": [
        1,
        1,
        0,
        3
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "marc.coiffier@gmail.com",
    "author": "Marc Coiffier",
    "stability": "",
    "tested-with": [],
    "homepage": "http://coiffier.net/projects/grow.html",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "A declarative make-like interpreter.",
    "description": "Grow is a well-defined replacement for Makefiles and the like to build complex\nhierarchies of files with minimal effort.\n\nLike many Makefile-like tools, Grow depends on the notion of\ntimestamps to determine whether a file should be recompiled or\nnot. Grow is much simpler than those, though, and I might argue way\neasier to use as well.\n\nOn startup, Grow will look for a file named \"Seed\" in the current\ndirectory, and evaluate the grow expressions contained within.\n\nFor example, here is a simple Seed file to compile a single C file\ninto an executable.\n\n> tee $$arg:in {\n>   all = ($main:seq \"All done !\"):in $execs\n>   execs = hook ld [main] [main.o] :in $objects\n>   objects = hook cc [main.o] [main.c]\n}\n\nNotice the `hook` function ? It is the Grow primitive that calls an\nexternal program to perform actual tasks.\n\nIn Grow, hooks are expected to only accept files as their arguments,\nso we have to write the wrapper scripts `cc` and `ld` that accept\narguments in the form \"<destination>... <source>...\". They are pretty\ntrivial to write since they only involve renaming variables and\nswapping arguments.\n\nHere are sample `cc` and `ld` scripts to show you there is nothing\nmagical about them :\n\n> #!/bin/bash\n> obj=\"$1\" ; shift ; src=\"$1\"\n> gcc -c \"$src\" -o \"$obj\"\n\n> #!/bin/bash\n> bin=\"$1\" ; shift ; obj=\"$1\"\n> gcc \"$obj\" -o \"$bin\"\n\nIn grow, instead of writing recipes in the configuration, we just declare\nhooks and then write the appropriate wrapper scripts to call compilers with\nthe correct flags and arguments.",
    "category": "Build",
    "custom-fields": [
      [
        "x-revision",
        "3"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Grow"
        ],
        [
          "Language",
          "Grow"
        ],
        [
          "Language",
          "Syntax",
          "Grow"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "RebindableSyntax"
          },
          {
            "disable-extension": "MonomorphismRestriction"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "LambdaCase"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "ImplicitParams"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "(==4.6.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "definitive-base",
            "version-range": "(==1.2.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "(==0.5.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": "(==1.3.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "array",
            "version-range": "(==0.5.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "(==0.10.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "vector",
            "version-range": "(==0.10.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "primitive",
            "version-range": "(==0.5.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "definitive-parser",
            "version-range": "(==1.2.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "definitive-filesystem",
            "version-range": "(==1.2.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "definitive-reactive",
            "version-range": "(==1.0.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "clock",
            "version-range": "(==0.4.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "directory",
            "version-range": "(==1.2.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "filepath",
            "version-range": "(==1.3.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "time",
            "version-range": "(==1.4.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "old-locale",
            "version-range": "(==1.0.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unix",
            "version-range": "(==2.7.*)",
            "library": [
              {}
            ]
          },
          {
            "package-name": "process",
            "version-range": "(==1.2.*)",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "(==4.6.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "definitive-base",
        "version-range": "(==1.2.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "(==0.5.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": "(==1.3.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "array",
        "version-range": "(==0.5.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "(==0.10.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "vector",
        "version-range": "(==0.10.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "primitive",
        "version-range": "(==0.5.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "definitive-parser",
        "version-range": "(==1.2.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "definitive-filesystem",
        "version-range": "(==1.2.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "definitive-reactive",
        "version-range": "(==1.0.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "clock",
        "version-range": "(==0.4.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "directory",
        "version-range": "(==1.2.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "filepath",
        "version-range": "(==1.3.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "time",
        "version-range": "(==1.4.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "old-locale",
        "version-range": "(==1.0.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unix",
        "version-range": "(==2.7.*)",
        "library": [
          {}
        ]
      },
      {
        "package-name": "process",
        "version-range": "(==1.2.*)",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
