{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "interruptible",
      "version": [
        0,
        1,
        1,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "marcos@marcosdumay.com",
    "author": "Marcos Dumay de Medeiros",
    "stability": "",
    "tested-with": [],
    "homepage": "https://sealgram.com/git/haskell/interruptible/",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://sealgram.com/git/haskell/interruptible/",
        "module": null,
        "branch": "master",
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "https://sealgram.com/git/haskell/interruptible/",
        "module": null,
        "branch": null,
        "tag": "0.1.1.1",
        "subdir": null
      }
    ],
    "synopsis": "Monad transformers that can be run and resumed later, conserving their context.",
    "description": "Given an inner monad @M@ and a transformer @T@, if T is an interruptible transformer,\nit becomes possible to intercalate functions over its context with functions over the\ninner monad. That is, code like this:\n\n> runT (f 1 >>= g)\n> where\n>     f :: Int -> T M a\n>     g :: a -> T M b\n\nCan be broken up like this:\n\n> do\n> let c0 = inTCtx 1\n> c1 <- resume f c0\n> _ <- resume g c2\n\nThat makes it possible to intercalate the execution of different contexts, and\ntreat contexts like data, for iterating or returning them.\n\nAs shown on the example, interruptible transformers are resumed with the @resume@ function.\nState may be managed by specialized functions usually named as @inTransfomerCtx@ and\n@peelTransformerCtx@ that enclose a value in an initial context and retrieve the\nvalue from a context.\n\nInterruptible transformers can be stacked. On this case, they must be resumed with a\ncomposition of @resume@ calls, and their contexts must be created and peeled on the inverse\norder that they appear on the stack. Like:\n\n> do\n> let c0 = inT2Ctx . inT1Ctx $ 1\n> c1 <- (resume . resume) f c0\n> _ <- (resume . resume) g c1\n> where\n>     f :: Monad m => Int -> T1 T2 M a\n>     g :: Monad m => a -> T1 T2 M b\n\nFor convenience, the @Interruptible@ module exports the @resume2@ to @resume5@\nfunctions as composotions of resume. They can be composed further as in\n@resume7 = resume3 . resume4@ if necessary.\n\nThis package also contains the appliable instantiations of Interruptible for the mtl transformers,\nthe @intercalateWith@ function, that intercalates calls of a function through a list\nof contexts and parameters, and the @SafeIO@ module that lifts IOException treatment from the\nbase monad into the current resumed context.",
    "category": "Control",
    "custom-fields": [
      [
        "x-revision",
        "2"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Monad",
          "Trans",
          "Interruptible"
        ],
        [
          "Control",
          "Monad",
          "Trans",
          "SafeIO"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Control",
            "Monad",
            "Trans",
            "Interruptible",
            "Class"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [
          {
            "enable-extension": "TypeFamilies"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.7 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-control",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lifted-base",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "either",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.7 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-control",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lifted-base",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "either",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "all": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            0,
            9
          ],
          "module-name": [
            "Test"
          ]
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-fno-warn-unused-do-bind",
              "-fwarn-incomplete-patterns",
              "-threaded"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.7 && <5.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "Cabal",
              "version-range": ">=1.9.2",
              "library": [
                {}
              ]
            },
            {
              "package-name": "either",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "transformers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "interruptible",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.7 && <5.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "Cabal",
          "version-range": ">=1.9.2",
          "library": [
            {}
          ]
        },
        {
          "package-name": "either",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "transformers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "interruptible",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
