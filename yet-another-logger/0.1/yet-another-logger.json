{
  "description": {
    "spec-version": {
      "Right": ">=1.18"
    },
    "package": {
      "name": "yet-another-logger",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) 2014-2015 PivotCloud, Inc.",
    "maintainer": "Lars Kuhtz <lkuhtz@pivotmail.com>",
    "author": "Lars Kuhtz <lkuhtz@pivotmail.com>",
    "stability": "",
    "tested-with": [],
    "homepage": "https://github.com/alephcloud/hs-yet-another-logger",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/alephcloud/hs-yet-another-logger",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/alephcloud/hs-yet-another-logger",
        "module": null,
        "branch": "master",
        "tag": "0.1",
        "subdir": null
      }
    ],
    "synopsis": "Yet Another Logger",
    "description": "A logging framework written with flexibility and performance\nin mind.\n\n= Quick Start\n\n> import System.Logger\n>\n> main ∷ IO ()\n> main = withConsoleLogger Info $ do\n>     logg Info \"moin\"\n>     withLabel (\"function\", \"f\") f\n>     logg Warn \"tschüss\"\n>   where\n>     f = withLevel Debug $ do\n>         logg Debug \"debug f\"\n\n= Description\n\n/This Version is yet a preview/\n\nThe logging system consists of four main parts:\n\n1. The logging front-end are those types and functions that are used\nto produce log messages in the code. This includes the 'LogLevel'\ntype, the 'LogPolicy' type, the 'LogLabel' and 'LogScope' types,\nthe 'LogFunction' type, and the 'MonadLog' type class.\n\n2. The abstract 'LoggerCtx' is the context through which the 'LogFunction'\ndelivers log messages to the logger back-end.\n\n3. The formatter is a function for serializing log messages.\n\n4. The logger back-end is a callback that is invoked by 'Logger' on\neach log messages. The logger back-end applies the formatting function\nand delivers the log messages to some sink.\n\nThe framework allows to combine this components in a modular way. The\nfront-end types, the 'Logger', and the back-end callback are represented\nby types or type classes. The formatter exists only as a concept\nin the implementation of back-ends. These types and concepts together\nform the abstract logger interface that is defined in the module\n\"System.Logger.Types\".\n\nThe package also provides a concrete Logger that implements these components\nin the module \"System.Logger.Logger\" and \"System.Logger.Backend.Handle\"",
    "category": "Logging, System",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "constraints"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": [
      "README.md",
      "CHANGELOG.md"
    ]
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "System",
          "Logger"
        ],
        [
          "System",
          "Logger",
          "Backend",
          "ColorOption"
        ],
        [
          "System",
          "Logger",
          "Backend",
          "Handle"
        ],
        [
          "System",
          "Logger",
          "Internal"
        ],
        [
          "System",
          "Logger",
          "Logger"
        ],
        [
          "System",
          "Logger",
          "Logger",
          "Internal"
        ],
        [
          "System",
          "Logger",
          "Types"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "async",
            "version-range": ">=2.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "aeson",
            "version-range": ">=0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ansi-terminal",
            "version-range": ">=0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base-unicode-symbols",
            "version-range": ">=0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": ">=0.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "case-insensitive",
            "version-range": ">=1.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "configuration-tools",
            "version-range": ">=0.2.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": ">=1.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "either",
            "version-range": ">=4.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "enclosed-exceptions",
            "version-range": ">=1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lens",
            "version-range": ">=4.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "lifted-base",
            "version-range": ">=0.2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-control",
            "version-range": ">=1.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "optparse-applicative",
            "version-range": ">=0.11",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm",
            "version-range": ">=2.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "stm-chans",
            "version-range": ">=3.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "text",
            "version-range": ">=1.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "trace",
            "version-range": ">=0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers-base",
            "version-range": ">=0.4",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "async",
        "version-range": ">=2.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "aeson",
        "version-range": ">=0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ansi-terminal",
        "version-range": ">=0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base-unicode-symbols",
        "version-range": ">=0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": ">=0.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "case-insensitive",
        "version-range": ">=1.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "configuration-tools",
        "version-range": ">=0.2.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": ">=1.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "either",
        "version-range": ">=4.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "enclosed-exceptions",
        "version-range": ">=1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lens",
        "version-range": ">=4.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "lifted-base",
        "version-range": ">=0.2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-control",
        "version-range": ">=1.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "optparse-applicative",
        "version-range": ">=0.11",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm",
        "version-range": ">=2.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "stm-chans",
        "version-range": ">=3.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "text",
        "version-range": ">=1.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "trace",
        "version-range": ">=0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers-base",
        "version-range": ">=0.4",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
