{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "yarr",
      "version": [
        1,
        3,
        3,
        2
      ]
    },
    "license": {
      "Right": "MIT"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Dominic Steinitz <dominic@steinitz.org>",
    "author": "Roman Leventov",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.8.3"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "https://github.com/leventov/yarr/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/leventov/yarr.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": "yarr"
      }
    ],
    "synopsis": "Yet another array library",
    "description": "Yarr is a new blazing fast dataflow framework (array library),\nmainly intented to process @Storable@s (including all \\\"primitive\\\" numeric types)\nand @fixed-vector@s of them, for example coordinates,\ncolor components, complex numbers.\n\nYarr framework is inspired by @repa@ library and inherits its features,\nincluding shape-polymorphism and auto-parallelism.\nAdditionaly, the framework is polymorphic over type and arity\nof fixed-size vectors and supports neat flow operations over them.\nFor example, you can convert colored image to greyscale like this:\n\n> let greyImage = zipElems (\\r g b -> 0.21 * r + 0.71 * g + 0.07 * b) image\n\nIn some cases the library is considerably faster than @repa@.\nSee benchmark results: <https://github.com/leventov/yarr/blob/master/tests/bench-results.md>\n\nShortcoming by design: lack of pure indexing interface.\n\n/Changes in 1.3 (ex. 0.9.3):/\n\n* IFusion -- mapping/zipping with index\n\n* Rename: Work -> Walk\n\n/Changes in version 0.9.2:/\n\n* Safe folds -- see \"Data.Yarr.Walk\"\n\n* Issue with slice-wise loading with unrolled filling function solved\n\nTo start with, read documentation in the root module: \"Data.Yarr\".\n\n[@Yarr!@]",
    "category": "Data Structures, Data Flow, Graphics",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "changelog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Data",
          "Yarr"
        ],
        [
          "Data",
          "Yarr",
          "Base"
        ],
        [
          "Data",
          "Yarr",
          "Fusion"
        ],
        [
          "Data",
          "Yarr",
          "Eval"
        ],
        [
          "Data",
          "Yarr",
          "Flow"
        ],
        [
          "Data",
          "Yarr",
          "Walk"
        ],
        [
          "Data",
          "Yarr",
          "Shape"
        ],
        [
          "Data",
          "Yarr",
          "Repr",
          "Foreign"
        ],
        [
          "Data",
          "Yarr",
          "Repr",
          "Boxed"
        ],
        [
          "Data",
          "Yarr",
          "Repr",
          "Delayed"
        ],
        [
          "Data",
          "Yarr",
          "Repr",
          "Separate"
        ],
        [
          "Data",
          "Yarr",
          "Convolution"
        ],
        [
          "Data",
          "Yarr",
          "IO",
          "List"
        ],
        [
          "Data",
          "Yarr",
          "Utils",
          "FixedVector"
        ],
        [
          "Data",
          "Yarr",
          "Utils",
          "Fork"
        ],
        [
          "Data",
          "Yarr",
          "Utils",
          "Parallel"
        ],
        [
          "Data",
          "Yarr",
          "Utils",
          "Split"
        ],
        [
          "Data",
          "Yarr",
          "Utils",
          "Primitive"
        ],
        [
          "Debug",
          "Yarr"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Data",
            "Yarr",
            "Utils",
            "FixedVector",
            "Arity"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "FixedVector",
            "VecTuple"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "FixedVector",
            "VecTupleInstances"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "FixedVector",
            "InlinableArity"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "FixedVector",
            "InlinableArityInstances"
          ],
          [
            "Data",
            "Yarr",
            "Convolution",
            "Repr"
          ],
          [
            "Data",
            "Yarr",
            "Convolution",
            "Eval"
          ],
          [
            "Data",
            "Yarr",
            "Convolution",
            "StaticStencils"
          ],
          [
            "Data",
            "Yarr",
            "WorkTypes"
          ],
          [
            "Data",
            "Yarr",
            "Walk",
            "Internal"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "Storable"
          ],
          [
            "Data",
            "Yarr",
            "Utils",
            "LowLevelFlow"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "UndecidableInstances"
          },
          {
            "enable-extension": "OverlappingInstances"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "MagicHash"
          },
          {
            "enable-extension": "BangPatterns"
          },
          {
            "enable-extension": "UnboxedTuples"
          },
          {
            "enable-extension": "TemplateHaskell"
          },
          {
            "enable-extension": "CPP"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.6 && <4.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ghc-prim",
            "version-range": "==0.3.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "deepseq",
            "version-range": "==1.3.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "fixed-vector",
            "version-range": "==0.1.2.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "primitive",
            "version-range": ">=0.2 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.8 && <2.10",
            "library": [
              {}
            ]
          },
          {
            "package-name": "missing-foreign",
            "version-range": "==0.1.1",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.6 && <4.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ghc-prim",
        "version-range": "==0.3.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "deepseq",
        "version-range": "==1.3.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "fixed-vector",
        "version-range": "==0.1.2.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "primitive",
        "version-range": ">=0.2 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.8 && <2.10",
        "library": [
          {}
        ]
      },
      {
        "package-name": "missing-foreign",
        "version-range": "==0.1.1",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
