{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "hierarchical-exceptions",
      "version": [
        1,
        0,
        0
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Â© 2014 Galois, Inc.",
    "maintainer": "bbarenblat@galois.com",
    "author": "Benjamin Barenblat",
    "stability": "provisional",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.6.3"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Template Haskell functions to easily create exception\nhierarchies",
    "description": "Haskell supports exception hierarchies, but they require quite a bit of\nboilerplate to declare.  This package leverages Template Haskell to automate\ndeclaration of large exception hierarchies.\n\nThis package requires GHC 7.6, as a bug in GHC 7.4 prevents expansion of\nTemplate Haskell splices using 'deriving Typeable'.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Exception",
          "Hierarchical"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "TemplateHaskell"
          }
        ],
        "otherExtensions": [
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "ExistentialQuantification"
          }
        ],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.6 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.2.0.0 && <3",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.6 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.2.0.0 && <3",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
