{
  "description": {
    "spec-version": {
      "Right": ">=1.22"
    },
    "package": {
      "name": "cuda",
      "version": [
        0,
        6,
        7,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) [2009..2015]. Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>",
    "maintainer": "Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>",
    "author": "Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": ">=7.6"
      }
    ],
    "homepage": "https://github.com/tmcdonell/cuda",
    "pkg-url": "",
    "bug-reports": "https://github.com/tmcdonell/cuda/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/tmcdonell/cuda",
        "module": null,
        "branch": null,
        "tag": "0.6.7.0",
        "subdir": null
      }
    ],
    "synopsis": "FFI binding to the CUDA interface for programming NVIDIA GPUs",
    "description": "The CUDA library provides a direct, general purpose C-like SPMD programming\nmodel for NVIDIA graphics cards (G8x series onwards). This is a collection\nof bindings to allow you to call and control, although not write, such\nfunctions from Haskell-land. You will need to install the CUDA driver and\ndeveloper toolkit.\n\n<http://developer.nvidia.com/cuda-downloads>\n\nThe configure script will look for your CUDA installation in the standard\nplaces, and if the nvcc compiler is found in your PATH, relative to that.\n\nThis release is for version 6.5 of the CUDA toolkit.\n\n[/NOTE:/]\n\nDue to a bug in nvcc, this package is not compatible with c2hs-0.18.* or\nc2hs-0.19.*. See tmcdonell/cuda#18.\n",
    "category": "Foreign",
    "custom-fields": [
      [
        "x-revision",
        "1"
      ]
    ],
    "build-type-raw": "Custom",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "cbits/stubs.h",
      "changelog.md"
    ],
    "extra-tmp-files": [
      "cuda.buildinfo.generated",
      "config.status",
      "config.log"
    ],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Foreign",
          "CUDA"
        ],
        [
          "Foreign",
          "CUDA",
          "Ptr"
        ],
        [
          "Foreign",
          "CUDA",
          "Types"
        ],
        [
          "Foreign",
          "CUDA",
          "Analysis"
        ],
        [
          "Foreign",
          "CUDA",
          "Analysis",
          "Device"
        ],
        [
          "Foreign",
          "CUDA",
          "Analysis",
          "Occupancy"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Device"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Error"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Event"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Exec"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Marshal"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Stream"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Texture"
        ],
        [
          "Foreign",
          "CUDA",
          "Runtime",
          "Utils"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Context"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Device"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Error"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Event"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Exec"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Marshal"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Module"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Stream"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Texture"
        ],
        [
          "Foreign",
          "CUDA",
          "Driver",
          "Utils"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [
          {
            "package-name": "c2hs",
            "include-renaming": ">=0.21"
          }
        ],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [
          "cbits/stubs.c"
        ],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [
          [
            "Foreign",
            "CUDA",
            "Internal",
            "C2HS"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell98",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [
          "."
        ],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-O2",
            "-funbox-strict-fields",
            "-fwarn-tabs"
          ],
          []
        ],
        "profOptions": [
          [
            "-fprof-auto",
            "-fprof-cafs"
          ],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4 && <5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "Cabal",
            "version-range": ">=1.22",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4 && <5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "Cabal",
        "version-range": ">=1.22",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "nvidia-device-query": {
      "condTreeData": {
        "name": "nvidia-device-query",
        "module-path": "DeviceQuery.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "examples/src/deviceQueryDrv"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell98",
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "cuda",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "pretty",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "cuda",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "pretty",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
