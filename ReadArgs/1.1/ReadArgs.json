{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "ReadArgs",
      "version": [
        1,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "noah.easterly@gmail.com",
    "author": "Noah Luck Easterly",
    "stability": "",
    "tested-with": [],
    "homepage": "http://github.com/rampion/ReadArgs",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/rampion/ReadArgs.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "Simple command line argument parsing",
    "description": "ReadArgs provides the @readArgs@ IO action, which lets you tell the compiler\nto parse the command line arguments to fit the type signature you give.\n\nFor example @(a :: Int, b :: String, c :: Float) <- readArgs@ would\nparse the first runtime argument as an @Int@, the second as a @String@ (no\nquotes required) and the third as a @Float@.\n\nIf the runtime arguments are incompatible with the type signature,\nthen a simple usage statement is given of the types needed.\n\nContinuing the previous example, if it was used in a\nprogram named @Example@, the error message for the above\naction would be:\n\n@\nusage: Example Int String Float\n@\n\nAny type that has both @Typeable@ and @Read@ instances\ncan be used.  Both @Char@ and @String@ are handled specially so that\ncommand line arguments for both do not require quotes (as their\n@Read@ instances do).\n\n@readArgs@ also supports optional arguments and variadic arguments.\nOptional arguments are specified using @Maybe@, and variadic arguments\nusing a list.  @(a :: Int, b :: Maybe String, c :: [Float]) <- readArgs@\nwould successfully parse any of the following sets of command line arguments:\n\n@\nExample 1\nExample 1 2 3 4\nExample 1 foo\nExample 1 foo 2 3 4\n@\n\nBut not\n\n@\nExample\nExample foo\nExample 1.0\n@\n\nUsage statements for optional and variadic arguments use command-line\nparlance:\n\n@\nusage: Example Int [String] [Float..]\n@\n\nNote that both optional and variadic parsers are greedy by default\n(so @Example 1 2 3 4@ was parsed as @(1, \"2\", [3.0,4.0])@.  They\nmay both be made non-greedy through use of the @NonGreedy@ constructor:\n\n@\n( a :: Int\n, NonGreedy b :: NonGreedy Maybe String\n, NonGreedy c :: NonGreedy [] Float\n) <- readArgs\n@",
    "category": "Command Line",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "ReadArgs"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.3.1.0 && <5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.3.1.0 && <5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "ReadArgsEx": {
      "condTreeData": {
        "name": "ReadArgsEx",
        "module-path": "ReadArgsEx.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": ">=4.3.1.0 && <5",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": ">=4.3.1.0 && <5",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  },
  "test-suites": {
    "ReadArgsSpec": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "ReadArgsSpec.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "hspec",
              "version-range": ">=0.9",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4.3.1.0 && <5",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "hspec",
          "version-range": ">=0.9",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4.3.1.0 && <5",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
