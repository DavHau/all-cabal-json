{
  "description": {
    "spec-version": {
      "Right": ">=1.6"
    },
    "package": {
      "name": "feldspar-language",
      "version": [
        0,
        5,
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Copyright (c) 2009-2011, ERICSSON AB",
    "maintainer": "Emil Axelsson <emax@chalmers.se>",
    "author": "Functional programming group at Chalmers University of Technology",
    "stability": "experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==7.0"
      }
    ],
    "homepage": "http://feldspar.inf.elte.hu/feldspar/",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "A functional embedded language for DSP and parallelism",
    "description": "Feldspar (Functional Embedded Language for DSP and PARallelism)\nis an embedded DSL for describing digital signal processing\nalgorithms. This package contains the language front-end and an\ninterpreter.",
    "category": "Language",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "Examples/Simple/*.hs",
      "Examples/Effects/*.hs",
      "Examples/Math/*.hs",
      "CEFP/cefpNotes.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Feldspar",
          "Prelude"
        ],
        [
          "Feldspar",
          "Lattice"
        ],
        [
          "Feldspar",
          "Range"
        ],
        [
          "Feldspar",
          "Core",
          "Types"
        ],
        [
          "Feldspar",
          "Core",
          "Interpretation"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Array"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Binding"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Bits"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Complex"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Condition"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "ConditionM"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Conversion"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Eq"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Error"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Floating"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Fractional"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Integral"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Literal"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Logic"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Loop"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Mutable"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "MutableArray"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "MutableReference"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "MutableToPure"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Par"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Num"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Ord"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "SizeProp"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "SourceInfo"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Trace"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Tuple"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "FFI"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs",
          "Save"
        ],
        [
          "Feldspar",
          "Core",
          "Constructs"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Array"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Binding"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Bits"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Complex"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Condition"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "ConditionM"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Conversion"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Eq"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Error"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Floating"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Fractional"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Integral"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Literal"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Logic"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Loop"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Mutable"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "MutableArray"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "MutableReference"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "MutableToPure"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Par"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Num"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Ord"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "SizeProp"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "SourceInfo"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Trace"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Tuple"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "FFI"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend",
          "Save"
        ],
        [
          "Feldspar",
          "Core",
          "Frontend"
        ],
        [
          "Feldspar",
          "Core",
          "Collection"
        ],
        [
          "Feldspar",
          "Core"
        ],
        [
          "Feldspar",
          "BitVector"
        ],
        [
          "Feldspar",
          "FixedPoint"
        ],
        [
          "Feldspar",
          "Matrix"
        ],
        [
          "Feldspar",
          "Option"
        ],
        [
          "Feldspar",
          "Repa"
        ],
        [
          "Feldspar",
          "Stream"
        ],
        [
          "Feldspar",
          "Vector",
          "Internal"
        ],
        [
          "Feldspar",
          "Vector"
        ],
        [
          "Feldspar",
          "Wrap"
        ],
        [
          "Feldspar",
          "Par"
        ],
        [
          "Feldspar"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "DeriveDataTypeable"
          },
          {
            "enable-extension": "EmptyDataDecls"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "GADTs"
          },
          {
            "enable-extension": "GeneralizedNewtypeDeriving"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "PatternGuards"
          },
          {
            "enable-extension": "Rank2Types"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "StandaloneDeriving"
          },
          {
            "enable-extension": "TypeFamilies"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "ViewPatterns"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-fcontext-stack=100"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "array",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": ">=4 && <4.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-hash",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-lens",
            "version-range": "==2.0.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-par",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": ">=2.4 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "patch-combinators",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "random",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "syntactic",
            "version-range": "==0.8.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tagged",
            "version-range": "==0.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tuple",
            "version-range": "==0.2.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "type-level",
            "version-range": ">=0.2.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monad-par",
            "version-range": ">=0.1 && <0.2",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickAnnotate",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "array",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": ">=4 && <4.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-hash",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-lens",
        "version-range": "==2.0.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-par",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": ">=2.4 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "patch-combinators",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "random",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "syntactic",
        "version-range": "==0.8.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tagged",
        "version-range": "==0.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tuple",
        "version-range": "==0.2.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "type-level",
        "version-range": ">=0.2.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monad-par",
        "version-range": ">=0.1 && <0.2",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickAnnotate",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
