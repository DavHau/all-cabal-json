{
  "description": {
    "spec-version": {
      "Right": ">=1.2"
    },
    "package": {
      "name": "testing-feat",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "Jonas Duregård",
    "maintainer": "jonas.duregard@gmail.com",
    "author": "Jonas Duregård",
    "stability": "",
    "tested-with": [],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Functional enumeration for systematic and random testing",
    "description": "Feat (Functional Enumeration of Abstract Types)\nprovides an enumeration as a function from natural\nnumbers to values (similar to @toEnum@). This can be used\nboth for SmallCheck-style systematic testing and QuickCheck\nstyle random testing, and hybrids of the two.\n\nThe enumerators are defined in a very boilerplate manner\nand there is a Template Haskell script for deriving the\nclass instance for most types.\n\"Test.Feat\" contain a subset of the other modules that\nshould be sufficient for most test usage. There\nis a large scale example in the tar ball (testing the\nTemplate Haskell pretty printer).",
    "category": "Testing",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/TestTH.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Test",
          "Feat"
        ],
        [
          "Test",
          "Feat",
          "Access"
        ],
        [
          "Test",
          "Feat",
          "Class"
        ],
        [
          "Test",
          "Feat",
          "Enumerate"
        ],
        [
          "Test",
          "Feat",
          "Modifiers"
        ],
        [
          "Control",
          "Monad",
          "TagShare"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "."
        ],
        "otherModules": [
          [
            "Test",
            "Feat",
            "Internals",
            "Derive"
          ],
          [
            "Test",
            "Feat",
            "Internals",
            "Tag"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.5 && <=5",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": ">=2.4 && <2.8",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=1 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "QuickCheck",
            "version-range": ">2 && <3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "<1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "data-memocombinators",
            "version-range": ">=0.4.2 && <0.5",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.5 && <=5",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": ">=2.4 && <2.8",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=1 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "QuickCheck",
        "version-range": ">2 && <3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "<1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "data-memocombinators",
        "version-range": ">=0.4.2 && <0.5",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
