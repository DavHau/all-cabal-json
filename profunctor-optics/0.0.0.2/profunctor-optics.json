{
  "description": {
    "spec-version": {
      "Right": ">=1.10"
    },
    "package": {
      "name": "profunctor-optics",
      "version": [
        0,
        0,
        0,
        2
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2019 Chris McKinlay",
    "maintainer": "Chris McKinlay",
    "author": "Chris McKinlay",
    "stability": "Experimental",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==8.6.3"
      }
    ],
    "homepage": "https://github.com/cmk/profunctor-extras",
    "pkg-url": "",
    "bug-reports": "https://github.com/cmk/profunctor-extras/issues",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/cmk/profunctor-extras",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "An optics library compatible with the typeclasses in 'profunctors'.",
    "description": "This package provides utilities for creating and manipulating profunctor-based optics. Some highlights:\n\nFull complement of isos, prisms, lenses, grates, traversals (affine, regular, and non-empty), folds (affine, regular, and non-empty), views, and setters. Many of these have categorical duals.\n\nComposable indexed and co-indexed variants of all of the above.\n\nCompact & straight-forward implementation. No inscrutable internal modules, lawless or otherwise ancillary typeclasses, or heavy type-level machinery.\n\nFully interoperable. All that is required to create optics (standard, idexable, or co-indexable) is the `profunctors` package, which is heavily used and seems likely to end up in `base` at some point. Optics compose with (.) from `Prelude` as is typical. If you want to provide profunctor optics for your own types in your own libraries, you can do so without incurring a dependency on this package. Conversions to & from the Van Laarhoven representations are provided for each optic type.\n\nWell-documented properties and exportable predicates for testing your own optics.\n\nSee the <https://github.com/cmk/profunctor-extras/blob/master/profunctor-optics/README.md Readme> file for more information.",
    "category": "Data, Lenses, Profunctors",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "ChangeLog.md"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Control",
          "Exception",
          "Optic"
        ],
        [
          "Data",
          "Tuple",
          "Optic"
        ],
        [
          "Data",
          "Connection",
          "Optic"
        ],
        [
          "Data",
          "Connection",
          "Optic",
          "Int"
        ],
        [
          "Data",
          "Connection",
          "Optic",
          "Word"
        ],
        [
          "Data",
          "Connection",
          "Optic",
          "Float"
        ],
        [
          "Data",
          "Profunctor",
          "Optic"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Type"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Iso"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "View"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Setter"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Lens"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Prism"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Grate"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Fold"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Fold0"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Fold1"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Traversal"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Traversal0"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Traversal1"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Operator"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Property"
        ],
        [
          "Data",
          "Profunctor",
          "Optic",
          "Index"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Data",
            "Profunctor",
            "Optic",
            "Import"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [
          {
            "enable-extension": "ConstraintKinds"
          },
          {
            "enable-extension": "RankNTypes"
          },
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "OverloadedStrings"
          },
          {
            "enable-extension": "FlexibleContexts"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "disable-extension": "ImplicitPrelude"
          },
          {
            "enable-extension": "QuantifiedConstraints"
          },
          {
            "enable-extension": "ScopedTypeVariables"
          },
          {
            "enable-extension": "TupleSections"
          },
          {
            "enable-extension": "TypeOperators"
          },
          {
            "enable-extension": "TypeApplications"
          },
          {
            "enable-extension": "TypeFamilies"
          }
        ],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall",
            "-Wincomplete-uni-patterns",
            "-Wincomplete-record-updates"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": ">=4.9 && <5.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "comonad",
            "version-range": ">=4 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "connections",
            "version-range": ">=0.0.2 && <0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": ">=0.4.0 && <0.7",
            "library": [
              {}
            ]
          },
          {
            "package-name": "distributive",
            "version-range": ">=0.3 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "ilist",
            "version-range": ">=0.3.1.0 && <0.4",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": ">=2.0.1 && <2.3",
            "library": [
              {}
            ]
          },
          {
            "package-name": "newtype-generics",
            "version-range": ">=0.5.3 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "profunctor-arrows",
            "version-range": ">=0.0.0.2 && <0.0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "profunctors",
            "version-range": ">=5.2.1 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "rings",
            "version-range": ">=0.0.2 && <0.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "semigroupoids",
            "version-range": ">=5 && <6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "tagged",
            "version-range": ">=0.4.4 && <1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "transformers",
            "version-range": ">=0.2 && <0.6",
            "library": [
              {}
            ]
          },
          {
            "package-name": "unliftio-core",
            "version-range": ">=0.1.2 && <0.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": ">=4.9 && <5.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "comonad",
        "version-range": ">=4 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "connections",
        "version-range": ">=0.0.2 && <0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": ">=0.4.0 && <0.7",
        "library": [
          {}
        ]
      },
      {
        "package-name": "distributive",
        "version-range": ">=0.3 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "ilist",
        "version-range": ">=0.3.1.0 && <0.4",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": ">=2.0.1 && <2.3",
        "library": [
          {}
        ]
      },
      {
        "package-name": "newtype-generics",
        "version-range": ">=0.5.3 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "profunctor-arrows",
        "version-range": ">=0.0.0.2 && <0.0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "profunctors",
        "version-range": ">=5.2.1 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "rings",
        "version-range": ">=0.0.2 && <0.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "semigroupoids",
        "version-range": ">=5 && <6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "tagged",
        "version-range": ">=0.4.4 && <1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "transformers",
        "version-range": ">=0.2 && <0.6",
        "library": [
          {}
        ]
      },
      {
        "package-name": "unliftio-core",
        "version-range": ">=0.1.2 && <0.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "test-suites": {
    "doctests": {
      "condTreeData": {
        "name": "",
        "interface": {
          "version": [
            1,
            0
          ],
          "filepath": "doctests.hs"
        },
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            "test"
          ],
          "otherModules": [],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": "Haskell2010",
          "otherLanguages": [],
          "defaultExtensions": [
            {
              "enable-extension": "ConstraintKinds"
            },
            {
              "enable-extension": "RankNTypes"
            },
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "OverloadedStrings"
            },
            {
              "enable-extension": "FlexibleContexts"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "QuantifiedConstraints"
            },
            {
              "enable-extension": "ScopedTypeVariables"
            },
            {
              "enable-extension": "TupleSections"
            },
            {
              "enable-extension": "TypeOperators"
            },
            {
              "enable-extension": "TypeApplications"
            },
            {
              "enable-extension": "TypeFamilies"
            }
          ],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [
              "-Wall",
              "-threaded"
            ],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [
            [
              "x-doctest-options",
              "--fast"
            ]
          ],
          "targetBuildDepends": [
            {
              "package-name": "base",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "doctest",
              "version-range": ">=0.8",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "profunctor-optics",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "base",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "doctest",
          "version-range": ">=0.8",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "profunctor-optics",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
