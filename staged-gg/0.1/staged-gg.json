{
  "description": {
    "spec-version": {
      "Left": [
        2,
        2
      ]
    },
    "package": {
      "name": "staged-gg",
      "version": [
        0,
        1
      ]
    },
    "license": {
      "Left": {
        "license-expression": {
          "expression": {
            "id": "BSD_3_Clause"
          },
          "exception-id": null
        }
      }
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Oleg Grenrus <oleg.grenrus@iki.fi>",
    "author": "Oleg Grenrus, Andres LÃ¶h",
    "stability": "",
    "tested-with": [
      {
        "compiler": "GHC",
        "versionRange": "==9.0.1"
      }
    ],
    "homepage": "",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "https://github.com/phadej/staged-gg.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      }
    ],
    "synopsis": "GHC.Generics style staged generics",
    "description": "GHC.Generics style staged generics.\n\nSee https://www.andres-loeh.de/StagedSOP/ paper for description of\n@staged-sop@, which is staged version of @generics-sop@.\nThe non @generics-sop@ specific parts\nlike sections on Typed Template Haskell, and Type Template Haskell and Constraints,\nare applicable to @staged-gg@ as well.\n\nThis package is an /EXPERIMENTAL/ proof-of-concept.\nIt works if you do not do anything fancy.\nBecause of current GHC Typed Template Haskell limitations,\nquite simple things are \"fancy\".\nSee https://github.com/phadej/staged-gg/tree/master/staged-gg-examples\nfor examples what you can do regardless.",
    "category": "Staged, Generics",
    "custom-fields": [],
    "build-type-raw": null,
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Staged",
          "GHC",
          "Generics"
        ],
        [
          "Staged",
          "GHC",
          "Generics",
          "Instances"
        ],
        [
          "Staged",
          "GHC",
          "Generics",
          "TH"
        ],
        [
          "Staged",
          "GHC",
          "Generics",
          "Types"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Generics",
            "Deriving",
            "TH",
            "Internal"
          ],
          [
            "Generics",
            "Deriving",
            "TH",
            "Post4_9"
          ],
          [
            "Staged",
            "GHC",
            "Generics",
            "Internal"
          ],
          [
            "Staged",
            "GHC",
            "Generics",
            "TH",
            "Names"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": "Haskell2010",
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "^>=4.15",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "^>=0.6.4.1",
            "library": [
              {}
            ]
          },
          {
            "package-name": "template-haskell",
            "version-range": "^>=2.17.0.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "generic-deriving",
            "version-range": "^>=1.14",
            "library": [
              {}
            ]
          },
          {
            "package-name": "th-abstraction",
            "version-range": "^>=0.4.2.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "th-lift",
            "version-range": "^>=0.8.2",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "^>=4.15",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "^>=0.6.4.1",
        "library": [
          {}
        ]
      },
      {
        "package-name": "template-haskell",
        "version-range": "^>=2.17.0.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "generic-deriving",
        "version-range": "^>=1.14",
        "library": [
          {}
        ]
      },
      {
        "package-name": "th-abstraction",
        "version-range": "^>=0.4.2.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "th-lift",
        "version-range": "^>=0.8.2",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
