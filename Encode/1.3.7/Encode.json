{
  "description": {
    "spec-version": {
      "Right": "-any"
    },
    "package": {
      "name": "Encode",
      "version": [
        1,
        3,
        7
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "2014",
    "maintainer": "otakar-smrz users.sf.net",
    "author": "Otakar Smrz",
    "stability": "",
    "tested-with": [],
    "homepage": "http://otakar-smrz.users.sf.net/",
    "pkg-url": "http://sourceforge.net/projects/encode-arabic/",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "Encoding character data",
    "description": "The \"Encode\" library provides a unified interface for converting strings\nfrom different encodings into a common representation, and vice versa.\nThis representation is isomorphic to the Unicode character set, and the\nencodings can be both standard and user-defined. For this purpose, the\n\"Encode\" module defines the 'Encode.UPoint' data type and the\n'Encode.Encoding' type class with the 'encode' and 'decode' methods.\n\nThe \"Encode\" library is being proposed as a Haskell analogy to the\n/Encode/ extension in Perl, <http://search.cpan.org/dist/Encode/>.\n\nThe \"Main.Encode\" and \"Main.Decode\" programs mimick the function calls\nto 'encode' and 'decode', respectively, with the following usage:\n\n>    decode ArabTeX < decode.d | encode Buckwalter > encode.d\n>\n>    decode MacArabic < data.MacArabic > data.UTF8\n>\n>    encode WinArabic < data.UTF8 > data.WinArabic\n\nThe installation instructions are given in \"INSTALL\".\nFor the list of supported encoding schemes, please refer\nto \"Encode\" and the source files of the programs. With the\nexecutables, the naming of encodings is /case-insensitive/\nand some further options are allowed:\n\n>  encode|decode [--OPTIONS] [ENCODING]\n>    -h       --help         show usage information\n>    -l       --lines        use line-oriented mode\n>    -p text  --prefix=text  prefix input with text\n>    -s text  --suffix=text  suffix input with text\n>    -v       --version      show program's version\n\nThe \"PureFP\" library is an edited excerpt from the /Functional Parsing/\nlibrary developed by Peter Ljungl&#246;f in his licenciate thesis\n/Pure Functional Parsing &#150; an advanced tutorial/, G&#246;teborg\nUniversity and Chalmers University of Technology, April 2002,\n<http://code.google.com/p/haskell-functional-parsing/>.\n\nThe \"Parsek\" library is included for experimental purposes and subsumes\n\"PureFP.Parsers.Stream\". /Parsek/ was developed by Koen Claessen in his\nfunctional pearl article /Parallel Parsing Processes/, Journal of\nFunctional Programming, 14(6), 741&#150;757, Cambridge University Press,\n2004, <http://www.cse.chalmers.se/edu/course/afp/Papers/parser-claessen.pdf>,\n<http://hackage.haskell.org/package/parsek/>.\n\n\"Encode\" \"PureFP\" \"Parsek\"",
    "category": "Text, Codec",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "INSTALL",
      "Setup.PL"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Encode"
        ],
        [
          "Encode",
          "Arabic"
        ],
        [
          "Encode",
          "Arabic",
          "ArabTeX"
        ],
        [
          "Encode",
          "Arabic",
          "ArabTeX",
          "ZDMG"
        ],
        [
          "Encode",
          "Arabic",
          "Buckwalter"
        ],
        [
          "Encode",
          "Arabic",
          "Parkinson"
        ],
        [
          "Encode",
          "Arabic",
          "Habash"
        ],
        [
          "Encode",
          "Arabic",
          "Byte"
        ],
        [
          "Encode",
          "Extend"
        ],
        [
          "Encode",
          "ExPlus"
        ],
        [
          "Encode",
          "Mapper"
        ],
        [
          "Encode",
          "Unicode"
        ],
        [
          "Encode",
          "Unicode",
          "UTF8"
        ],
        [
          "Encode",
          "Version"
        ],
        [
          "PureFP"
        ],
        [
          "PureFP",
          "OrdMap"
        ],
        [
          "PureFP",
          "OrdSet"
        ],
        [
          "PureFP",
          "Parsers"
        ],
        [
          "PureFP",
          "Parsers",
          "AmbExTrie"
        ],
        [
          "PureFP",
          "Parsers",
          "AmbTrie"
        ],
        [
          "PureFP",
          "Parsers",
          "ExTrie"
        ],
        [
          "PureFP",
          "Parsers",
          "PairTrie"
        ],
        [
          "PureFP",
          "Parsers",
          "Parser"
        ],
        [
          "PureFP",
          "Parsers",
          "Standard"
        ],
        [
          "PureFP",
          "Parsers",
          "Stream"
        ],
        [
          "PureFP",
          "Parsers",
          "Trie"
        ],
        [
          "Parsek"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [],
        "otherModules": [],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [
          {
            "enable-extension": "MultiParamTypeClasses"
          },
          {
            "enable-extension": "FunctionalDependencies"
          },
          {
            "enable-extension": "ExistentialQuantification"
          },
          {
            "enable-extension": "PolymorphicComponents"
          },
          {
            "enable-extension": "TypeSynonymInstances"
          },
          {
            "enable-extension": "FlexibleInstances"
          },
          {
            "enable-extension": "FlexibleContexts"
          }
        ],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "Cabal",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base",
            "version-range": "<5.0",
            "library": [
              {}
            ]
          },
          {
            "package-name": "mtl",
            "version-range": "-any",
            "library": [
              {}
            ]
          },
          {
            "package-name": "containers",
            "version-range": "-any",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "Cabal",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base",
        "version-range": "<5.0",
        "library": [
          {}
        ]
      },
      {
        "package-name": "mtl",
        "version-range": "-any",
        "library": [
          {}
        ]
      },
      {
        "package-name": "containers",
        "version-range": "-any",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  },
  "executables": {
    "decode": {
      "condTreeData": {
        "name": "decode",
        "module-path": "Main/Decode.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [
            [
              "Encode"
            ],
            [
              "Encode",
              "Arabic"
            ],
            [
              "Encode",
              "Arabic",
              "ArabTeX"
            ],
            [
              "Encode",
              "Arabic",
              "ArabTeX",
              "ZDMG"
            ],
            [
              "Encode",
              "Arabic",
              "Buckwalter"
            ],
            [
              "Encode",
              "Arabic",
              "Parkinson"
            ],
            [
              "Encode",
              "Arabic",
              "Habash"
            ],
            [
              "Encode",
              "Arabic",
              "Byte"
            ],
            [
              "Encode",
              "Extend"
            ],
            [
              "Encode",
              "ExPlus"
            ],
            [
              "Encode",
              "Mapper"
            ],
            [
              "Encode",
              "Unicode"
            ],
            [
              "Encode",
              "Unicode",
              "UTF8"
            ],
            [
              "Encode",
              "Version"
            ],
            [
              "PureFP"
            ],
            [
              "PureFP",
              "OrdMap"
            ],
            [
              "PureFP",
              "OrdSet"
            ],
            [
              "PureFP",
              "Parsers"
            ],
            [
              "PureFP",
              "Parsers",
              "AmbExTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "AmbTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "ExTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "PairTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "Parser"
            ],
            [
              "PureFP",
              "Parsers",
              "Standard"
            ],
            [
              "PureFP",
              "Parsers",
              "Stream"
            ],
            [
              "PureFP",
              "Parsers",
              "Trie"
            ],
            [
              "Parsek"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "PolymorphicComponents"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FlexibleContexts"
            }
          ],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Cabal",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "<5.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Cabal",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "<5.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    },
    "encode": {
      "condTreeData": {
        "name": "encode",
        "module-path": "Main/Encode.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [],
          "otherModules": [
            [
              "Encode"
            ],
            [
              "Encode",
              "Arabic"
            ],
            [
              "Encode",
              "Arabic",
              "ArabTeX"
            ],
            [
              "Encode",
              "Arabic",
              "ArabTeX",
              "ZDMG"
            ],
            [
              "Encode",
              "Arabic",
              "Buckwalter"
            ],
            [
              "Encode",
              "Arabic",
              "Parkinson"
            ],
            [
              "Encode",
              "Arabic",
              "Habash"
            ],
            [
              "Encode",
              "Arabic",
              "Byte"
            ],
            [
              "Encode",
              "Extend"
            ],
            [
              "Encode",
              "ExPlus"
            ],
            [
              "Encode",
              "Mapper"
            ],
            [
              "Encode",
              "Unicode"
            ],
            [
              "Encode",
              "Unicode",
              "UTF8"
            ],
            [
              "Encode",
              "Version"
            ],
            [
              "PureFP"
            ],
            [
              "PureFP",
              "OrdMap"
            ],
            [
              "PureFP",
              "OrdSet"
            ],
            [
              "PureFP",
              "Parsers"
            ],
            [
              "PureFP",
              "Parsers",
              "AmbExTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "AmbTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "ExTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "PairTrie"
            ],
            [
              "PureFP",
              "Parsers",
              "Parser"
            ],
            [
              "PureFP",
              "Parsers",
              "Standard"
            ],
            [
              "PureFP",
              "Parsers",
              "Stream"
            ],
            [
              "PureFP",
              "Parsers",
              "Trie"
            ],
            [
              "Parsek"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [
            {
              "enable-extension": "MultiParamTypeClasses"
            },
            {
              "enable-extension": "FunctionalDependencies"
            },
            {
              "enable-extension": "ExistentialQuantification"
            },
            {
              "enable-extension": "PolymorphicComponents"
            },
            {
              "enable-extension": "TypeSynonymInstances"
            },
            {
              "enable-extension": "FlexibleInstances"
            },
            {
              "enable-extension": "FlexibleContexts"
            }
          ],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "Cabal",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": "<5.0",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "containers",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "Cabal",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": "<5.0",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "containers",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
