{
  "description": {
    "spec-version": {
      "Right": ">=1.8"
    },
    "package": {
      "name": "sasl",
      "version": [
        0,
        0,
        0,
        0
      ]
    },
    "license": {
      "Right": "BSD3"
    },
    "license-files": [
      "LICENSE"
    ],
    "copyright": "",
    "maintainer": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "author": "Yoshikuni Jujo <PAF01143@nifty.ne.jp>",
    "stability": "Experimental",
    "tested-with": [],
    "homepage": "https://github.com/YoshikuniJujo/sasl/wiki",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/sasl.git",
        "module": null,
        "branch": null,
        "tag": null,
        "subdir": null
      },
      {
        "kind": {},
        "type": "Git",
        "location": "git://github.com/YoshikuniJujo/sasl.git",
        "module": null,
        "branch": null,
        "tag": "sasl-0.0.0.0",
        "subdir": null
      }
    ],
    "synopsis": "SASL implementation using simple-pipe",
    "description": "Example programs\n\nSCRAM-SHA-1 Client sample\n\nscramSha1sv.txt\n\n> r=00DEADBEEF007658cddf-0e44-4de2-87df-4132bce97f4,s=cGVwcGVy,i=4492\n> v=q0+IZgUtQTHYItaurlNyET1imLI=\n> success\n\nexamples/clientS.hs\n\nextensions\n\n* OverloadedStrings\n\n* PackageImports\n\n> import \"monads-tf\" Control.Monad.State\n> import Data.Pipe\n> import Data.Pipe.ByteString\n> import System.IO\n> import Network.Sasl\n> import Network.Sasl.ScramSha1.Client\n>\n> import qualified Data.ByteString as BS\n>\n> data St = St [(BS.ByteString, BS.ByteString)] deriving Show\n>\n> instance SaslState St where\n> \tgetSaslState (St s) = s\n> \tputSaslState s _ = St s\n>\n> serverFile :: String\n> serverFile = \"examples/scramSha1sv.txt\"\n>\n> main :: IO ()\n> main = do\n> \tlet\t(_, (_, p)) = sasl\n> \tr <- runPipe (fromFileLn serverFile =$= input =$= p =$= toHandleLn stdout)\n> \t\t`runStateT` St [\n> \t\t\t(\"username\", \"yoshikuni\"),\n> \t\t\t(\"password\", \"password\"),\n> \t\t\t(\"cnonce\", \"00DEADBEEF00\") ]\n> \tprint r\n>\n> input :: Pipe BS.ByteString (Either Success BS.ByteString) (StateT St IO) ()\n> input = await >>= \\mbs -> case mbs of\n> \tJust \"success\" -> yield . Left $ Success Nothing\n> \tJust ch -> yield (Right ch) >> input\n> \t_ -> return ()\n\nSCRAM-SHA-1 Server sample\n\nscramSha1cl.txt\n\n> n,,n=yoshikuni,r=00DEADBEEF00\n> c=biws,r=00DEADBEEF007658cddf-0e44-4de2-87df-4132bce97f4,p=zup7ghwpAW43cP4Xu3YZTNnHo0g=\n>\n\nexamples/serverS.hs\n\nextensions\n\n* OverloadedStrings\n\n* PackageImports\n\n> import \"monads-tf\" Control.Monad.State\n> import Data.Pipe\n> import Data.Pipe.ByteString\n> import System.IO\n> import Network.Sasl\n> import Network.Sasl.ScramSha1.Server\n>\n> import qualified Data.ByteString as BS\n>\n> data St = St [(BS.ByteString, BS.ByteString)] deriving Show\n>\n> instance SaslState St where\n> \tgetSaslState (St s) = s\n> \tputSaslState s _ = St s\n>\n> clientFile :: String\n> clientFile = \"examples/scramSha1cl.txt\"\n>\n> main :: IO ()\n> main = do\n> \tlet\tslt = \"pepper\"\n> \t\ti = 4492\n> \t\t(stk, svk) = salt \"password\" slt i\n> \t\t(_, (_, p)) = sasl $ \\\"yoshikuni\" -> return (slt, stk, svk, i)\n> \tr <- runPipe (fromFileLn clientFile =$= p =$= output =$= toHandleLn stdout)\n> \t\t`runStateT` St [(\"snonce\", \"7658cddf-0e44-4de2-87df-4132bce97f4\")]\n> \tprint r\n>\n> output :: Pipe (Either Success BS.ByteString) BS.ByteString (StateT St IO) ()\n> output = await >>= \\mch -> case mch of\n> \tJust (Left (Success Nothing)) -> yield \"success\"\n> \tJust (Left (Success (Just bs))) -> yield bs\n> \tJust (Right bs) -> yield bs >> output\n> \t_ -> return ()\n\nSee examples directory for more examples.",
    "category": "Network",
    "custom-fields": [],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "examples/clientD.hs",
      "examples/serverD.hs",
      "examples/clientS.hs",
      "examples/serverS.hs",
      "examples/clientP.hs",
      "examples/serverP.hs",
      "examples/clientE.hs",
      "examples/serverE.hs"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "library": {
    "condTreeData": {
      "name": {},
      "exposed-modules": [
        [
          "Network",
          "Sasl"
        ],
        [
          "Network",
          "Sasl",
          "Plain",
          "Client"
        ],
        [
          "Network",
          "Sasl",
          "Plain",
          "Server"
        ],
        [
          "Network",
          "Sasl",
          "External",
          "Client"
        ],
        [
          "Network",
          "Sasl",
          "External",
          "Server"
        ],
        [
          "Network",
          "Sasl",
          "DigestMd5",
          "Client"
        ],
        [
          "Network",
          "Sasl",
          "DigestMd5",
          "Server"
        ],
        [
          "Network",
          "Sasl",
          "ScramSha1",
          "Client"
        ],
        [
          "Network",
          "Sasl",
          "ScramSha1",
          "Server"
        ]
      ],
      "re-exported-modules": [],
      "signatures": [],
      "exposed": true,
      "visibility": "LibraryVisibilityPublic",
      "build-info": {
        "buildable": true,
        "buildTools": [],
        "buildToolDepends": [],
        "cppOptions": [],
        "asmOptions": [],
        "cmmOptions": [],
        "ccOptions": [],
        "cxxOptions": [],
        "ldOptions": [],
        "pkgconfigDepends": [],
        "frameworks": [],
        "extraFrameworkDirs": [],
        "asmSources": [],
        "cmmSources": [],
        "cSources": [],
        "cxxSources": [],
        "jsSources": [],
        "hsSourceDirs": [
          "src"
        ],
        "otherModules": [
          [
            "Network",
            "Sasl",
            "DigestMd5",
            "DigestMd5"
          ],
          [
            "Network",
            "Sasl",
            "DigestMd5",
            "Papillon"
          ],
          [
            "Network",
            "Sasl",
            "ScramSha1",
            "Fields"
          ],
          [
            "Network",
            "Sasl",
            "ScramSha1",
            "Hmac"
          ],
          [
            "Network",
            "Sasl",
            "ScramSha1",
            "ScramSha1"
          ],
          [
            "Network",
            "Sasl",
            "ScramSha1",
            "Functions"
          ]
        ],
        "virtualModules": [],
        "autogenModules": [],
        "defaultLanguage": null,
        "otherLanguages": [],
        "defaultExtensions": [],
        "otherExtensions": [],
        "oldExtensions": [],
        "extraLibs": [],
        "extraGHCiLibs": [],
        "extraBundledLibs": [],
        "extraLibFlavours": [],
        "extraDynLibFlavours": [],
        "extraLibDirs": [],
        "includeDirs": [],
        "includes": [],
        "autogenIncludes": [],
        "installIncludes": [],
        "options": [
          [
            "-Wall"
          ],
          []
        ],
        "profOptions": [
          [],
          []
        ],
        "sharedOptions": [
          [],
          []
        ],
        "staticOptions": [
          [],
          []
        ],
        "customFieldsBI": [],
        "targetBuildDepends": [
          {
            "package-name": "base",
            "version-range": "==4.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "bytestring",
            "version-range": "==0.10.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "simple-pipe",
            "version-range": "==0.0.0.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "papillon",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "cryptohash",
            "version-range": "==0.11.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "base64-bytestring",
            "version-range": "==1.0.*",
            "library": [
              {}
            ]
          },
          {
            "package-name": "monads-tf",
            "version-range": "==0.1.*",
            "library": [
              {}
            ]
          }
        ],
        "mixins": []
      }
    },
    "condTreeConstraints": [
      {
        "package-name": "base",
        "version-range": "==4.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "bytestring",
        "version-range": "==0.10.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "simple-pipe",
        "version-range": "==0.0.0.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "papillon",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "cryptohash",
        "version-range": "==0.11.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "base64-bytestring",
        "version-range": "==1.0.*",
        "library": [
          {}
        ]
      },
      {
        "package-name": "monads-tf",
        "version-range": "==0.1.*",
        "library": [
          {}
        ]
      }
    ],
    "condTreeComponents": []
  }
}
