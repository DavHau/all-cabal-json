{
  "description": {
    "spec-version": {
      "Right": ">=1.2"
    },
    "package": {
      "name": "BNFC",
      "version": [
        2,
        4,
        1,
        1
      ]
    },
    "license": {
      "Right": "OtherLicense"
    },
    "license-files": [
      "COPYING"
    ],
    "copyright": "(c) Krasimir Angelov, Bjorn Bringert, Johan Broberg, Paul Callaghan, Markus Forsberg, Ola Frid, Peter Gammie, Patrik Jansson, Kristofer Johannisson, Antti-Juhani Kaijanaho, Ulf Norell, Michael Pellauer and Aarne Ranta 2002 - 2010. Free software under GNU General Public License (GPL).",
    "maintainer": "Markus Forsberg <markus.forsberg@gu.se> Aarne Ranta <aarne@chalmers.se>",
    "author": "",
    "stability": "",
    "tested-with": [],
    "homepage": "http://www.cse.chalmers.se/research/group/Language-technology/BNFC/",
    "pkg-url": "",
    "bug-reports": "",
    "source-repos": [],
    "synopsis": "A compiler front-end generator.",
    "description": "The BNF Converter is a compiler construction tool generating a compiler front-end\nfrom a Labelled BNF grammar. It was originally written to generate Haskell,\nbut starting from Version 2.0, it can also be used for generating Java, C++, and C.\n\nGiven a Labelled BNF grammar the tool produces:\nan abstract syntax as a Haskell/C++/C module or Java directory,\na case skeleton for the abstract syntax in the same language,\nan Alex, JLex, or Flex lexer generator file,\na Happy, CUP, or Bison parser generator file,\na pretty-printer as a Haskell/Java/C++/C module,\na Latex file containing a readable specification of the language.",
    "category": "Development",
    "custom-fields": [
      [
        "x-revision",
        "2"
      ]
    ],
    "build-type-raw": "Simple",
    "custom-setup": null,
    "library": null,
    "sublibraries": [],
    "executables": [],
    "foreign-libs": [],
    "test-suites": [],
    "benchmarks": [],
    "data-files": [],
    "data-dir": ".",
    "extra-source-files": [
      "BNF.cf"
    ],
    "extra-tmp-files": [],
    "extra-doc-files": []
  },
  "executables": {
    "bnfc": {
      "condTreeData": {
        "name": "bnfc",
        "module-path": "Main.hs",
        "scope": "public",
        "build-info": {
          "buildable": true,
          "buildTools": [
            {
              "package-name": "alex",
              "include-renaming": "<3"
            },
            {
              "package-name": "happy",
              "include-renaming": "-any"
            }
          ],
          "buildToolDepends": [],
          "cppOptions": [],
          "asmOptions": [],
          "cmmOptions": [],
          "ccOptions": [],
          "cxxOptions": [],
          "ldOptions": [],
          "pkgconfigDepends": [],
          "frameworks": [],
          "extraFrameworkDirs": [],
          "asmSources": [],
          "cmmSources": [],
          "cSources": [],
          "cxxSources": [],
          "jsSources": [],
          "hsSourceDirs": [
            ".",
            "formats",
            "formats/haskell2",
            "formats/haskell-gadt",
            "formats/xml",
            "formats/profile",
            "formats/java",
            "formats/java1.5",
            "formats/cpp",
            "formats/c",
            "formats/ocaml",
            "formats/cpp_stl",
            "formats/c-sharp",
            "formats/f-sharp"
          ],
          "otherModules": [
            [
              "LexBNF"
            ],
            [
              "ParBNF"
            ],
            [
              "AbsBNF"
            ],
            [
              "PrintBNF"
            ],
            [
              "Utils"
            ],
            [
              "CF"
            ],
            [
              "ErrM"
            ],
            [
              "MultiView"
            ],
            [
              "TypeChecker"
            ],
            [
              "GetCF"
            ],
            [
              "NamedVariables"
            ],
            [
              "OOAbstract"
            ],
            [
              "CFtoLatex"
            ],
            [
              "CFtoXML"
            ],
            [
              "HaskellTop"
            ],
            [
              "RegToAlex"
            ],
            [
              "CFtoTemplate"
            ],
            [
              "CFtoAlex2"
            ],
            [
              "CFtoAlex"
            ],
            [
              "CFtoHappy"
            ],
            [
              "CFtoPrinter"
            ],
            [
              "CFtoAbstract"
            ],
            [
              "CFtoLayout"
            ],
            [
              "MkErrM"
            ],
            [
              "MkSharedString"
            ],
            [
              "ProfileTop"
            ],
            [
              "CFtoHappyProfile"
            ],
            [
              "HaskellTopGADT"
            ],
            [
              "HaskellGADTCommon"
            ],
            [
              "CFtoPrinterGADT"
            ],
            [
              "CFtoTemplateGADT"
            ],
            [
              "CFtoAbstractGADT"
            ],
            [
              "OCamlTop"
            ],
            [
              "OCamlUtil"
            ],
            [
              "CFtoOCamlTest"
            ],
            [
              "CFtoOCamlShow"
            ],
            [
              "CFtoOCamlPrinter"
            ],
            [
              "CFtoOCamlTemplate"
            ],
            [
              "CFtoOCamlAbs"
            ],
            [
              "CFtoOCamlYacc"
            ],
            [
              "CFtoOCamlLex"
            ],
            [
              "CTop"
            ],
            [
              "CFtoCPrinter"
            ],
            [
              "CFtoCSkel"
            ],
            [
              "CFtoBisonC"
            ],
            [
              "CFtoFlexC"
            ],
            [
              "CFtoCAbs"
            ],
            [
              "CFtoCVisitSkel"
            ],
            [
              "CPPTop"
            ],
            [
              "RegToFlex"
            ],
            [
              "CFtoFlex"
            ],
            [
              "CFtoBison"
            ],
            [
              "CFtoCPPPrinter"
            ],
            [
              "CFtoCPPAbs"
            ],
            [
              "STLTop"
            ],
            [
              "CFtoSTLPrinter"
            ],
            [
              "CFtoCVisitSkelSTL"
            ],
            [
              "CFtoBisonSTL"
            ],
            [
              "CFtoSTLAbs"
            ],
            [
              "CSharpTop"
            ],
            [
              "RegToGPLEX"
            ],
            [
              "CFtoGPLEX"
            ],
            [
              "CSharpUtils"
            ],
            [
              "CFtoCSharpPrinter"
            ],
            [
              "CAbstoCSharpAbs"
            ],
            [
              "CAbstoCSharpAbstractVisitSkeleton"
            ],
            [
              "CAbstoCSharpVisitSkeleton"
            ],
            [
              "CFtoGPPG"
            ],
            [
              "JavaTop"
            ],
            [
              "RegToJLex"
            ],
            [
              "CFtoCup"
            ],
            [
              "CFtoVisitSkel"
            ],
            [
              "CFtoJavaSkeleton"
            ],
            [
              "CFtoJavaPrinter"
            ],
            [
              "CFtoJavaAbs"
            ],
            [
              "CFtoJLex"
            ],
            [
              "JavaTop15"
            ],
            [
              "CFtoJavaAbs15"
            ],
            [
              "CFtoAllVisitor"
            ],
            [
              "CFtoFoldVisitor"
            ],
            [
              "CFtoAbstractVisitor"
            ],
            [
              "CFtoComposVisitor"
            ],
            [
              "CFtoVisitSkel15"
            ],
            [
              "CFtoJavaPrinter15"
            ],
            [
              "CFtoJLex15"
            ],
            [
              "CFtoCup15"
            ],
            [
              "FSharpTop"
            ]
          ],
          "virtualModules": [],
          "autogenModules": [],
          "defaultLanguage": null,
          "otherLanguages": [],
          "defaultExtensions": [],
          "otherExtensions": [],
          "oldExtensions": [],
          "extraLibs": [],
          "extraGHCiLibs": [],
          "extraBundledLibs": [],
          "extraLibFlavours": [],
          "extraDynLibFlavours": [],
          "extraLibDirs": [],
          "includeDirs": [],
          "includes": [],
          "autogenIncludes": [],
          "installIncludes": [],
          "options": [
            [],
            []
          ],
          "profOptions": [
            [],
            []
          ],
          "sharedOptions": [
            [],
            []
          ],
          "staticOptions": [
            [],
            []
          ],
          "customFieldsBI": [],
          "targetBuildDepends": [
            {
              "package-name": "haskell98",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "base",
              "version-range": ">=4 && <5",
              "library": [
                {}
              ]
            },
            {
              "package-name": "mtl",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "directory",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "array",
              "version-range": "-any",
              "library": [
                {}
              ]
            },
            {
              "package-name": "process",
              "version-range": "-any",
              "library": [
                {}
              ]
            }
          ],
          "mixins": []
        }
      },
      "condTreeConstraints": [
        {
          "package-name": "haskell98",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "base",
          "version-range": ">=4 && <5",
          "library": [
            {}
          ]
        },
        {
          "package-name": "mtl",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "directory",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "array",
          "version-range": "-any",
          "library": [
            {}
          ]
        },
        {
          "package-name": "process",
          "version-range": "-any",
          "library": [
            {}
          ]
        }
      ],
      "condTreeComponents": []
    }
  }
}
